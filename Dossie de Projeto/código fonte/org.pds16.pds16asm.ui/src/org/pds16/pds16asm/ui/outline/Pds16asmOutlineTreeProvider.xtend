/*
 * generated by Xtext 2.10.0-SNAPSHOT
 */
package org.pds16.pds16asm.ui.outline

import org.eclipse.emf.ecore.EObject
import org.eclipse.swt.graphics.Image
import org.eclipse.xtext.ui.editor.outline.IOutlineNode
import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider
import org.pds16.pds16asm.pds16asm.impl.LabelImpl
import org.pds16.pds16asm.pds16asm.impl.DirectiveImpl
import org.pds16.pds16asm.pds16asm.impl.BssImpl
import org.pds16.pds16asm.pds16asm.impl.DataImpl
import org.pds16.pds16asm.pds16asm.impl.EndImpl
import org.pds16.pds16asm.pds16asm.impl.TextImpl
import org.pds16.pds16asm.pds16asm.impl.EquImpl
import org.pds16.pds16asm.pds16asm.impl.OrgImpl
import org.pds16.pds16asm.pds16asm.impl.SectionImpl
import org.pds16.pds16asm.pds16asm.Directive
import org.pds16.pds16asm.pds16asm.Label
import org.pds16.pds16asm.pds16asm.Bss
import org.pds16.pds16asm.pds16asm.Data
import org.pds16.pds16asm.pds16asm.End
import org.pds16.pds16asm.pds16asm.Text
import org.pds16.pds16asm.pds16asm.Equ
import org.pds16.pds16asm.pds16asm.Org
import org.pds16.pds16asm.pds16asm.Section
import org.pds16.pds16asm.pds16asm.Set

/**
 * Customization of the default outline structure.
 *
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#outline
 */
class Pds16asmOutlineTreeProvider extends DefaultOutlineTreeProvider{

	override _createNode(IOutlineNode parentNode, EObject modelElement){					
		if (modelElement instanceof Label)
			setOutline(parentNode,modelElement)
		
		else if (modelElement instanceof Directive){
			var element = (modelElement as DirectiveImpl).value
			//filter instances to show on outline
			if(element instanceof Bss ||
				element instanceof Data ||
				element instanceof End ||
				element instanceof Text ||
				element instanceof Equ ||
				element instanceof Set ||
				element instanceof Org ||
				element instanceof Section){
					setOutline(parentNode,element)
			}
		}	
	}	
	
	/**
	 * Creates a new outline node and to the current element
	 * received by parameter
	 * 
	 * @param parentNode node associated to the outline view
	 * @param obj representation of an element of the grammar
	 */
	def setOutline(IOutlineNode parentNode, EObject obj){
		var Object text = textDispatcher.invoke(obj)
		if (text == null && isLeafDispatcher.invoke(obj))
			return
		var Image image = imageDispatcher.invoke(obj)
		createEObjectNode(parentNode, obj, image, text, true)
	}
}
