/*
 * generated by Xtext 2.9.2
 */
package org.pds16.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.pds16.services.Pds16asmGrammarAccess;

@SuppressWarnings("all")
public class Pds16asmSyntacticSequencer extends AbstractSyntacticSequencer {

	protected Pds16asmGrammarAccess grammarAccess;
	protected AbstractElementAlias match_Add_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1;
	protected AbstractElementAlias match_Add_Anl_Orl_Sub_Xrl_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1_or_AnlKeyword_0_0_or_AnlfKeyword_0_1_or_OrlKeyword_0_0_or_OrlfKeyword_0_1_or_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1_or_SubrKeyword_1_0_or_XrlKeyword_0_0_or_XrlfKeyword_0_1;
	protected AbstractElementAlias match_Add_Rr_Sub_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1_or_RrlKeyword_0_0_or_RrmKeyword_0_1_or_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1;
	protected AbstractElementAlias match_Add_Sub_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1_or_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1;
	protected AbstractElementAlias match_Add_Sub_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1_or_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1_or_SubrKeyword_1_0;
	protected AbstractElementAlias match_Anl_AnlKeyword_0_0_or_AnlfKeyword_0_1;
	protected AbstractElementAlias match_Anl_Orl_Xrl_AnlKeyword_0_0_or_AnlfKeyword_0_1_or_OrlKeyword_0_0_or_OrlfKeyword_0_1_or_XrlKeyword_0_0_or_XrlfKeyword_0_1;
	protected AbstractElementAlias match_Ascii___CommaKeyword_2_0_STRINGTerminalRuleCall_2_1__a;
	protected AbstractElementAlias match_Asciiz___CommaKeyword_2_0_STRINGTerminalRuleCall_2_1__a;
	protected AbstractElementAlias match_Byte___CommaKeyword_2_0_NumberParserRuleCall_2_1__a;
	protected AbstractElementAlias match_Direct_HEXTerminalRuleCall_2_1_or_IDTerminalRuleCall_2_2_or_INTTerminalRuleCall_2_0;
	protected AbstractElementAlias match_Directive_BssKeyword_0_or_DataKeyword_1_or_EndKeyword_2_or_TextKeyword_3;
	protected AbstractElementAlias match_Equ_Org_OrgKeyword_0_or___EquKeyword_0_IDTerminalRuleCall_1_CommaKeyword_2__;
	protected AbstractElementAlias match_JumpOp_JaeKeyword_0_7_or_JblKeyword_0_5_or_JcKeyword_0_4_or_JeKeyword_0_1_or_JmpKeyword_0_8_or_JmplKeyword_0_9_or_JncKeyword_0_6_or_JneKeyword_0_3_or_JnzKeyword_0_2_or_JzKeyword_0_0;
	protected AbstractElementAlias match_LdBasedIndexed_LdKeyword_0_0_or_LdbKeyword_0_1;
	protected AbstractElementAlias match_LdBasedIndexed_StBasedIndexed_LdKeyword_0_0_or_LdbKeyword_0_1_or_StKeyword_0_0_or_StbKeyword_0_1;
	protected AbstractElementAlias match_LdDirect_LdKeyword_0_0_or_LdbKeyword_0_1;
	protected AbstractElementAlias match_LdDirect_StDirect_LdKeyword_0_0_or_LdbKeyword_0_1_or_StKeyword_0_0_or_StbKeyword_0_1;
	protected AbstractElementAlias match_LdImmediate_LdiKeyword_0_0_or_LdihKeyword_0_1;
	protected AbstractElementAlias match_LdIndexed_LdKeyword_0_0_or_LdbKeyword_0_1;
	protected AbstractElementAlias match_LdIndexed_StIndexed_LdKeyword_0_0_or_LdbKeyword_0_1_or_StKeyword_0_0_or_StbKeyword_0_1;
	protected AbstractElementAlias match_LowOrHight_HighKeyword_1_1_or_LowKeyword_1_0;
	protected AbstractElementAlias match_Not_NotKeyword_0_0_or_NotfKeyword_0_1;
	protected AbstractElementAlias match_Not_Rc_NotKeyword_0_0_or_NotfKeyword_0_1_or_RclKeyword_0_1_or_RcrKeyword_0_0;
	protected AbstractElementAlias match_Orl_OrlKeyword_0_0_or_OrlfKeyword_0_1;
	protected AbstractElementAlias match_Rc_RclKeyword_0_1_or_RcrKeyword_0_0;
	protected AbstractElementAlias match_Rr_RrlKeyword_0_0_or_RrmKeyword_0_1;
	protected AbstractElementAlias match_Shl_Shr_ShlKeyword_0_or_ShrKeyword_0;
	protected AbstractElementAlias match_StBasedIndexed_StKeyword_0_0_or_StbKeyword_0_1;
	protected AbstractElementAlias match_StDirect_StKeyword_0_0_or_StbKeyword_0_1;
	protected AbstractElementAlias match_StIndexed_StKeyword_0_0_or_StbKeyword_0_1;
	protected AbstractElementAlias match_Sub_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1;
	protected AbstractElementAlias match_Sub_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1_or_SubrKeyword_1_0;
	protected AbstractElementAlias match_Word___CommaKeyword_2_0___IDTerminalRuleCall_2_1_1_or_NumberParserRuleCall_2_1_0____a;
	protected AbstractElementAlias match_Xrl_XrlKeyword_0_0_or_XrlfKeyword_0_1;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (Pds16asmGrammarAccess) access;
		match_Add_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getAddAccess().getAdcKeyword_0_2()), new TokenAlias(false, false, grammarAccess.getAddAccess().getAdcfKeyword_0_3()), new TokenAlias(false, false, grammarAccess.getAddAccess().getAddKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getAddAccess().getAddfKeyword_0_1()));
		match_Add_Anl_Orl_Sub_Xrl_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1_or_AnlKeyword_0_0_or_AnlfKeyword_0_1_or_OrlKeyword_0_0_or_OrlfKeyword_0_1_or_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1_or_SubrKeyword_1_0_or_XrlKeyword_0_0_or_XrlfKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getAddAccess().getAdcKeyword_0_2()), new TokenAlias(false, false, grammarAccess.getAddAccess().getAdcfKeyword_0_3()), new TokenAlias(false, false, grammarAccess.getAddAccess().getAddKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getAddAccess().getAddfKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getAnlAccess().getAnlKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getAnlAccess().getAnlfKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getOrlAccess().getOrlKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getOrlAccess().getOrlfKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSbbKeyword_0_0_2()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSbbfKeyword_0_0_3()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSubKeyword_0_0_0()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSubfKeyword_0_0_1()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSubrKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getXrlAccess().getXrlKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getXrlAccess().getXrlfKeyword_0_1()));
		match_Add_Rr_Sub_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1_or_RrlKeyword_0_0_or_RrmKeyword_0_1_or_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getAddAccess().getAdcKeyword_0_2()), new TokenAlias(false, false, grammarAccess.getAddAccess().getAdcfKeyword_0_3()), new TokenAlias(false, false, grammarAccess.getAddAccess().getAddKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getAddAccess().getAddfKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getRrAccess().getRrlKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getRrAccess().getRrmKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSbbKeyword_0_0_2()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSbbfKeyword_0_0_3()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSubKeyword_0_0_0()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSubfKeyword_0_0_1()));
		match_Add_Sub_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1_or_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getAddAccess().getAdcKeyword_0_2()), new TokenAlias(false, false, grammarAccess.getAddAccess().getAdcfKeyword_0_3()), new TokenAlias(false, false, grammarAccess.getAddAccess().getAddKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getAddAccess().getAddfKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSbbKeyword_0_0_2()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSbbfKeyword_0_0_3()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSubKeyword_0_0_0()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSubfKeyword_0_0_1()));
		match_Add_Sub_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1_or_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1_or_SubrKeyword_1_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getAddAccess().getAdcKeyword_0_2()), new TokenAlias(false, false, grammarAccess.getAddAccess().getAdcfKeyword_0_3()), new TokenAlias(false, false, grammarAccess.getAddAccess().getAddKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getAddAccess().getAddfKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSbbKeyword_0_0_2()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSbbfKeyword_0_0_3()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSubKeyword_0_0_0()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSubfKeyword_0_0_1()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSubrKeyword_1_0()));
		match_Anl_AnlKeyword_0_0_or_AnlfKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getAnlAccess().getAnlKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getAnlAccess().getAnlfKeyword_0_1()));
		match_Anl_Orl_Xrl_AnlKeyword_0_0_or_AnlfKeyword_0_1_or_OrlKeyword_0_0_or_OrlfKeyword_0_1_or_XrlKeyword_0_0_or_XrlfKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getAnlAccess().getAnlKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getAnlAccess().getAnlfKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getOrlAccess().getOrlKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getOrlAccess().getOrlfKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getXrlAccess().getXrlKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getXrlAccess().getXrlfKeyword_0_1()));
		match_Ascii___CommaKeyword_2_0_STRINGTerminalRuleCall_2_1__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getAsciiAccess().getCommaKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getAsciiAccess().getSTRINGTerminalRuleCall_2_1()));
		match_Asciiz___CommaKeyword_2_0_STRINGTerminalRuleCall_2_1__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getAsciizAccess().getCommaKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getAsciizAccess().getSTRINGTerminalRuleCall_2_1()));
		match_Byte___CommaKeyword_2_0_NumberParserRuleCall_2_1__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getByteAccess().getCommaKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getByteAccess().getNumberParserRuleCall_2_1()));
		match_Direct_HEXTerminalRuleCall_2_1_or_IDTerminalRuleCall_2_2_or_INTTerminalRuleCall_2_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getDirectAccess().getHEXTerminalRuleCall_2_1()), new TokenAlias(false, false, grammarAccess.getDirectAccess().getIDTerminalRuleCall_2_2()), new TokenAlias(false, false, grammarAccess.getDirectAccess().getINTTerminalRuleCall_2_0()));
		match_Directive_BssKeyword_0_or_DataKeyword_1_or_EndKeyword_2_or_TextKeyword_3 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getDirectiveAccess().getBssKeyword_0()), new TokenAlias(false, false, grammarAccess.getDirectiveAccess().getDataKeyword_1()), new TokenAlias(false, false, grammarAccess.getDirectiveAccess().getEndKeyword_2()), new TokenAlias(false, false, grammarAccess.getDirectiveAccess().getTextKeyword_3()));
		match_Equ_Org_OrgKeyword_0_or___EquKeyword_0_IDTerminalRuleCall_1_CommaKeyword_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getEquAccess().getEquKeyword_0()), new TokenAlias(false, false, grammarAccess.getEquAccess().getIDTerminalRuleCall_1()), new TokenAlias(false, false, grammarAccess.getEquAccess().getCommaKeyword_2())), new TokenAlias(false, false, grammarAccess.getOrgAccess().getOrgKeyword_0()));
		match_JumpOp_JaeKeyword_0_7_or_JblKeyword_0_5_or_JcKeyword_0_4_or_JeKeyword_0_1_or_JmpKeyword_0_8_or_JmplKeyword_0_9_or_JncKeyword_0_6_or_JneKeyword_0_3_or_JnzKeyword_0_2_or_JzKeyword_0_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getJumpOpAccess().getJaeKeyword_0_7()), new TokenAlias(false, false, grammarAccess.getJumpOpAccess().getJblKeyword_0_5()), new TokenAlias(false, false, grammarAccess.getJumpOpAccess().getJcKeyword_0_4()), new TokenAlias(false, false, grammarAccess.getJumpOpAccess().getJeKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getJumpOpAccess().getJmpKeyword_0_8()), new TokenAlias(false, false, grammarAccess.getJumpOpAccess().getJmplKeyword_0_9()), new TokenAlias(false, false, grammarAccess.getJumpOpAccess().getJncKeyword_0_6()), new TokenAlias(false, false, grammarAccess.getJumpOpAccess().getJneKeyword_0_3()), new TokenAlias(false, false, grammarAccess.getJumpOpAccess().getJnzKeyword_0_2()), new TokenAlias(false, false, grammarAccess.getJumpOpAccess().getJzKeyword_0_0()));
		match_LdBasedIndexed_LdKeyword_0_0_or_LdbKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getLdBasedIndexedAccess().getLdKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getLdBasedIndexedAccess().getLdbKeyword_0_1()));
		match_LdBasedIndexed_StBasedIndexed_LdKeyword_0_0_or_LdbKeyword_0_1_or_StKeyword_0_0_or_StbKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getLdBasedIndexedAccess().getLdKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getLdBasedIndexedAccess().getLdbKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getStBasedIndexedAccess().getStKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getStBasedIndexedAccess().getStbKeyword_0_1()));
		match_LdDirect_LdKeyword_0_0_or_LdbKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getLdDirectAccess().getLdKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getLdDirectAccess().getLdbKeyword_0_1()));
		match_LdDirect_StDirect_LdKeyword_0_0_or_LdbKeyword_0_1_or_StKeyword_0_0_or_StbKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getLdDirectAccess().getLdKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getLdDirectAccess().getLdbKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getStDirectAccess().getStKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getStDirectAccess().getStbKeyword_0_1()));
		match_LdImmediate_LdiKeyword_0_0_or_LdihKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getLdImmediateAccess().getLdiKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getLdImmediateAccess().getLdihKeyword_0_1()));
		match_LdIndexed_LdKeyword_0_0_or_LdbKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getLdIndexedAccess().getLdKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getLdIndexedAccess().getLdbKeyword_0_1()));
		match_LdIndexed_StIndexed_LdKeyword_0_0_or_LdbKeyword_0_1_or_StKeyword_0_0_or_StbKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getLdIndexedAccess().getLdKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getLdIndexedAccess().getLdbKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getStIndexedAccess().getStKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getStIndexedAccess().getStbKeyword_0_1()));
		match_LowOrHight_HighKeyword_1_1_or_LowKeyword_1_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getLowOrHightAccess().getHighKeyword_1_1()), new TokenAlias(false, false, grammarAccess.getLowOrHightAccess().getLowKeyword_1_0()));
		match_Not_NotKeyword_0_0_or_NotfKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getNotAccess().getNotKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getNotAccess().getNotfKeyword_0_1()));
		match_Not_Rc_NotKeyword_0_0_or_NotfKeyword_0_1_or_RclKeyword_0_1_or_RcrKeyword_0_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getNotAccess().getNotKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getNotAccess().getNotfKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getRcAccess().getRclKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getRcAccess().getRcrKeyword_0_0()));
		match_Orl_OrlKeyword_0_0_or_OrlfKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getOrlAccess().getOrlKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getOrlAccess().getOrlfKeyword_0_1()));
		match_Rc_RclKeyword_0_1_or_RcrKeyword_0_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getRcAccess().getRclKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getRcAccess().getRcrKeyword_0_0()));
		match_Rr_RrlKeyword_0_0_or_RrmKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getRrAccess().getRrlKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getRrAccess().getRrmKeyword_0_1()));
		match_Shl_Shr_ShlKeyword_0_or_ShrKeyword_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getShlAccess().getShlKeyword_0()), new TokenAlias(false, false, grammarAccess.getShrAccess().getShrKeyword_0()));
		match_StBasedIndexed_StKeyword_0_0_or_StbKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getStBasedIndexedAccess().getStKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getStBasedIndexedAccess().getStbKeyword_0_1()));
		match_StDirect_StKeyword_0_0_or_StbKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getStDirectAccess().getStKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getStDirectAccess().getStbKeyword_0_1()));
		match_StIndexed_StKeyword_0_0_or_StbKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getStIndexedAccess().getStKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getStIndexedAccess().getStbKeyword_0_1()));
		match_Sub_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getSubAccess().getSbbKeyword_0_0_2()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSbbfKeyword_0_0_3()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSubKeyword_0_0_0()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSubfKeyword_0_0_1()));
		match_Sub_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1_or_SubrKeyword_1_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getSubAccess().getSbbKeyword_0_0_2()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSbbfKeyword_0_0_3()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSubKeyword_0_0_0()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSubfKeyword_0_0_1()), new TokenAlias(false, false, grammarAccess.getSubAccess().getSubrKeyword_1_0()));
		match_Word___CommaKeyword_2_0___IDTerminalRuleCall_2_1_1_or_NumberParserRuleCall_2_1_0____a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getWordAccess().getCommaKeyword_2_0()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getWordAccess().getIDTerminalRuleCall_2_1_1()), new TokenAlias(false, false, grammarAccess.getWordAccess().getNumberParserRuleCall_2_1_0())));
		match_Xrl_XrlKeyword_0_0_or_XrlfKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getXrlAccess().getXrlKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getXrlAccess().getXrlfKeyword_0_1()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getHEXRule())
			return getHEXToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getIDRule())
			return getIDToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getINTRule())
			return getINTToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getNumberRule())
			return getNumberToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getSTRINGRule())
			return getSTRINGToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * terminal HEX : ('0x'|'0X')(('0'..'9')|('a'..'f')|('A'..'F'))+;
	 */
	protected String getHEXToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "0x";
	}
	
	/**
	 * terminal ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	 */
	protected String getIDToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	/**
	 * terminal INT returns ecore::EInt: SIGN? ('1'..'9')('0'..'9')*;
	 */
	protected String getINTToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	/**
	 * Number: (INT | HEX | OCT | BIN | CHAR);
	 */
	protected String getNumberToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	/**
	 * terminal STRING	: 
	 * 			'"' ( '\\' .  | !('\\'|'"') )* '"' |
	 * 			"'" ( '\\' .  | !('\\'|"'") )* "'"
	 * 		;
	 */
	protected String getSTRINGToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "\"\"";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_Add_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1.equals(syntax))
				emit_Add_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Add_Anl_Orl_Sub_Xrl_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1_or_AnlKeyword_0_0_or_AnlfKeyword_0_1_or_OrlKeyword_0_0_or_OrlfKeyword_0_1_or_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1_or_SubrKeyword_1_0_or_XrlKeyword_0_0_or_XrlfKeyword_0_1.equals(syntax))
				emit_Add_Anl_Orl_Sub_Xrl_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1_or_AnlKeyword_0_0_or_AnlfKeyword_0_1_or_OrlKeyword_0_0_or_OrlfKeyword_0_1_or_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1_or_SubrKeyword_1_0_or_XrlKeyword_0_0_or_XrlfKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Add_Rr_Sub_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1_or_RrlKeyword_0_0_or_RrmKeyword_0_1_or_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1.equals(syntax))
				emit_Add_Rr_Sub_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1_or_RrlKeyword_0_0_or_RrmKeyword_0_1_or_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Add_Sub_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1_or_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1.equals(syntax))
				emit_Add_Sub_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1_or_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Add_Sub_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1_or_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1_or_SubrKeyword_1_0.equals(syntax))
				emit_Add_Sub_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1_or_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1_or_SubrKeyword_1_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Anl_AnlKeyword_0_0_or_AnlfKeyword_0_1.equals(syntax))
				emit_Anl_AnlKeyword_0_0_or_AnlfKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Anl_Orl_Xrl_AnlKeyword_0_0_or_AnlfKeyword_0_1_or_OrlKeyword_0_0_or_OrlfKeyword_0_1_or_XrlKeyword_0_0_or_XrlfKeyword_0_1.equals(syntax))
				emit_Anl_Orl_Xrl_AnlKeyword_0_0_or_AnlfKeyword_0_1_or_OrlKeyword_0_0_or_OrlfKeyword_0_1_or_XrlKeyword_0_0_or_XrlfKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Ascii___CommaKeyword_2_0_STRINGTerminalRuleCall_2_1__a.equals(syntax))
				emit_Ascii___CommaKeyword_2_0_STRINGTerminalRuleCall_2_1__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Asciiz___CommaKeyword_2_0_STRINGTerminalRuleCall_2_1__a.equals(syntax))
				emit_Asciiz___CommaKeyword_2_0_STRINGTerminalRuleCall_2_1__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Byte___CommaKeyword_2_0_NumberParserRuleCall_2_1__a.equals(syntax))
				emit_Byte___CommaKeyword_2_0_NumberParserRuleCall_2_1__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Direct_HEXTerminalRuleCall_2_1_or_IDTerminalRuleCall_2_2_or_INTTerminalRuleCall_2_0.equals(syntax))
				emit_Direct_HEXTerminalRuleCall_2_1_or_IDTerminalRuleCall_2_2_or_INTTerminalRuleCall_2_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Directive_BssKeyword_0_or_DataKeyword_1_or_EndKeyword_2_or_TextKeyword_3.equals(syntax))
				emit_Directive_BssKeyword_0_or_DataKeyword_1_or_EndKeyword_2_or_TextKeyword_3(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Equ_Org_OrgKeyword_0_or___EquKeyword_0_IDTerminalRuleCall_1_CommaKeyword_2__.equals(syntax))
				emit_Equ_Org_OrgKeyword_0_or___EquKeyword_0_IDTerminalRuleCall_1_CommaKeyword_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_JumpOp_JaeKeyword_0_7_or_JblKeyword_0_5_or_JcKeyword_0_4_or_JeKeyword_0_1_or_JmpKeyword_0_8_or_JmplKeyword_0_9_or_JncKeyword_0_6_or_JneKeyword_0_3_or_JnzKeyword_0_2_or_JzKeyword_0_0.equals(syntax))
				emit_JumpOp_JaeKeyword_0_7_or_JblKeyword_0_5_or_JcKeyword_0_4_or_JeKeyword_0_1_or_JmpKeyword_0_8_or_JmplKeyword_0_9_or_JncKeyword_0_6_or_JneKeyword_0_3_or_JnzKeyword_0_2_or_JzKeyword_0_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LdBasedIndexed_LdKeyword_0_0_or_LdbKeyword_0_1.equals(syntax))
				emit_LdBasedIndexed_LdKeyword_0_0_or_LdbKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LdBasedIndexed_StBasedIndexed_LdKeyword_0_0_or_LdbKeyword_0_1_or_StKeyword_0_0_or_StbKeyword_0_1.equals(syntax))
				emit_LdBasedIndexed_StBasedIndexed_LdKeyword_0_0_or_LdbKeyword_0_1_or_StKeyword_0_0_or_StbKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LdDirect_LdKeyword_0_0_or_LdbKeyword_0_1.equals(syntax))
				emit_LdDirect_LdKeyword_0_0_or_LdbKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LdDirect_StDirect_LdKeyword_0_0_or_LdbKeyword_0_1_or_StKeyword_0_0_or_StbKeyword_0_1.equals(syntax))
				emit_LdDirect_StDirect_LdKeyword_0_0_or_LdbKeyword_0_1_or_StKeyword_0_0_or_StbKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LdImmediate_LdiKeyword_0_0_or_LdihKeyword_0_1.equals(syntax))
				emit_LdImmediate_LdiKeyword_0_0_or_LdihKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LdIndexed_LdKeyword_0_0_or_LdbKeyword_0_1.equals(syntax))
				emit_LdIndexed_LdKeyword_0_0_or_LdbKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LdIndexed_StIndexed_LdKeyword_0_0_or_LdbKeyword_0_1_or_StKeyword_0_0_or_StbKeyword_0_1.equals(syntax))
				emit_LdIndexed_StIndexed_LdKeyword_0_0_or_LdbKeyword_0_1_or_StKeyword_0_0_or_StbKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_LowOrHight_HighKeyword_1_1_or_LowKeyword_1_0.equals(syntax))
				emit_LowOrHight_HighKeyword_1_1_or_LowKeyword_1_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Not_NotKeyword_0_0_or_NotfKeyword_0_1.equals(syntax))
				emit_Not_NotKeyword_0_0_or_NotfKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Not_Rc_NotKeyword_0_0_or_NotfKeyword_0_1_or_RclKeyword_0_1_or_RcrKeyword_0_0.equals(syntax))
				emit_Not_Rc_NotKeyword_0_0_or_NotfKeyword_0_1_or_RclKeyword_0_1_or_RcrKeyword_0_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Orl_OrlKeyword_0_0_or_OrlfKeyword_0_1.equals(syntax))
				emit_Orl_OrlKeyword_0_0_or_OrlfKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Rc_RclKeyword_0_1_or_RcrKeyword_0_0.equals(syntax))
				emit_Rc_RclKeyword_0_1_or_RcrKeyword_0_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Rr_RrlKeyword_0_0_or_RrmKeyword_0_1.equals(syntax))
				emit_Rr_RrlKeyword_0_0_or_RrmKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Shl_Shr_ShlKeyword_0_or_ShrKeyword_0.equals(syntax))
				emit_Shl_Shr_ShlKeyword_0_or_ShrKeyword_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_StBasedIndexed_StKeyword_0_0_or_StbKeyword_0_1.equals(syntax))
				emit_StBasedIndexed_StKeyword_0_0_or_StbKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_StDirect_StKeyword_0_0_or_StbKeyword_0_1.equals(syntax))
				emit_StDirect_StKeyword_0_0_or_StbKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_StIndexed_StKeyword_0_0_or_StbKeyword_0_1.equals(syntax))
				emit_StIndexed_StKeyword_0_0_or_StbKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Sub_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1.equals(syntax))
				emit_Sub_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Sub_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1_or_SubrKeyword_1_0.equals(syntax))
				emit_Sub_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1_or_SubrKeyword_1_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Word___CommaKeyword_2_0___IDTerminalRuleCall_2_1_1_or_NumberParserRuleCall_2_1_0____a.equals(syntax))
				emit_Word___CommaKeyword_2_0___IDTerminalRuleCall_2_1_1_or_NumberParserRuleCall_2_1_0____a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Xrl_XrlKeyword_0_0_or_XrlfKeyword_0_1.equals(syntax))
				emit_Xrl_XrlKeyword_0_0_or_XrlfKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     'add' | 'addf' | 'adc' | 'adcf'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) rd=Registers
	 */
	protected void emit_Add_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         'anl' | 
	  *         'anlf' | 
	  *         'orl' | 
	  *         'orlf' | 
	  *         'xrl' | 
	  *         'xrlf' | 
	  *         'add' | 
	  *         'addf' | 
	  *         'adc' | 
	  *         'adcf' | 
	  *         'sub' | 
	  *         'subf' | 
	  *         'sbb' | 
	  *         'sbbf' | 
	  *         'subr'
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) rd=Registers
	 */
	protected void emit_Add_Anl_Orl_Sub_Xrl_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1_or_AnlKeyword_0_0_or_AnlfKeyword_0_1_or_OrlKeyword_0_0_or_OrlfKeyword_0_1_or_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1_or_SubrKeyword_1_0_or_XrlKeyword_0_0_or_XrlfKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         'rrl' | 
	  *         'rrm' | 
	  *         'add' | 
	  *         'addf' | 
	  *         'adc' | 
	  *         'adcf' | 
	  *         'sub' | 
	  *         'subf' | 
	  *         'sbb' | 
	  *         'sbbf'
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) rd=Registers
	 */
	protected void emit_Add_Rr_Sub_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1_or_RrlKeyword_0_0_or_RrmKeyword_0_1_or_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         'add' | 
	  *         'addf' | 
	  *         'adc' | 
	  *         'adcf' | 
	  *         'sub' | 
	  *         'subf' | 
	  *         'sbb' | 
	  *         'sbbf'
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) rd=Registers
	 */
	protected void emit_Add_Sub_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1_or_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         'add' | 
	  *         'addf' | 
	  *         'adc' | 
	  *         'adcf' | 
	  *         'sub' | 
	  *         'subf' | 
	  *         'sbb' | 
	  *         'sbbf' | 
	  *         'subr'
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) rd=Registers
	 */
	protected void emit_Add_Sub_AdcKeyword_0_2_or_AdcfKeyword_0_3_or_AddKeyword_0_0_or_AddfKeyword_0_1_or_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1_or_SubrKeyword_1_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'anl' | 'anlf'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) rd=Registers
	 */
	protected void emit_Anl_AnlKeyword_0_0_or_AnlfKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         'anl' | 
	  *         'anlf' | 
	  *         'orl' | 
	  *         'orlf' | 
	  *         'xrl' | 
	  *         'xrlf'
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) rd=Registers
	 */
	protected void emit_Anl_Orl_Xrl_AnlKeyword_0_0_or_AnlfKeyword_0_1_or_OrlKeyword_0_0_or_OrlfKeyword_0_1_or_XrlKeyword_0_0_or_XrlfKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (',' STRING)*
	 *
	 * This ambiguous syntax occurs at:
	 *     value=STRING (ambiguity) (rule end)
	 */
	protected void emit_Ascii___CommaKeyword_2_0_STRINGTerminalRuleCall_2_1__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (',' STRING)*
	 *
	 * This ambiguous syntax occurs at:
	 *     value=STRING (ambiguity) (rule end)
	 */
	protected void emit_Asciiz___CommaKeyword_2_0_STRINGTerminalRuleCall_2_1__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (',' Number)*
	 *
	 * This ambiguous syntax occurs at:
	 *     value1=Number (ambiguity) (rule end)
	 */
	protected void emit_Byte___CommaKeyword_2_0_NumberParserRuleCall_2_1__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     INT | HEX | ID
	 *
	 * This ambiguous syntax occurs at:
	 *     register=Registers ',' (ambiguity) (rule end)
	 */
	protected void emit_Direct_HEXTerminalRuleCall_2_1_or_IDTerminalRuleCall_2_2_or_INTTerminalRuleCall_2_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '.bss' | '.data' | '.end' | '.text'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_Directive_BssKeyword_0_or_DataKeyword_1_or_EndKeyword_2_or_TextKeyword_3(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '.org' | ('.equ' ID ',')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) value1=ID
	 *     (rule start) (ambiguity) value1=Number
	 */
	protected void emit_Equ_Org_OrgKeyword_0_or___EquKeyword_0_IDTerminalRuleCall_1_CommaKeyword_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         'jz' | 
	  *         'je' | 
	  *         'jnz' | 
	  *         'jne' | 
	  *         'jc' | 
	  *         'jbl' | 
	  *         'jnc' | 
	  *         'jae' | 
	  *         'jmp' | 
	  *         'jmpl'
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '$' (rule start)
	 *     (rule start) (ambiguity) op=ID
	 *     (rule start) (ambiguity) rbx=Registers
	 */
	protected void emit_JumpOp_JaeKeyword_0_7_or_JblKeyword_0_5_or_JcKeyword_0_4_or_JeKeyword_0_1_or_JmpKeyword_0_8_or_JmplKeyword_0_9_or_JncKeyword_0_6_or_JneKeyword_0_3_or_JnzKeyword_0_2_or_JzKeyword_0_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ld' | 'ldb'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) value='PSW'
	 *     (rule start) (ambiguity) value='r0'
	 *     (rule start) (ambiguity) value='r1'
	 *     (rule start) (ambiguity) value='r2'
	 *     (rule start) (ambiguity) value='r3'
	 *     (rule start) (ambiguity) value='r4'
	 *     (rule start) (ambiguity) value='r5'
	 *     (rule start) (ambiguity) value='r6'
	 *     (rule start) (ambiguity) value='r7'
	 */
	protected void emit_LdBasedIndexed_LdKeyword_0_0_or_LdbKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ld' | 'ldb' | 'st' | 'stb'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) value='PSW'
	 *     (rule start) (ambiguity) value='r0'
	 *     (rule start) (ambiguity) value='r1'
	 *     (rule start) (ambiguity) value='r2'
	 *     (rule start) (ambiguity) value='r3'
	 *     (rule start) (ambiguity) value='r4'
	 *     (rule start) (ambiguity) value='r5'
	 *     (rule start) (ambiguity) value='r6'
	 *     (rule start) (ambiguity) value='r7'
	 */
	protected void emit_LdBasedIndexed_StBasedIndexed_LdKeyword_0_0_or_LdbKeyword_0_1_or_StKeyword_0_0_or_StbKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ld' | 'ldb'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) register=Registers
	 */
	protected void emit_LdDirect_LdKeyword_0_0_or_LdbKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ld' | 'ldb' | 'st' | 'stb'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) register=Registers
	 */
	protected void emit_LdDirect_StDirect_LdKeyword_0_0_or_LdbKeyword_0_1_or_StKeyword_0_0_or_StbKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ldi' | 'ldih'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) register=Registers
	 */
	protected void emit_LdImmediate_LdiKeyword_0_0_or_LdihKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ld' | 'ldb'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) rd=Registers
	 */
	protected void emit_LdIndexed_LdKeyword_0_0_or_LdbKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'ld' | 'ldb' | 'st' | 'stb'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) rd=Registers
	 */
	protected void emit_LdIndexed_StIndexed_LdKeyword_0_0_or_LdbKeyword_0_1_or_StKeyword_0_0_or_StbKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'low' | 'high'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) '#' (ambiguity) '(' value1=ID
	 *     (rule start) '#' (ambiguity) '(' value1=Number
	 */
	protected void emit_LowOrHight_HighKeyword_1_1_or_LowKeyword_1_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'not' | 'notf'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) rd=Registers
	 */
	protected void emit_Not_NotKeyword_0_0_or_NotfKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'not' | 'notf' | 'rcr' | 'rcl'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) rd=Registers
	 */
	protected void emit_Not_Rc_NotKeyword_0_0_or_NotfKeyword_0_1_or_RclKeyword_0_1_or_RcrKeyword_0_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'orl' | 'orlf'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) rd=Registers
	 */
	protected void emit_Orl_OrlKeyword_0_0_or_OrlfKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'rcr' | 'rcl'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) rd=Registers
	 */
	protected void emit_Rc_RclKeyword_0_1_or_RcrKeyword_0_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'rrl' | 'rrm'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) rd=Registers
	 */
	protected void emit_Rr_RrlKeyword_0_0_or_RrmKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'shl' | 'shr'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) rd=Registers
	 */
	protected void emit_Shl_Shr_ShlKeyword_0_or_ShrKeyword_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'st' | 'stb'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) value='PSW'
	 *     (rule start) (ambiguity) value='r0'
	 *     (rule start) (ambiguity) value='r1'
	 *     (rule start) (ambiguity) value='r2'
	 *     (rule start) (ambiguity) value='r3'
	 *     (rule start) (ambiguity) value='r4'
	 *     (rule start) (ambiguity) value='r5'
	 *     (rule start) (ambiguity) value='r6'
	 *     (rule start) (ambiguity) value='r7'
	 */
	protected void emit_StBasedIndexed_StKeyword_0_0_or_StbKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'st' | 'stb'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) register=Registers
	 */
	protected void emit_StDirect_StKeyword_0_0_or_StbKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'st' | 'stb'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) rd=Registers
	 */
	protected void emit_StIndexed_StKeyword_0_0_or_StbKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'sub' | 'subf' | 'sbb' | 'sbbf'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) rd=Registers
	 */
	protected void emit_Sub_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'sub' | 'subf' | 'sbb' | 'sbbf' | 'subr'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) rd=Registers
	 */
	protected void emit_Sub_SbbKeyword_0_0_2_or_SbbfKeyword_0_0_3_or_SubKeyword_0_0_0_or_SubfKeyword_0_0_1_or_SubrKeyword_1_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (',' (Number | ID))*
	 *
	 * This ambiguous syntax occurs at:
	 *     value1=ID (ambiguity) (rule end)
	 *     value1=Number (ambiguity) (rule end)
	 */
	protected void emit_Word___CommaKeyword_2_0___IDTerminalRuleCall_2_1_1_or_NumberParserRuleCall_2_1_0____a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'xrl' | 'xrlf'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) rd=Registers
	 */
	protected void emit_Xrl_XrlKeyword_0_0_or_XrlfKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
