/**
 * generated by Xtext 2.9.2
 */
package org.pds16.pds16asm.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.pds16.pds16asm.OperationWithOffset;
import org.pds16.pds16asm.Pds16asmPackage;
import org.pds16.pds16asm.Registers;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Operation With Offset</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.pds16.pds16asm.impl.OperationWithOffsetImpl#getRbx <em>Rbx</em>}</li>
 *   <li>{@link org.pds16.pds16asm.impl.OperationWithOffsetImpl#getOffset8 <em>Offset8</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class OperationWithOffsetImpl extends JumpOpImpl implements OperationWithOffset
{
  /**
   * The cached value of the '{@link #getRbx() <em>Rbx</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRbx()
   * @generated
   * @ordered
   */
  protected Registers rbx;

  /**
   * The default value of the '{@link #getOffset8() <em>Offset8</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOffset8()
   * @generated
   * @ordered
   */
  protected static final String OFFSET8_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOffset8() <em>Offset8</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOffset8()
   * @generated
   * @ordered
   */
  protected String offset8 = OFFSET8_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OperationWithOffsetImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return Pds16asmPackage.Literals.OPERATION_WITH_OFFSET;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Registers getRbx()
  {
    return rbx;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRbx(Registers newRbx, NotificationChain msgs)
  {
    Registers oldRbx = rbx;
    rbx = newRbx;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Pds16asmPackage.OPERATION_WITH_OFFSET__RBX, oldRbx, newRbx);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRbx(Registers newRbx)
  {
    if (newRbx != rbx)
    {
      NotificationChain msgs = null;
      if (rbx != null)
        msgs = ((InternalEObject)rbx).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Pds16asmPackage.OPERATION_WITH_OFFSET__RBX, null, msgs);
      if (newRbx != null)
        msgs = ((InternalEObject)newRbx).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Pds16asmPackage.OPERATION_WITH_OFFSET__RBX, null, msgs);
      msgs = basicSetRbx(newRbx, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Pds16asmPackage.OPERATION_WITH_OFFSET__RBX, newRbx, newRbx));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getOffset8()
  {
    return offset8;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOffset8(String newOffset8)
  {
    String oldOffset8 = offset8;
    offset8 = newOffset8;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Pds16asmPackage.OPERATION_WITH_OFFSET__OFFSET8, oldOffset8, offset8));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case Pds16asmPackage.OPERATION_WITH_OFFSET__RBX:
        return basicSetRbx(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case Pds16asmPackage.OPERATION_WITH_OFFSET__RBX:
        return getRbx();
      case Pds16asmPackage.OPERATION_WITH_OFFSET__OFFSET8:
        return getOffset8();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case Pds16asmPackage.OPERATION_WITH_OFFSET__RBX:
        setRbx((Registers)newValue);
        return;
      case Pds16asmPackage.OPERATION_WITH_OFFSET__OFFSET8:
        setOffset8((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case Pds16asmPackage.OPERATION_WITH_OFFSET__RBX:
        setRbx((Registers)null);
        return;
      case Pds16asmPackage.OPERATION_WITH_OFFSET__OFFSET8:
        setOffset8(OFFSET8_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case Pds16asmPackage.OPERATION_WITH_OFFSET__RBX:
        return rbx != null;
      case Pds16asmPackage.OPERATION_WITH_OFFSET__OFFSET8:
        return OFFSET8_EDEFAULT == null ? offset8 != null : !OFFSET8_EDEFAULT.equals(offset8);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (offset8: ");
    result.append(offset8);
    result.append(')');
    return result.toString();
  }

} //OperationWithOffsetImpl
