/**
 * generated by Xtext 2.9.2
 */
package org.pds16.pds16asm.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.pds16.pds16asm.HexaDecimal;
import org.pds16.pds16asm.Immediate;
import org.pds16.pds16asm.Pds16asmPackage;
import org.pds16.pds16asm.Registers;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Immediate</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.pds16.pds16asm.impl.ImmediateImpl#getRegister <em>Register</em>}</li>
 *   <li>{@link org.pds16.pds16asm.impl.ImmediateImpl#getImmediate8 <em>Immediate8</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class ImmediateImpl extends LdImmediateImpl implements Immediate
{
  /**
   * The cached value of the '{@link #getRegister() <em>Register</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRegister()
   * @generated
   * @ordered
   */
  protected Registers register;

  /**
   * The cached value of the '{@link #getImmediate8() <em>Immediate8</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImmediate8()
   * @generated
   * @ordered
   */
  protected HexaDecimal immediate8;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ImmediateImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return Pds16asmPackage.Literals.IMMEDIATE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Registers getRegister()
  {
    return register;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRegister(Registers newRegister, NotificationChain msgs)
  {
    Registers oldRegister = register;
    register = newRegister;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Pds16asmPackage.IMMEDIATE__REGISTER, oldRegister, newRegister);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRegister(Registers newRegister)
  {
    if (newRegister != register)
    {
      NotificationChain msgs = null;
      if (register != null)
        msgs = ((InternalEObject)register).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Pds16asmPackage.IMMEDIATE__REGISTER, null, msgs);
      if (newRegister != null)
        msgs = ((InternalEObject)newRegister).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Pds16asmPackage.IMMEDIATE__REGISTER, null, msgs);
      msgs = basicSetRegister(newRegister, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Pds16asmPackage.IMMEDIATE__REGISTER, newRegister, newRegister));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public HexaDecimal getImmediate8()
  {
    return immediate8;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetImmediate8(HexaDecimal newImmediate8, NotificationChain msgs)
  {
    HexaDecimal oldImmediate8 = immediate8;
    immediate8 = newImmediate8;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Pds16asmPackage.IMMEDIATE__IMMEDIATE8, oldImmediate8, newImmediate8);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setImmediate8(HexaDecimal newImmediate8)
  {
    if (newImmediate8 != immediate8)
    {
      NotificationChain msgs = null;
      if (immediate8 != null)
        msgs = ((InternalEObject)immediate8).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Pds16asmPackage.IMMEDIATE__IMMEDIATE8, null, msgs);
      if (newImmediate8 != null)
        msgs = ((InternalEObject)newImmediate8).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Pds16asmPackage.IMMEDIATE__IMMEDIATE8, null, msgs);
      msgs = basicSetImmediate8(newImmediate8, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Pds16asmPackage.IMMEDIATE__IMMEDIATE8, newImmediate8, newImmediate8));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case Pds16asmPackage.IMMEDIATE__REGISTER:
        return basicSetRegister(null, msgs);
      case Pds16asmPackage.IMMEDIATE__IMMEDIATE8:
        return basicSetImmediate8(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case Pds16asmPackage.IMMEDIATE__REGISTER:
        return getRegister();
      case Pds16asmPackage.IMMEDIATE__IMMEDIATE8:
        return getImmediate8();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case Pds16asmPackage.IMMEDIATE__REGISTER:
        setRegister((Registers)newValue);
        return;
      case Pds16asmPackage.IMMEDIATE__IMMEDIATE8:
        setImmediate8((HexaDecimal)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case Pds16asmPackage.IMMEDIATE__REGISTER:
        setRegister((Registers)null);
        return;
      case Pds16asmPackage.IMMEDIATE__IMMEDIATE8:
        setImmediate8((HexaDecimal)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case Pds16asmPackage.IMMEDIATE__REGISTER:
        return register != null;
      case Pds16asmPackage.IMMEDIATE__IMMEDIATE8:
        return immediate8 != null;
    }
    return super.eIsSet(featureID);
  }

} //ImmediateImpl
