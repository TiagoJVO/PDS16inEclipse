/**
 * generated by Xtext 2.9.2
 */
package org.pds16.pds16asm.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.pds16.pds16asm.Add;
import org.pds16.pds16asm.Anl;
import org.pds16.pds16asm.Aritmetica;
import org.pds16.pds16asm.Ascii;
import org.pds16.pds16asm.Asciiz;
import org.pds16.pds16asm.BasedIndexed;
import org.pds16.pds16asm.ConstOrLabel;
import org.pds16.pds16asm.Direct;
import org.pds16.pds16asm.DirectOrLabel;
import org.pds16.pds16asm.Directive;
import org.pds16.pds16asm.Equ;
import org.pds16.pds16asm.Expression;
import org.pds16.pds16asm.Immediate;
import org.pds16.pds16asm.Indexed;
import org.pds16.pds16asm.Instructions;
import org.pds16.pds16asm.Jump;
import org.pds16.pds16asm.JumpOp;
import org.pds16.pds16asm.Label;
import org.pds16.pds16asm.LabelDirective;
import org.pds16.pds16asm.LdBasedIndexed;
import org.pds16.pds16asm.LdDirect;
import org.pds16.pds16asm.LdImmediate;
import org.pds16.pds16asm.LdIndexed;
import org.pds16.pds16asm.Load;
import org.pds16.pds16asm.Logica;
import org.pds16.pds16asm.LowOrHight;
import org.pds16.pds16asm.Nop;
import org.pds16.pds16asm.Not;
import org.pds16.pds16asm.OperationShift;
import org.pds16.pds16asm.OperationWithOffset;
import org.pds16.pds16asm.OperationWithTwoRegisters;
import org.pds16.pds16asm.OperationsWithConstant;
import org.pds16.pds16asm.OperationsWithTreeRegisters;
import org.pds16.pds16asm.Org;
import org.pds16.pds16asm.Orl;
import org.pds16.pds16asm.Pds16asmFactory;
import org.pds16.pds16asm.Pds16asmPackage;
import org.pds16.pds16asm.Rc;
import org.pds16.pds16asm.Registers;
import org.pds16.pds16asm.Ret;
import org.pds16.pds16asm.Rr;
import org.pds16.pds16asm.Section;
import org.pds16.pds16asm.Set;
import org.pds16.pds16asm.Shl;
import org.pds16.pds16asm.Shr;
import org.pds16.pds16asm.Space;
import org.pds16.pds16asm.StBasedIndexed;
import org.pds16.pds16asm.StDirect;
import org.pds16.pds16asm.StIndexed;
import org.pds16.pds16asm.Statement;
import org.pds16.pds16asm.Store;
import org.pds16.pds16asm.Sub;
import org.pds16.pds16asm.Word;
import org.pds16.pds16asm.Xrl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class Pds16asmPackageImpl extends EPackageImpl implements Pds16asmPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pds16ASMEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass labelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass directiveEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass labelDirectiveEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass asciiEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass asciizEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass byteEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass wordEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass spaceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass setEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sectionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass orgEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass equEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass instructionsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass loadEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass storeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aritmeticaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass jumpEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ldImmediateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ldDirectEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ldIndexedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ldBasedIndexedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stDirectEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stIndexedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stBasedIndexedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass addEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass subEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass anlEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass orlEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xrlEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass notEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass shlEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass shrEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rrEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rcEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass jumpOpEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass nopEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass retEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass immediateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass directEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass indexedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass basedIndexedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass directOrLabelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass constOrLabelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operationWithTwoRegistersEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operationsWithTreeRegistersEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operationsWithConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operationShiftEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operationWithOffsetEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass lowOrHightEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass registersEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.pds16.pds16asm.Pds16asmPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private Pds16asmPackageImpl()
  {
    super(eNS_URI, Pds16asmFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link Pds16asmPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static Pds16asmPackage init()
  {
    if (isInited) return (Pds16asmPackage)EPackage.Registry.INSTANCE.getEPackage(Pds16asmPackage.eNS_URI);

    // Obtain or create and register package
    Pds16asmPackageImpl thePds16asmPackage = (Pds16asmPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof Pds16asmPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new Pds16asmPackageImpl());

    isInited = true;

    // Create package meta-data objects
    thePds16asmPackage.createPackageContents();

    // Initialize created meta-data
    thePds16asmPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    thePds16asmPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(Pds16asmPackage.eNS_URI, thePds16asmPackage);
    return thePds16asmPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPDS16ASM()
  {
    return pds16ASMEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPDS16ASM_Instuctions()
  {
    return (EReference)pds16ASMEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStatement()
  {
    return statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLabel()
  {
    return labelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getLabel_LabelName()
  {
    return (EAttribute)labelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getLabel_Value()
  {
    return (EReference)labelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDirective()
  {
    return directiveEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLabelDirective()
  {
    return labelDirectiveEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAscii()
  {
    return asciiEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAscii_Value()
  {
    return (EAttribute)asciiEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAsciiz()
  {
    return asciizEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAsciiz_Value()
  {
    return (EAttribute)asciizEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getByte()
  {
    return byteEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getByte_Value1()
  {
    return (EAttribute)byteEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getWord()
  {
    return wordEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getWord_Value1()
  {
    return (EAttribute)wordEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSpace()
  {
    return spaceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSpace_Size()
  {
    return (EAttribute)spaceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSpace_ByteValeu()
  {
    return (EAttribute)spaceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSet()
  {
    return setEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSet_Value1()
  {
    return (EAttribute)setEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSet_Value2()
  {
    return (EReference)setEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSection()
  {
    return sectionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSection_Value()
  {
    return (EAttribute)sectionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getOrg()
  {
    return orgEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEqu()
  {
    return equEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getInstructions()
  {
    return instructionsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLoad()
  {
    return loadEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStore()
  {
    return storeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAritmetica()
  {
    return aritmeticaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLogica()
  {
    return logicaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getJump()
  {
    return jumpEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLdImmediate()
  {
    return ldImmediateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLdDirect()
  {
    return ldDirectEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLdIndexed()
  {
    return ldIndexedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLdBasedIndexed()
  {
    return ldBasedIndexedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStDirect()
  {
    return stDirectEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStIndexed()
  {
    return stIndexedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStBasedIndexed()
  {
    return stBasedIndexedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAdd()
  {
    return addEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSub()
  {
    return subEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAnl()
  {
    return anlEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getOrl()
  {
    return orlEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getOrl_Rd()
  {
    return (EReference)orlEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getOrl_Rm()
  {
    return (EReference)orlEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXrl()
  {
    return xrlEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNot()
  {
    return notEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getShl()
  {
    return shlEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getShr()
  {
    return shrEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRr()
  {
    return rrEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRc()
  {
    return rcEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getJumpOp()
  {
    return jumpOpEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getJumpOp_Op()
  {
    return (EAttribute)jumpOpEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNop()
  {
    return nopEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getNop_Instruction()
  {
    return (EAttribute)nopEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRet()
  {
    return retEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getRet_Instruction()
  {
    return (EAttribute)retEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getImmediate()
  {
    return immediateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getImmediate_Register()
  {
    return (EReference)immediateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getImmediate_Immediate8()
  {
    return (EReference)immediateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDirect()
  {
    return directEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDirect_Register()
  {
    return (EReference)directEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDirect_Direct7()
  {
    return (EReference)directEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getIndexed()
  {
    return indexedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIndexed_Rd()
  {
    return (EReference)indexedEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIndexed_Rbx()
  {
    return (EReference)indexedEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIndexed_Idx3()
  {
    return (EReference)indexedEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBasedIndexed()
  {
    return basedIndexedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDirectOrLabel()
  {
    return directOrLabelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDirectOrLabel_Number()
  {
    return (EAttribute)directOrLabelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDirectOrLabel_Label()
  {
    return (EAttribute)directOrLabelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getConstOrLabel()
  {
    return constOrLabelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getConstOrLabel_Number()
  {
    return (EAttribute)constOrLabelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getConstOrLabel_Label()
  {
    return (EAttribute)constOrLabelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getOperationWithTwoRegisters()
  {
    return operationWithTwoRegistersEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getOperationsWithTreeRegisters()
  {
    return operationsWithTreeRegistersEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getOperationsWithTreeRegisters_Rn()
  {
    return (EReference)operationsWithTreeRegistersEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getOperationsWithConstant()
  {
    return operationsWithConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getOperationsWithConstant_Rd()
  {
    return (EReference)operationsWithConstantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getOperationsWithConstant_Rm()
  {
    return (EReference)operationsWithConstantEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getOperationsWithConstant_Const4()
  {
    return (EReference)operationsWithConstantEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getOperationShift()
  {
    return operationShiftEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getOperationShift_Rd()
  {
    return (EReference)operationShiftEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getOperationShift_Rm()
  {
    return (EReference)operationShiftEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getOperationShift_Const4()
  {
    return (EReference)operationShiftEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getOperationShift_Sin()
  {
    return (EAttribute)operationShiftEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getOperationWithOffset()
  {
    return operationWithOffsetEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getOperationWithOffset_Rbx()
  {
    return (EReference)operationWithOffsetEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getOperationWithOffset_Offset8()
  {
    return (EReference)operationWithOffsetEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getExpression()
  {
    return expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getExpression_Value1()
  {
    return (EAttribute)expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLowOrHight()
  {
    return lowOrHightEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRegisters()
  {
    return registersEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getRegisters_Rbx()
  {
    return (EReference)registersEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getRegisters_Rix()
  {
    return (EReference)registersEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getRegisters_Value()
  {
    return (EAttribute)registersEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Pds16asmFactory getPds16asmFactory()
  {
    return (Pds16asmFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    pds16ASMEClass = createEClass(PDS16ASM);
    createEReference(pds16ASMEClass, PDS16ASM__INSTUCTIONS);

    statementEClass = createEClass(STATEMENT);

    labelEClass = createEClass(LABEL);
    createEAttribute(labelEClass, LABEL__LABEL_NAME);
    createEReference(labelEClass, LABEL__VALUE);

    directiveEClass = createEClass(DIRECTIVE);

    labelDirectiveEClass = createEClass(LABEL_DIRECTIVE);

    asciiEClass = createEClass(ASCII);
    createEAttribute(asciiEClass, ASCII__VALUE);

    asciizEClass = createEClass(ASCIIZ);
    createEAttribute(asciizEClass, ASCIIZ__VALUE);

    byteEClass = createEClass(BYTE);
    createEAttribute(byteEClass, BYTE__VALUE1);

    wordEClass = createEClass(WORD);
    createEAttribute(wordEClass, WORD__VALUE1);

    spaceEClass = createEClass(SPACE);
    createEAttribute(spaceEClass, SPACE__SIZE);
    createEAttribute(spaceEClass, SPACE__BYTE_VALEU);

    setEClass = createEClass(SET);
    createEAttribute(setEClass, SET__VALUE1);
    createEReference(setEClass, SET__VALUE2);

    sectionEClass = createEClass(SECTION);
    createEAttribute(sectionEClass, SECTION__VALUE);

    orgEClass = createEClass(ORG);

    equEClass = createEClass(EQU);

    instructionsEClass = createEClass(INSTRUCTIONS);

    loadEClass = createEClass(LOAD);

    storeEClass = createEClass(STORE);

    aritmeticaEClass = createEClass(ARITMETICA);

    logicaEClass = createEClass(LOGICA);

    jumpEClass = createEClass(JUMP);

    ldImmediateEClass = createEClass(LD_IMMEDIATE);

    ldDirectEClass = createEClass(LD_DIRECT);

    ldIndexedEClass = createEClass(LD_INDEXED);

    ldBasedIndexedEClass = createEClass(LD_BASED_INDEXED);

    stDirectEClass = createEClass(ST_DIRECT);

    stIndexedEClass = createEClass(ST_INDEXED);

    stBasedIndexedEClass = createEClass(ST_BASED_INDEXED);

    addEClass = createEClass(ADD);

    subEClass = createEClass(SUB);

    anlEClass = createEClass(ANL);

    orlEClass = createEClass(ORL);
    createEReference(orlEClass, ORL__RD);
    createEReference(orlEClass, ORL__RM);

    xrlEClass = createEClass(XRL);

    notEClass = createEClass(NOT);

    shlEClass = createEClass(SHL);

    shrEClass = createEClass(SHR);

    rrEClass = createEClass(RR);

    rcEClass = createEClass(RC);

    jumpOpEClass = createEClass(JUMP_OP);
    createEAttribute(jumpOpEClass, JUMP_OP__OP);

    nopEClass = createEClass(NOP);
    createEAttribute(nopEClass, NOP__INSTRUCTION);

    retEClass = createEClass(RET);
    createEAttribute(retEClass, RET__INSTRUCTION);

    immediateEClass = createEClass(IMMEDIATE);
    createEReference(immediateEClass, IMMEDIATE__REGISTER);
    createEReference(immediateEClass, IMMEDIATE__IMMEDIATE8);

    directEClass = createEClass(DIRECT);
    createEReference(directEClass, DIRECT__REGISTER);
    createEReference(directEClass, DIRECT__DIRECT7);

    indexedEClass = createEClass(INDEXED);
    createEReference(indexedEClass, INDEXED__RD);
    createEReference(indexedEClass, INDEXED__RBX);
    createEReference(indexedEClass, INDEXED__IDX3);

    basedIndexedEClass = createEClass(BASED_INDEXED);

    directOrLabelEClass = createEClass(DIRECT_OR_LABEL);
    createEAttribute(directOrLabelEClass, DIRECT_OR_LABEL__NUMBER);
    createEAttribute(directOrLabelEClass, DIRECT_OR_LABEL__LABEL);

    constOrLabelEClass = createEClass(CONST_OR_LABEL);
    createEAttribute(constOrLabelEClass, CONST_OR_LABEL__NUMBER);
    createEAttribute(constOrLabelEClass, CONST_OR_LABEL__LABEL);

    operationWithTwoRegistersEClass = createEClass(OPERATION_WITH_TWO_REGISTERS);

    operationsWithTreeRegistersEClass = createEClass(OPERATIONS_WITH_TREE_REGISTERS);
    createEReference(operationsWithTreeRegistersEClass, OPERATIONS_WITH_TREE_REGISTERS__RN);

    operationsWithConstantEClass = createEClass(OPERATIONS_WITH_CONSTANT);
    createEReference(operationsWithConstantEClass, OPERATIONS_WITH_CONSTANT__RD);
    createEReference(operationsWithConstantEClass, OPERATIONS_WITH_CONSTANT__RM);
    createEReference(operationsWithConstantEClass, OPERATIONS_WITH_CONSTANT__CONST4);

    operationShiftEClass = createEClass(OPERATION_SHIFT);
    createEReference(operationShiftEClass, OPERATION_SHIFT__RD);
    createEReference(operationShiftEClass, OPERATION_SHIFT__RM);
    createEReference(operationShiftEClass, OPERATION_SHIFT__CONST4);
    createEAttribute(operationShiftEClass, OPERATION_SHIFT__SIN);

    operationWithOffsetEClass = createEClass(OPERATION_WITH_OFFSET);
    createEReference(operationWithOffsetEClass, OPERATION_WITH_OFFSET__RBX);
    createEReference(operationWithOffsetEClass, OPERATION_WITH_OFFSET__OFFSET8);

    expressionEClass = createEClass(EXPRESSION);
    createEAttribute(expressionEClass, EXPRESSION__VALUE1);

    lowOrHightEClass = createEClass(LOW_OR_HIGHT);

    registersEClass = createEClass(REGISTERS);
    createEReference(registersEClass, REGISTERS__RBX);
    createEReference(registersEClass, REGISTERS__RIX);
    createEAttribute(registersEClass, REGISTERS__VALUE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    labelEClass.getESuperTypes().add(this.getStatement());
    directiveEClass.getESuperTypes().add(this.getStatement());
    labelDirectiveEClass.getESuperTypes().add(this.getDirective());
    asciiEClass.getESuperTypes().add(this.getLabelDirective());
    asciizEClass.getESuperTypes().add(this.getLabelDirective());
    byteEClass.getESuperTypes().add(this.getLabelDirective());
    wordEClass.getESuperTypes().add(this.getLabelDirective());
    spaceEClass.getESuperTypes().add(this.getLabelDirective());
    setEClass.getESuperTypes().add(this.getDirective());
    sectionEClass.getESuperTypes().add(this.getDirective());
    orgEClass.getESuperTypes().add(this.getDirective());
    equEClass.getESuperTypes().add(this.getDirective());
    instructionsEClass.getESuperTypes().add(this.getStatement());
    loadEClass.getESuperTypes().add(this.getInstructions());
    storeEClass.getESuperTypes().add(this.getInstructions());
    aritmeticaEClass.getESuperTypes().add(this.getInstructions());
    logicaEClass.getESuperTypes().add(this.getInstructions());
    jumpEClass.getESuperTypes().add(this.getInstructions());
    ldImmediateEClass.getESuperTypes().add(this.getLoad());
    ldDirectEClass.getESuperTypes().add(this.getLoad());
    ldIndexedEClass.getESuperTypes().add(this.getLoad());
    ldBasedIndexedEClass.getESuperTypes().add(this.getLoad());
    stDirectEClass.getESuperTypes().add(this.getStore());
    stIndexedEClass.getESuperTypes().add(this.getStore());
    stBasedIndexedEClass.getESuperTypes().add(this.getStore());
    addEClass.getESuperTypes().add(this.getAritmetica());
    subEClass.getESuperTypes().add(this.getAritmetica());
    anlEClass.getESuperTypes().add(this.getLogica());
    orlEClass.getESuperTypes().add(this.getLogica());
    xrlEClass.getESuperTypes().add(this.getLogica());
    notEClass.getESuperTypes().add(this.getLogica());
    shlEClass.getESuperTypes().add(this.getLogica());
    shrEClass.getESuperTypes().add(this.getLogica());
    rrEClass.getESuperTypes().add(this.getLogica());
    rcEClass.getESuperTypes().add(this.getLogica());
    jumpOpEClass.getESuperTypes().add(this.getJump());
    nopEClass.getESuperTypes().add(this.getInstructions());
    retEClass.getESuperTypes().add(this.getInstructions());
    immediateEClass.getESuperTypes().add(this.getLdImmediate());
    directEClass.getESuperTypes().add(this.getLdDirect());
    directEClass.getESuperTypes().add(this.getStDirect());
    indexedEClass.getESuperTypes().add(this.getLdIndexed());
    indexedEClass.getESuperTypes().add(this.getStIndexed());
    basedIndexedEClass.getESuperTypes().add(this.getLdBasedIndexed());
    basedIndexedEClass.getESuperTypes().add(this.getStBasedIndexed());
    operationWithTwoRegistersEClass.getESuperTypes().add(this.getOrl());
    operationWithTwoRegistersEClass.getESuperTypes().add(this.getNot());
    operationWithTwoRegistersEClass.getESuperTypes().add(this.getRc());
    operationsWithTreeRegistersEClass.getESuperTypes().add(this.getAdd());
    operationsWithTreeRegistersEClass.getESuperTypes().add(this.getSub());
    operationsWithTreeRegistersEClass.getESuperTypes().add(this.getAnl());
    operationsWithTreeRegistersEClass.getESuperTypes().add(this.getOrl());
    operationsWithTreeRegistersEClass.getESuperTypes().add(this.getXrl());
    operationsWithConstantEClass.getESuperTypes().add(this.getAdd());
    operationsWithConstantEClass.getESuperTypes().add(this.getSub());
    operationsWithConstantEClass.getESuperTypes().add(this.getRr());
    operationShiftEClass.getESuperTypes().add(this.getShl());
    operationShiftEClass.getESuperTypes().add(this.getShr());
    operationWithOffsetEClass.getESuperTypes().add(this.getJumpOp());
    expressionEClass.getESuperTypes().add(this.getOrg());
    expressionEClass.getESuperTypes().add(this.getEqu());
    expressionEClass.getESuperTypes().add(this.getLowOrHight());
    registersEClass.getESuperTypes().add(this.getAdd());
    registersEClass.getESuperTypes().add(this.getSub());
    registersEClass.getESuperTypes().add(this.getBasedIndexed());

    // Initialize classes and features; add operations and parameters
    initEClass(pds16ASMEClass, org.pds16.pds16asm.PDS16ASM.class, "PDS16ASM", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPDS16ASM_Instuctions(), this.getStatement(), null, "instuctions", null, 0, -1, org.pds16.pds16asm.PDS16ASM.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(statementEClass, Statement.class, "Statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(labelEClass, Label.class, "Label", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLabel_LabelName(), ecorePackage.getEString(), "labelName", null, 0, 1, Label.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLabel_Value(), this.getStatement(), null, "value", null, 0, 1, Label.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(directiveEClass, Directive.class, "Directive", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(labelDirectiveEClass, LabelDirective.class, "LabelDirective", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(asciiEClass, Ascii.class, "Ascii", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAscii_Value(), ecorePackage.getEString(), "value", null, 0, 1, Ascii.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(asciizEClass, Asciiz.class, "Asciiz", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAsciiz_Value(), ecorePackage.getEString(), "value", null, 0, 1, Asciiz.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(byteEClass, org.pds16.pds16asm.Byte.class, "Byte", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getByte_Value1(), ecorePackage.getEString(), "value1", null, 0, 1, org.pds16.pds16asm.Byte.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(wordEClass, Word.class, "Word", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getWord_Value1(), ecorePackage.getEString(), "value1", null, 0, 1, Word.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(spaceEClass, Space.class, "Space", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSpace_Size(), ecorePackage.getEString(), "size", null, 0, 1, Space.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSpace_ByteValeu(), ecorePackage.getEString(), "byteValeu", null, 0, 1, Space.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(setEClass, Set.class, "Set", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSet_Value1(), ecorePackage.getEString(), "value1", null, 0, 1, Set.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSet_Value2(), this.getExpression(), null, "value2", null, 0, 1, Set.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sectionEClass, Section.class, "Section", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSection_Value(), ecorePackage.getEString(), "value", null, 0, 1, Section.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(orgEClass, Org.class, "Org", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(equEClass, Equ.class, "Equ", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(instructionsEClass, Instructions.class, "Instructions", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(loadEClass, Load.class, "Load", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(storeEClass, Store.class, "Store", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(aritmeticaEClass, Aritmetica.class, "Aritmetica", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicaEClass, Logica.class, "Logica", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(jumpEClass, Jump.class, "Jump", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(ldImmediateEClass, LdImmediate.class, "LdImmediate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(ldDirectEClass, LdDirect.class, "LdDirect", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(ldIndexedEClass, LdIndexed.class, "LdIndexed", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(ldBasedIndexedEClass, LdBasedIndexed.class, "LdBasedIndexed", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(stDirectEClass, StDirect.class, "StDirect", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(stIndexedEClass, StIndexed.class, "StIndexed", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(stBasedIndexedEClass, StBasedIndexed.class, "StBasedIndexed", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(addEClass, Add.class, "Add", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(subEClass, Sub.class, "Sub", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(anlEClass, Anl.class, "Anl", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(orlEClass, Orl.class, "Orl", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getOrl_Rd(), this.getRegisters(), null, "rd", null, 0, 1, Orl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOrl_Rm(), this.getRegisters(), null, "rm", null, 0, 1, Orl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xrlEClass, Xrl.class, "Xrl", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(notEClass, Not.class, "Not", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(shlEClass, Shl.class, "Shl", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(shrEClass, Shr.class, "Shr", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(rrEClass, Rr.class, "Rr", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(rcEClass, Rc.class, "Rc", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(jumpOpEClass, JumpOp.class, "JumpOp", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getJumpOp_Op(), ecorePackage.getEString(), "op", null, 0, 1, JumpOp.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(nopEClass, Nop.class, "Nop", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNop_Instruction(), ecorePackage.getEString(), "instruction", null, 0, 1, Nop.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(retEClass, Ret.class, "Ret", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRet_Instruction(), ecorePackage.getEString(), "instruction", null, 0, 1, Ret.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(immediateEClass, Immediate.class, "Immediate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getImmediate_Register(), this.getRegisters(), null, "register", null, 0, 1, Immediate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getImmediate_Immediate8(), ecorePackage.getEObject(), null, "immediate8", null, 0, 1, Immediate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(directEClass, Direct.class, "Direct", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDirect_Register(), this.getRegisters(), null, "register", null, 0, 1, Direct.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDirect_Direct7(), this.getDirectOrLabel(), null, "direct7", null, 0, 1, Direct.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(indexedEClass, Indexed.class, "Indexed", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getIndexed_Rd(), this.getRegisters(), null, "rd", null, 0, 1, Indexed.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIndexed_Rbx(), this.getRegisters(), null, "rbx", null, 0, 1, Indexed.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIndexed_Idx3(), this.getConstOrLabel(), null, "idx3", null, 0, 1, Indexed.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(basedIndexedEClass, BasedIndexed.class, "BasedIndexed", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(directOrLabelEClass, DirectOrLabel.class, "DirectOrLabel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDirectOrLabel_Number(), ecorePackage.getEString(), "number", null, 0, 1, DirectOrLabel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDirectOrLabel_Label(), ecorePackage.getEString(), "label", null, 0, 1, DirectOrLabel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(constOrLabelEClass, ConstOrLabel.class, "ConstOrLabel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getConstOrLabel_Number(), ecorePackage.getEString(), "number", null, 0, 1, ConstOrLabel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConstOrLabel_Label(), ecorePackage.getEString(), "label", null, 0, 1, ConstOrLabel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operationWithTwoRegistersEClass, OperationWithTwoRegisters.class, "OperationWithTwoRegisters", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(operationsWithTreeRegistersEClass, OperationsWithTreeRegisters.class, "OperationsWithTreeRegisters", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getOperationsWithTreeRegisters_Rn(), this.getRegisters(), null, "rn", null, 0, 1, OperationsWithTreeRegisters.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operationsWithConstantEClass, OperationsWithConstant.class, "OperationsWithConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getOperationsWithConstant_Rd(), this.getRegisters(), null, "rd", null, 0, 1, OperationsWithConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOperationsWithConstant_Rm(), this.getRegisters(), null, "rm", null, 0, 1, OperationsWithConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOperationsWithConstant_Const4(), this.getConstOrLabel(), null, "const4", null, 0, 1, OperationsWithConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operationShiftEClass, OperationShift.class, "OperationShift", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getOperationShift_Rd(), this.getRegisters(), null, "rd", null, 0, 1, OperationShift.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOperationShift_Rm(), this.getRegisters(), null, "rm", null, 0, 1, OperationShift.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOperationShift_Const4(), this.getConstOrLabel(), null, "const4", null, 0, 1, OperationShift.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getOperationShift_Sin(), ecorePackage.getEString(), "sin", null, 0, 1, OperationShift.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operationWithOffsetEClass, OperationWithOffset.class, "OperationWithOffset", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getOperationWithOffset_Rbx(), this.getRegisters(), null, "rbx", null, 0, 1, OperationWithOffset.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOperationWithOffset_Offset8(), this.getConstOrLabel(), null, "offset8", null, 0, 1, OperationWithOffset.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(expressionEClass, Expression.class, "Expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getExpression_Value1(), ecorePackage.getEString(), "value1", null, 0, 1, Expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(lowOrHightEClass, LowOrHight.class, "LowOrHight", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(registersEClass, Registers.class, "Registers", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRegisters_Rbx(), this.getRegisters(), null, "rbx", null, 0, 1, Registers.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRegisters_Rix(), this.getRegisters(), null, "rix", null, 0, 1, Registers.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRegisters_Value(), ecorePackage.getEString(), "value", null, 0, 1, Registers.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //Pds16asmPackageImpl
