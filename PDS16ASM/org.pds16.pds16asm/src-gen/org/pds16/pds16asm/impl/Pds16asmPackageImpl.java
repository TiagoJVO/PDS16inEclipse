/**
 * generated by Xtext 2.9.2
 */
package org.pds16.pds16asm.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.pds16.pds16asm.AddConstant;
import org.pds16.pds16asm.AddRegisters;
import org.pds16.pds16asm.Aritmetica;
import org.pds16.pds16asm.BasedIndexed;
import org.pds16.pds16asm.Comment;
import org.pds16.pds16asm.Direct;
import org.pds16.pds16asm.HexaDecimal;
import org.pds16.pds16asm.Immediate;
import org.pds16.pds16asm.Indexed;
import org.pds16.pds16asm.Instructions;
import org.pds16.pds16asm.Jump;
import org.pds16.pds16asm.JumpOp;
import org.pds16.pds16asm.LdBasedIndexed;
import org.pds16.pds16asm.LdDirect;
import org.pds16.pds16asm.LdImmediate;
import org.pds16.pds16asm.LdIndexed;
import org.pds16.pds16asm.Load;
import org.pds16.pds16asm.Logica;
import org.pds16.pds16asm.Pds16asmFactory;
import org.pds16.pds16asm.Pds16asmPackage;
import org.pds16.pds16asm.Registers;
import org.pds16.pds16asm.StBasedIndexed;
import org.pds16.pds16asm.StDirect;
import org.pds16.pds16asm.StIndexed;
import org.pds16.pds16asm.Store;
import org.pds16.pds16asm.SubConstant;
import org.pds16.pds16asm.SubRegisters;
import org.pds16.pds16asm.operationShift;
import org.pds16.pds16asm.operationWithOffset;
import org.pds16.pds16asm.operationWithTwoRegisters;
import org.pds16.pds16asm.operationsWithConstant;
import org.pds16.pds16asm.operationsWithTreeRegisters;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class Pds16asmPackageImpl extends EPackageImpl implements Pds16asmPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pds16ASMEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass instructionsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass loadEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass storeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aritmeticaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass jumpEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ldImmediateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ldDirectEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ldIndexedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ldBasedIndexedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stDirectEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stIndexedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stBasedIndexedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass addRegistersEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass addConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass subRegistersEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass subConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass anlEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass orlEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xrlEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass notEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass shlEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass shrEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rrEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rcEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass jumpOpEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass immediateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass directEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass indexedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass basedIndexedEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass hexaDecimalEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operationWithTwoRegistersEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operationsWithTreeRegistersEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operationsWithConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operationShiftEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operationWithOffsetEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass registersEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.pds16.pds16asm.Pds16asmPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private Pds16asmPackageImpl()
  {
    super(eNS_URI, Pds16asmFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link Pds16asmPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static Pds16asmPackage init()
  {
    if (isInited) return (Pds16asmPackage)EPackage.Registry.INSTANCE.getEPackage(Pds16asmPackage.eNS_URI);

    // Obtain or create and register package
    Pds16asmPackageImpl thePds16asmPackage = (Pds16asmPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof Pds16asmPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new Pds16asmPackageImpl());

    isInited = true;

    // Create package meta-data objects
    thePds16asmPackage.createPackageContents();

    // Initialize created meta-data
    thePds16asmPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    thePds16asmPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(Pds16asmPackage.eNS_URI, thePds16asmPackage);
    return thePds16asmPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPDS16ASM()
  {
    return pds16ASMEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPDS16ASM_Instuctions()
  {
    return (EReference)pds16ASMEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getInstructions()
  {
    return instructionsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLoad()
  {
    return loadEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStore()
  {
    return storeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAritmetica()
  {
    return aritmeticaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLogica()
  {
    return logicaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getJump()
  {
    return jumpEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLdImmediate()
  {
    return ldImmediateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLdDirect()
  {
    return ldDirectEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLdIndexed()
  {
    return ldIndexedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLdBasedIndexed()
  {
    return ldBasedIndexedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStDirect()
  {
    return stDirectEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStIndexed()
  {
    return stIndexedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStBasedIndexed()
  {
    return stBasedIndexedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAddRegisters()
  {
    return addRegistersEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAddConstant()
  {
    return addConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSubRegisters()
  {
    return subRegistersEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSubConstant()
  {
    return subConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getANL()
  {
    return anlEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getORL()
  {
    return orlEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getXRL()
  {
    return xrlEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNOT()
  {
    return notEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSHL()
  {
    return shlEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSHR()
  {
    return shrEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRR()
  {
    return rrEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRC()
  {
    return rcEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getJumpOp()
  {
    return jumpOpEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getJumpOp_Op()
  {
    return (EAttribute)jumpOpEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getImmediate()
  {
    return immediateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getImmediate_Register()
  {
    return (EReference)immediateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getImmediate_Immediate8()
  {
    return (EReference)immediateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDirect()
  {
    return directEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDirect_Register()
  {
    return (EReference)directEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDirect_Direct7()
  {
    return (EAttribute)directEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getIndexed()
  {
    return indexedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIndexed_Rd()
  {
    return (EReference)indexedEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIndexed_Rbx()
  {
    return (EReference)indexedEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getIndexed_Index()
  {
    return (EAttribute)indexedEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBasedIndexed()
  {
    return basedIndexedEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getHexaDecimal()
  {
    return hexaDecimalEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getHexaDecimal_Number()
  {
    return (EAttribute)hexaDecimalEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getoperationWithTwoRegisters()
  {
    return operationWithTwoRegistersEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getoperationWithTwoRegisters_Rd()
  {
    return (EReference)operationWithTwoRegistersEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getoperationWithTwoRegisters_Rm()
  {
    return (EReference)operationWithTwoRegistersEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getoperationsWithTreeRegisters()
  {
    return operationsWithTreeRegistersEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getoperationsWithTreeRegisters_Rd()
  {
    return (EReference)operationsWithTreeRegistersEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getoperationsWithTreeRegisters_Rm()
  {
    return (EReference)operationsWithTreeRegistersEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getoperationsWithTreeRegisters_Rn()
  {
    return (EReference)operationsWithTreeRegistersEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getoperationsWithConstant()
  {
    return operationsWithConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getoperationsWithConstant_Rd()
  {
    return (EReference)operationsWithConstantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getoperationsWithConstant_Rm()
  {
    return (EReference)operationsWithConstantEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getoperationsWithConstant_Const4()
  {
    return (EAttribute)operationsWithConstantEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getoperationShift()
  {
    return operationShiftEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getoperationShift_Rd()
  {
    return (EReference)operationShiftEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getoperationShift_Rm()
  {
    return (EReference)operationShiftEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getoperationShift_Const4()
  {
    return (EAttribute)operationShiftEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getoperationShift_Sin()
  {
    return (EAttribute)operationShiftEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getoperationWithOffset()
  {
    return operationWithOffsetEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getoperationWithOffset_Rbx()
  {
    return (EReference)operationWithOffsetEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getoperationWithOffset_Offset8()
  {
    return (EReference)operationWithOffsetEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getComment()
  {
    return commentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getComment_Value()
  {
    return (EAttribute)commentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRegisters()
  {
    return registersEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getRegisters_Rbx()
  {
    return (EReference)registersEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getRegisters_Rix()
  {
    return (EReference)registersEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getRegisters_Value()
  {
    return (EAttribute)registersEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Pds16asmFactory getPds16asmFactory()
  {
    return (Pds16asmFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    pds16ASMEClass = createEClass(PDS16ASM);
    createEReference(pds16ASMEClass, PDS16ASM__INSTUCTIONS);

    instructionsEClass = createEClass(INSTRUCTIONS);

    loadEClass = createEClass(LOAD);

    storeEClass = createEClass(STORE);

    aritmeticaEClass = createEClass(ARITMETICA);

    logicaEClass = createEClass(LOGICA);

    jumpEClass = createEClass(JUMP);

    ldImmediateEClass = createEClass(LD_IMMEDIATE);

    ldDirectEClass = createEClass(LD_DIRECT);

    ldIndexedEClass = createEClass(LD_INDEXED);

    ldBasedIndexedEClass = createEClass(LD_BASED_INDEXED);

    stDirectEClass = createEClass(ST_DIRECT);

    stIndexedEClass = createEClass(ST_INDEXED);

    stBasedIndexedEClass = createEClass(ST_BASED_INDEXED);

    addRegistersEClass = createEClass(ADD_REGISTERS);

    addConstantEClass = createEClass(ADD_CONSTANT);

    subRegistersEClass = createEClass(SUB_REGISTERS);

    subConstantEClass = createEClass(SUB_CONSTANT);

    anlEClass = createEClass(ANL);

    orlEClass = createEClass(ORL);

    xrlEClass = createEClass(XRL);

    notEClass = createEClass(NOT);

    shlEClass = createEClass(SHL);

    shrEClass = createEClass(SHR);

    rrEClass = createEClass(RR);

    rcEClass = createEClass(RC);

    jumpOpEClass = createEClass(JUMP_OP);
    createEAttribute(jumpOpEClass, JUMP_OP__OP);

    immediateEClass = createEClass(IMMEDIATE);
    createEReference(immediateEClass, IMMEDIATE__REGISTER);
    createEReference(immediateEClass, IMMEDIATE__IMMEDIATE8);

    directEClass = createEClass(DIRECT);
    createEReference(directEClass, DIRECT__REGISTER);
    createEAttribute(directEClass, DIRECT__DIRECT7);

    indexedEClass = createEClass(INDEXED);
    createEReference(indexedEClass, INDEXED__RD);
    createEReference(indexedEClass, INDEXED__RBX);
    createEAttribute(indexedEClass, INDEXED__INDEX);

    basedIndexedEClass = createEClass(BASED_INDEXED);

    hexaDecimalEClass = createEClass(HEXA_DECIMAL);
    createEAttribute(hexaDecimalEClass, HEXA_DECIMAL__NUMBER);

    operationWithTwoRegistersEClass = createEClass(OPERATION_WITH_TWO_REGISTERS);
    createEReference(operationWithTwoRegistersEClass, OPERATION_WITH_TWO_REGISTERS__RD);
    createEReference(operationWithTwoRegistersEClass, OPERATION_WITH_TWO_REGISTERS__RM);

    operationsWithTreeRegistersEClass = createEClass(OPERATIONS_WITH_TREE_REGISTERS);
    createEReference(operationsWithTreeRegistersEClass, OPERATIONS_WITH_TREE_REGISTERS__RD);
    createEReference(operationsWithTreeRegistersEClass, OPERATIONS_WITH_TREE_REGISTERS__RM);
    createEReference(operationsWithTreeRegistersEClass, OPERATIONS_WITH_TREE_REGISTERS__RN);

    operationsWithConstantEClass = createEClass(OPERATIONS_WITH_CONSTANT);
    createEReference(operationsWithConstantEClass, OPERATIONS_WITH_CONSTANT__RD);
    createEReference(operationsWithConstantEClass, OPERATIONS_WITH_CONSTANT__RM);
    createEAttribute(operationsWithConstantEClass, OPERATIONS_WITH_CONSTANT__CONST4);

    operationShiftEClass = createEClass(OPERATION_SHIFT);
    createEReference(operationShiftEClass, OPERATION_SHIFT__RD);
    createEReference(operationShiftEClass, OPERATION_SHIFT__RM);
    createEAttribute(operationShiftEClass, OPERATION_SHIFT__CONST4);
    createEAttribute(operationShiftEClass, OPERATION_SHIFT__SIN);

    operationWithOffsetEClass = createEClass(OPERATION_WITH_OFFSET);
    createEReference(operationWithOffsetEClass, OPERATION_WITH_OFFSET__RBX);
    createEReference(operationWithOffsetEClass, OPERATION_WITH_OFFSET__OFFSET8);

    commentEClass = createEClass(COMMENT);
    createEAttribute(commentEClass, COMMENT__VALUE);

    registersEClass = createEClass(REGISTERS);
    createEReference(registersEClass, REGISTERS__RBX);
    createEReference(registersEClass, REGISTERS__RIX);
    createEAttribute(registersEClass, REGISTERS__VALUE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    loadEClass.getESuperTypes().add(this.getInstructions());
    storeEClass.getESuperTypes().add(this.getInstructions());
    aritmeticaEClass.getESuperTypes().add(this.getInstructions());
    logicaEClass.getESuperTypes().add(this.getInstructions());
    jumpEClass.getESuperTypes().add(this.getInstructions());
    ldImmediateEClass.getESuperTypes().add(this.getLoad());
    ldDirectEClass.getESuperTypes().add(this.getLoad());
    ldIndexedEClass.getESuperTypes().add(this.getLoad());
    ldBasedIndexedEClass.getESuperTypes().add(this.getLoad());
    stDirectEClass.getESuperTypes().add(this.getStore());
    stIndexedEClass.getESuperTypes().add(this.getStore());
    stBasedIndexedEClass.getESuperTypes().add(this.getStore());
    addRegistersEClass.getESuperTypes().add(this.getAritmetica());
    addConstantEClass.getESuperTypes().add(this.getAritmetica());
    subRegistersEClass.getESuperTypes().add(this.getAritmetica());
    subConstantEClass.getESuperTypes().add(this.getAritmetica());
    anlEClass.getESuperTypes().add(this.getLogica());
    orlEClass.getESuperTypes().add(this.getLogica());
    xrlEClass.getESuperTypes().add(this.getLogica());
    notEClass.getESuperTypes().add(this.getLogica());
    shlEClass.getESuperTypes().add(this.getLogica());
    shrEClass.getESuperTypes().add(this.getLogica());
    rrEClass.getESuperTypes().add(this.getLogica());
    rcEClass.getESuperTypes().add(this.getLogica());
    jumpOpEClass.getESuperTypes().add(this.getJump());
    immediateEClass.getESuperTypes().add(this.getLdImmediate());
    directEClass.getESuperTypes().add(this.getLdDirect());
    directEClass.getESuperTypes().add(this.getStDirect());
    indexedEClass.getESuperTypes().add(this.getLdIndexed());
    indexedEClass.getESuperTypes().add(this.getStIndexed());
    basedIndexedEClass.getESuperTypes().add(this.getLdBasedIndexed());
    basedIndexedEClass.getESuperTypes().add(this.getStBasedIndexed());
    operationWithTwoRegistersEClass.getESuperTypes().add(this.getNOT());
    operationWithTwoRegistersEClass.getESuperTypes().add(this.getRC());
    operationsWithTreeRegistersEClass.getESuperTypes().add(this.getAddRegisters());
    operationsWithTreeRegistersEClass.getESuperTypes().add(this.getSubRegisters());
    operationsWithTreeRegistersEClass.getESuperTypes().add(this.getANL());
    operationsWithTreeRegistersEClass.getESuperTypes().add(this.getORL());
    operationsWithTreeRegistersEClass.getESuperTypes().add(this.getXRL());
    operationsWithConstantEClass.getESuperTypes().add(this.getAddConstant());
    operationsWithConstantEClass.getESuperTypes().add(this.getSubConstant());
    operationsWithConstantEClass.getESuperTypes().add(this.getRR());
    operationShiftEClass.getESuperTypes().add(this.getSHL());
    operationShiftEClass.getESuperTypes().add(this.getSHR());
    operationWithOffsetEClass.getESuperTypes().add(this.getJumpOp());
    commentEClass.getESuperTypes().add(this.getInstructions());
    registersEClass.getESuperTypes().add(this.getBasedIndexed());

    // Initialize classes and features; add operations and parameters
    initEClass(pds16ASMEClass, org.pds16.pds16asm.PDS16ASM.class, "PDS16ASM", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPDS16ASM_Instuctions(), this.getInstructions(), null, "instuctions", null, 0, -1, org.pds16.pds16asm.PDS16ASM.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(instructionsEClass, Instructions.class, "Instructions", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(loadEClass, Load.class, "Load", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(storeEClass, Store.class, "Store", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(aritmeticaEClass, Aritmetica.class, "Aritmetica", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(logicaEClass, Logica.class, "Logica", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(jumpEClass, Jump.class, "Jump", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(ldImmediateEClass, LdImmediate.class, "LdImmediate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(ldDirectEClass, LdDirect.class, "LdDirect", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(ldIndexedEClass, LdIndexed.class, "LdIndexed", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(ldBasedIndexedEClass, LdBasedIndexed.class, "LdBasedIndexed", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(stDirectEClass, StDirect.class, "StDirect", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(stIndexedEClass, StIndexed.class, "StIndexed", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(stBasedIndexedEClass, StBasedIndexed.class, "StBasedIndexed", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(addRegistersEClass, AddRegisters.class, "AddRegisters", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(addConstantEClass, AddConstant.class, "AddConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(subRegistersEClass, SubRegisters.class, "SubRegisters", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(subConstantEClass, SubConstant.class, "SubConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(anlEClass, org.pds16.pds16asm.ANL.class, "ANL", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(orlEClass, org.pds16.pds16asm.ORL.class, "ORL", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(xrlEClass, org.pds16.pds16asm.XRL.class, "XRL", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(notEClass, org.pds16.pds16asm.NOT.class, "NOT", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(shlEClass, org.pds16.pds16asm.SHL.class, "SHL", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(shrEClass, org.pds16.pds16asm.SHR.class, "SHR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(rrEClass, org.pds16.pds16asm.RR.class, "RR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(rcEClass, org.pds16.pds16asm.RC.class, "RC", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(jumpOpEClass, JumpOp.class, "JumpOp", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getJumpOp_Op(), ecorePackage.getEString(), "op", null, 0, 1, JumpOp.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(immediateEClass, Immediate.class, "Immediate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getImmediate_Register(), this.getRegisters(), null, "register", null, 0, 1, Immediate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getImmediate_Immediate8(), this.getHexaDecimal(), null, "immediate8", null, 0, 1, Immediate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(directEClass, Direct.class, "Direct", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDirect_Register(), this.getRegisters(), null, "register", null, 0, 1, Direct.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDirect_Direct7(), ecorePackage.getEString(), "direct7", null, 0, 1, Direct.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(indexedEClass, Indexed.class, "Indexed", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getIndexed_Rd(), this.getRegisters(), null, "rd", null, 0, 1, Indexed.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIndexed_Rbx(), this.getRegisters(), null, "rbx", null, 0, 1, Indexed.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getIndexed_Index(), ecorePackage.getEString(), "index", null, 0, 1, Indexed.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(basedIndexedEClass, BasedIndexed.class, "BasedIndexed", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(hexaDecimalEClass, HexaDecimal.class, "HexaDecimal", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getHexaDecimal_Number(), ecorePackage.getEString(), "number", null, 0, 1, HexaDecimal.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operationWithTwoRegistersEClass, operationWithTwoRegisters.class, "operationWithTwoRegisters", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getoperationWithTwoRegisters_Rd(), this.getRegisters(), null, "rd", null, 0, 1, operationWithTwoRegisters.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getoperationWithTwoRegisters_Rm(), this.getRegisters(), null, "rm", null, 0, 1, operationWithTwoRegisters.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operationsWithTreeRegistersEClass, operationsWithTreeRegisters.class, "operationsWithTreeRegisters", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getoperationsWithTreeRegisters_Rd(), this.getRegisters(), null, "rd", null, 0, 1, operationsWithTreeRegisters.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getoperationsWithTreeRegisters_Rm(), this.getRegisters(), null, "rm", null, 0, 1, operationsWithTreeRegisters.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getoperationsWithTreeRegisters_Rn(), this.getRegisters(), null, "rn", null, 0, 1, operationsWithTreeRegisters.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operationsWithConstantEClass, operationsWithConstant.class, "operationsWithConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getoperationsWithConstant_Rd(), this.getRegisters(), null, "rd", null, 0, 1, operationsWithConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getoperationsWithConstant_Rm(), this.getRegisters(), null, "rm", null, 0, 1, operationsWithConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getoperationsWithConstant_Const4(), ecorePackage.getEInt(), "const4", null, 0, 1, operationsWithConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operationShiftEClass, operationShift.class, "operationShift", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getoperationShift_Rd(), this.getRegisters(), null, "rd", null, 0, 1, operationShift.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getoperationShift_Rm(), this.getRegisters(), null, "rm", null, 0, 1, operationShift.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getoperationShift_Const4(), ecorePackage.getEInt(), "const4", null, 0, 1, operationShift.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getoperationShift_Sin(), ecorePackage.getEInt(), "sin", null, 0, 1, operationShift.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operationWithOffsetEClass, operationWithOffset.class, "operationWithOffset", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getoperationWithOffset_Rbx(), this.getRegisters(), null, "rbx", null, 0, 1, operationWithOffset.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getoperationWithOffset_Offset8(), this.getHexaDecimal(), null, "offset8", null, 0, 1, operationWithOffset.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(commentEClass, Comment.class, "Comment", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getComment_Value(), ecorePackage.getEString(), "value", null, 0, 1, Comment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(registersEClass, Registers.class, "Registers", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRegisters_Rbx(), this.getRegisters(), null, "rbx", null, 0, 1, Registers.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRegisters_Rix(), this.getRegisters(), null, "rix", null, 0, 1, Registers.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRegisters_Value(), ecorePackage.getEString(), "value", null, 0, 1, Registers.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //Pds16asmPackageImpl
