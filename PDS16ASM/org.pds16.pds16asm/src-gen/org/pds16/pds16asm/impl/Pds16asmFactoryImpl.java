/**
 * generated by Xtext 2.9.2
 */
package org.pds16.pds16asm.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.pds16.pds16asm.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class Pds16asmFactoryImpl extends EFactoryImpl implements Pds16asmFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static Pds16asmFactory init()
  {
    try
    {
      Pds16asmFactory thePds16asmFactory = (Pds16asmFactory)EPackage.Registry.INSTANCE.getEFactory(Pds16asmPackage.eNS_URI);
      if (thePds16asmFactory != null)
      {
        return thePds16asmFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new Pds16asmFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Pds16asmFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case Pds16asmPackage.PDS16ASM: return createPDS16ASM();
      case Pds16asmPackage.INSTRUCTIONS: return createInstructions();
      case Pds16asmPackage.LOAD: return createLoad();
      case Pds16asmPackage.LD_IMMEDIATE: return createLdImmediate();
      case Pds16asmPackage.LD_DIRECT: return createLdDirect();
      case Pds16asmPackage.LD_INDEXED: return createLdIndexed();
      case Pds16asmPackage.LD_BASED_INDEXED: return createLdBasedIndexed();
      case Pds16asmPackage.IMMEDIATE: return createImmediate();
      case Pds16asmPackage.DIRECT: return createDirect();
      case Pds16asmPackage.INDEXED: return createIndexed();
      case Pds16asmPackage.BASED_INDEXED: return createBasedIndexed();
      case Pds16asmPackage.HEXA_DECIMAL: return createHexaDecimal();
      case Pds16asmPackage.COMMENT: return createComment();
      case Pds16asmPackage.REGISTERS: return createRegisters();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PDS16ASM createPDS16ASM()
  {
    PDS16ASMImpl pds16ASM = new PDS16ASMImpl();
    return pds16ASM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Instructions createInstructions()
  {
    InstructionsImpl instructions = new InstructionsImpl();
    return instructions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Load createLoad()
  {
    LoadImpl load = new LoadImpl();
    return load;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LdImmediate createLdImmediate()
  {
    LdImmediateImpl ldImmediate = new LdImmediateImpl();
    return ldImmediate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LdDirect createLdDirect()
  {
    LdDirectImpl ldDirect = new LdDirectImpl();
    return ldDirect;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LdIndexed createLdIndexed()
  {
    LdIndexedImpl ldIndexed = new LdIndexedImpl();
    return ldIndexed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LdBasedIndexed createLdBasedIndexed()
  {
    LdBasedIndexedImpl ldBasedIndexed = new LdBasedIndexedImpl();
    return ldBasedIndexed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Immediate createImmediate()
  {
    ImmediateImpl immediate = new ImmediateImpl();
    return immediate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Direct createDirect()
  {
    DirectImpl direct = new DirectImpl();
    return direct;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Indexed createIndexed()
  {
    IndexedImpl indexed = new IndexedImpl();
    return indexed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BasedIndexed createBasedIndexed()
  {
    BasedIndexedImpl basedIndexed = new BasedIndexedImpl();
    return basedIndexed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public HexaDecimal createHexaDecimal()
  {
    HexaDecimalImpl hexaDecimal = new HexaDecimalImpl();
    return hexaDecimal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Comment createComment()
  {
    CommentImpl comment = new CommentImpl();
    return comment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Registers createRegisters()
  {
    RegistersImpl registers = new RegistersImpl();
    return registers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Pds16asmPackage getPds16asmPackage()
  {
    return (Pds16asmPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static Pds16asmPackage getPackage()
  {
    return Pds16asmPackage.eINSTANCE;
  }

} //Pds16asmFactoryImpl
