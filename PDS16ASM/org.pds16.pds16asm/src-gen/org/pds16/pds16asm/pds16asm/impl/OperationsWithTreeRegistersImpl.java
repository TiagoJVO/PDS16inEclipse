/**
 * generated by Xtext 2.10.1
 */
package org.pds16.pds16asm.pds16asm.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.pds16.pds16asm.pds16asm.Anl;
import org.pds16.pds16asm.pds16asm.Logica;
import org.pds16.pds16asm.pds16asm.OperationsWithTreeRegisters;
import org.pds16.pds16asm.pds16asm.Orl;
import org.pds16.pds16asm.pds16asm.Pds16asmPackage;
import org.pds16.pds16asm.pds16asm.Sub;
import org.pds16.pds16asm.pds16asm.Xrl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Operations With Tree Registers</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.pds16.pds16asm.pds16asm.impl.OperationsWithTreeRegistersImpl#getRd <em>Rd</em>}</li>
 *   <li>{@link org.pds16.pds16asm.pds16asm.impl.OperationsWithTreeRegistersImpl#getRm <em>Rm</em>}</li>
 *   <li>{@link org.pds16.pds16asm.pds16asm.impl.OperationsWithTreeRegistersImpl#getRn <em>Rn</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OperationsWithTreeRegistersImpl extends AddImpl implements OperationsWithTreeRegisters
{
  /**
   * The default value of the '{@link #getRd() <em>Rd</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRd()
   * @generated
   * @ordered
   */
  protected static final String RD_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRd() <em>Rd</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRd()
   * @generated
   * @ordered
   */
  protected String rd = RD_EDEFAULT;

  /**
   * The default value of the '{@link #getRm() <em>Rm</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRm()
   * @generated
   * @ordered
   */
  protected static final String RM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRm() <em>Rm</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRm()
   * @generated
   * @ordered
   */
  protected String rm = RM_EDEFAULT;

  /**
   * The default value of the '{@link #getRn() <em>Rn</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRn()
   * @generated
   * @ordered
   */
  protected static final String RN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRn() <em>Rn</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRn()
   * @generated
   * @ordered
   */
  protected String rn = RN_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OperationsWithTreeRegistersImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return Pds16asmPackage.Literals.OPERATIONS_WITH_TREE_REGISTERS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getRd()
  {
    return rd;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRd(String newRd)
  {
    String oldRd = rd;
    rd = newRd;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Pds16asmPackage.OPERATIONS_WITH_TREE_REGISTERS__RD, oldRd, rd));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getRm()
  {
    return rm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRm(String newRm)
  {
    String oldRm = rm;
    rm = newRm;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Pds16asmPackage.OPERATIONS_WITH_TREE_REGISTERS__RM, oldRm, rm));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getRn()
  {
    return rn;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRn(String newRn)
  {
    String oldRn = rn;
    rn = newRn;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Pds16asmPackage.OPERATIONS_WITH_TREE_REGISTERS__RN, oldRn, rn));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case Pds16asmPackage.OPERATIONS_WITH_TREE_REGISTERS__RD:
        return getRd();
      case Pds16asmPackage.OPERATIONS_WITH_TREE_REGISTERS__RM:
        return getRm();
      case Pds16asmPackage.OPERATIONS_WITH_TREE_REGISTERS__RN:
        return getRn();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case Pds16asmPackage.OPERATIONS_WITH_TREE_REGISTERS__RD:
        setRd((String)newValue);
        return;
      case Pds16asmPackage.OPERATIONS_WITH_TREE_REGISTERS__RM:
        setRm((String)newValue);
        return;
      case Pds16asmPackage.OPERATIONS_WITH_TREE_REGISTERS__RN:
        setRn((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case Pds16asmPackage.OPERATIONS_WITH_TREE_REGISTERS__RD:
        setRd(RD_EDEFAULT);
        return;
      case Pds16asmPackage.OPERATIONS_WITH_TREE_REGISTERS__RM:
        setRm(RM_EDEFAULT);
        return;
      case Pds16asmPackage.OPERATIONS_WITH_TREE_REGISTERS__RN:
        setRn(RN_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case Pds16asmPackage.OPERATIONS_WITH_TREE_REGISTERS__RD:
        return RD_EDEFAULT == null ? rd != null : !RD_EDEFAULT.equals(rd);
      case Pds16asmPackage.OPERATIONS_WITH_TREE_REGISTERS__RM:
        return RM_EDEFAULT == null ? rm != null : !RM_EDEFAULT.equals(rm);
      case Pds16asmPackage.OPERATIONS_WITH_TREE_REGISTERS__RN:
        return RN_EDEFAULT == null ? rn != null : !RN_EDEFAULT.equals(rn);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == Sub.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == Logica.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == Anl.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == Orl.class)
    {
      switch (derivedFeatureID)
      {
        case Pds16asmPackage.OPERATIONS_WITH_TREE_REGISTERS__RD: return Pds16asmPackage.ORL__RD;
        case Pds16asmPackage.OPERATIONS_WITH_TREE_REGISTERS__RM: return Pds16asmPackage.ORL__RM;
        default: return -1;
      }
    }
    if (baseClass == Xrl.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == Sub.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == Logica.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == Anl.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == Orl.class)
    {
      switch (baseFeatureID)
      {
        case Pds16asmPackage.ORL__RD: return Pds16asmPackage.OPERATIONS_WITH_TREE_REGISTERS__RD;
        case Pds16asmPackage.ORL__RM: return Pds16asmPackage.OPERATIONS_WITH_TREE_REGISTERS__RM;
        default: return -1;
      }
    }
    if (baseClass == Xrl.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (rd: ");
    result.append(rd);
    result.append(", rm: ");
    result.append(rm);
    result.append(", rn: ");
    result.append(rn);
    result.append(')');
    return result.toString();
  }

} //OperationsWithTreeRegistersImpl
