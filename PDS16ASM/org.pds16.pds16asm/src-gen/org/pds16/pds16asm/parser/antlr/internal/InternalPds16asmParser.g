/*
 * generated by Xtext 2.10.1
 */
parser grammar InternalPds16asmParser;

options {
	tokenVocab=InternalPds16asmLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package org.pds16.pds16asm.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.pds16.pds16asm.services.Pds16asmGrammarAccess;

}

@members {

 	private Pds16asmGrammarAccess grammarAccess;

    public InternalPds16asmParser(TokenStream input, Pds16asmGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "PDS16ASM";
   	}

   	@Override
   	protected Pds16asmGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRulePDS16ASM
entryRulePDS16ASM returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPDS16ASMRule()); }
	iv_rulePDS16ASM=rulePDS16ASM
	{ $current=$iv_rulePDS16ASM.current; }
	EOF;

// Rule PDS16ASM
rulePDS16ASM returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPDS16ASMAccess().getInstuctionsStatementParserRuleCall_0());
			}
			lv_instuctions_0_0=ruleStatement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPDS16ASMRule());
				}
				add(
					$current,
					"instuctions",
					lv_instuctions_0_0,
					"org.pds16.pds16asm.Pds16asm.Statement");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStatementAccess().getInstructionsParserRuleCall_0());
		}
		this_Instructions_0=ruleInstructions
		{
			$current = $this_Instructions_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getLabelParserRuleCall_1());
		}
		this_Label_1=ruleLabel
		{
			$current = $this_Label_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getDirectiveParserRuleCall_2());
		}
		this_Directive_2=ruleDirective
		{
			$current = $this_Directive_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLabel
entryRuleLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabelRule()); }
	iv_ruleLabel=ruleLabel
	{ $current=$iv_ruleLabel.current; }
	EOF;

// Rule Label
ruleLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_labelName_0_0=RULE_IDLABEL
				{
					newLeafNode(lv_labelName_0_0, grammarAccess.getLabelAccess().getLabelNameIDLABELTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLabelRule());
					}
					setWithLastConsumed(
						$current,
						"labelName",
						lv_labelName_0_0,
						"org.pds16.pds16asm.Pds16asm.IDLABEL");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLabelAccess().getValueLabelParserRuleCall_1_0_0());
					}
					lv_value_1_1=ruleLabel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLabelRule());
						}
						set(
							$current,
							"value",
							lv_value_1_1,
							"org.pds16.pds16asm.Pds16asm.Label");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getLabelAccess().getValueLabelDirectiveParserRuleCall_1_0_1());
					}
					lv_value_1_2=ruleLabelDirective
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLabelRule());
						}
						set(
							$current,
							"value",
							lv_value_1_2,
							"org.pds16.pds16asm.Pds16asm.LabelDirective");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getLabelAccess().getValueInstructionsParserRuleCall_1_0_2());
					}
					lv_value_1_3=ruleInstructions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLabelRule());
						}
						set(
							$current,
							"value",
							lv_value_1_3,
							"org.pds16.pds16asm.Pds16asm.Instructions");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDirective
entryRuleDirective returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDirectiveRule()); }
	iv_ruleDirective=ruleDirective
	{ $current=$iv_ruleDirective.current; }
	EOF;

// Rule Directive
ruleDirective returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDirectiveAccess().getBssParserRuleCall_0());
		}
		this_Bss_0=ruleBss
		{
			$current = $this_Bss_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDirectiveAccess().getDataParserRuleCall_1());
		}
		this_Data_1=ruleData
		{
			$current = $this_Data_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDirectiveAccess().getEndParserRuleCall_2());
		}
		this_End_2=ruleEnd
		{
			$current = $this_End_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDirectiveAccess().getTextParserRuleCall_3());
		}
		this_Text_3=ruleText
		{
			$current = $this_Text_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDirectiveAccess().getEquParserRuleCall_4());
		}
		this_Equ_4=ruleEqu
		{
			$current = $this_Equ_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDirectiveAccess().getOrgParserRuleCall_5());
		}
		this_Org_5=ruleOrg
		{
			$current = $this_Org_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDirectiveAccess().getSectionParserRuleCall_6());
		}
		this_Section_6=ruleSection
		{
			$current = $this_Section_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDirectiveAccess().getSetParserRuleCall_7());
		}
		this_Set_7=ruleSet
		{
			$current = $this_Set_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDirectiveAccess().getLabelDirectiveParserRuleCall_8());
		}
		this_LabelDirective_8=ruleLabelDirective
		{
			$current = $this_LabelDirective_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLabelDirective
entryRuleLabelDirective returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabelDirectiveRule()); }
	iv_ruleLabelDirective=ruleLabelDirective
	{ $current=$iv_ruleLabelDirective.current; }
	EOF;

// Rule LabelDirective
ruleLabelDirective returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLabelDirectiveAccess().getAsciiParserRuleCall_0());
		}
		this_Ascii_0=ruleAscii
		{
			$current = $this_Ascii_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLabelDirectiveAccess().getAsciizParserRuleCall_1());
		}
		this_Asciiz_1=ruleAsciiz
		{
			$current = $this_Asciiz_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLabelDirectiveAccess().getByteParserRuleCall_2());
		}
		this_Byte_2=ruleByte
		{
			$current = $this_Byte_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLabelDirectiveAccess().getWordParserRuleCall_3());
		}
		this_Word_3=ruleWord
		{
			$current = $this_Word_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLabelDirectiveAccess().getSpaceParserRuleCall_4());
		}
		this_Space_4=ruleSpace
		{
			$current = $this_Space_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBss
entryRuleBss returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBssRule()); }
	iv_ruleBss=ruleBss
	{ $current=$iv_ruleBss.current; }
	EOF;

// Rule Bss
ruleBss returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=Bss
			{
				newLeafNode(lv_value_0_0, grammarAccess.getBssAccess().getValueBssKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBssRule());
				}
				setWithLastConsumed($current, "value", lv_value_0_0, ".bss");
			}
		)
	)
;

// Entry rule entryRuleData
entryRuleData returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataRule()); }
	iv_ruleData=ruleData
	{ $current=$iv_ruleData.current; }
	EOF;

// Rule Data
ruleData returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=Data
			{
				newLeafNode(lv_value_0_0, grammarAccess.getDataAccess().getValueDataKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDataRule());
				}
				setWithLastConsumed($current, "value", lv_value_0_0, ".data");
			}
		)
	)
;

// Entry rule entryRuleEnd
entryRuleEnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEndRule()); }
	iv_ruleEnd=ruleEnd
	{ $current=$iv_ruleEnd.current; }
	EOF;

// Rule End
ruleEnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=End
			{
				newLeafNode(lv_value_0_0, grammarAccess.getEndAccess().getValueEndKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEndRule());
				}
				setWithLastConsumed($current, "value", lv_value_0_0, ".end");
			}
		)
	)
;

// Entry rule entryRuleText
entryRuleText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	iv_ruleText=ruleText
	{ $current=$iv_ruleText.current; }
	EOF;

// Rule Text
ruleText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=Text
			{
				newLeafNode(lv_value_0_0, grammarAccess.getTextAccess().getValueTextKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTextRule());
				}
				setWithLastConsumed($current, "value", lv_value_0_0, ".text");
			}
		)
	)
;

// Entry rule entryRuleAscii
entryRuleAscii returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAsciiRule()); }
	iv_ruleAscii=ruleAscii
	{ $current=$iv_ruleAscii.current; }
	EOF;

// Rule Ascii
ruleAscii returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_tag_0_0=Ascii
				{
					newLeafNode(lv_tag_0_0, grammarAccess.getAsciiAccess().getTagAsciiKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAsciiRule());
					}
					setWithLastConsumed($current, "tag", lv_tag_0_0, ".ascii");
				}
			)
		)
		(
			(
				(
					lv_values_1_0=RULE_STRING
					{
						newLeafNode(lv_values_1_0, grammarAccess.getAsciiAccess().getValuesSTRINGTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAsciiRule());
						}
						addWithLastConsumed(
							$current,
							"values",
							lv_values_1_0,
							"org.pds16.pds16asm.Pds16asm.STRING");
					}
				)
			)
			(
				otherlv_2=Comma
				{
					newLeafNode(otherlv_2, grammarAccess.getAsciiAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						lv_values_3_0=RULE_STRING
						{
							newLeafNode(lv_values_3_0, grammarAccess.getAsciiAccess().getValuesSTRINGTerminalRuleCall_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAsciiRule());
							}
							addWithLastConsumed(
								$current,
								"values",
								lv_values_3_0,
								"org.pds16.pds16asm.Pds16asm.STRING");
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleAsciiz
entryRuleAsciiz returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAsciizRule()); }
	iv_ruleAsciiz=ruleAsciiz
	{ $current=$iv_ruleAsciiz.current; }
	EOF;

// Rule Asciiz
ruleAsciiz returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_tag_0_0=Asciiz
				{
					newLeafNode(lv_tag_0_0, grammarAccess.getAsciizAccess().getTagAsciizKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAsciizRule());
					}
					setWithLastConsumed($current, "tag", lv_tag_0_0, ".asciiz");
				}
			)
		)
		(
			(
				(
					lv_values_1_0=RULE_STRING
					{
						newLeafNode(lv_values_1_0, grammarAccess.getAsciizAccess().getValuesSTRINGTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAsciizRule());
						}
						addWithLastConsumed(
							$current,
							"values",
							lv_values_1_0,
							"org.pds16.pds16asm.Pds16asm.STRING");
					}
				)
			)
			(
				otherlv_2=Comma
				{
					newLeafNode(otherlv_2, grammarAccess.getAsciizAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						lv_values_3_0=RULE_STRING
						{
							newLeafNode(lv_values_3_0, grammarAccess.getAsciizAccess().getValuesSTRINGTerminalRuleCall_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAsciizRule());
							}
							addWithLastConsumed(
								$current,
								"values",
								lv_values_3_0,
								"org.pds16.pds16asm.Pds16asm.STRING");
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleByte
entryRuleByte returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getByteRule()); }
	iv_ruleByte=ruleByte
	{ $current=$iv_ruleByte.current; }
	EOF;

// Rule Byte
ruleByte returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_tag_0_0=Byte
				{
					newLeafNode(lv_tag_0_0, grammarAccess.getByteAccess().getTagByteKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getByteRule());
					}
					setWithLastConsumed($current, "tag", lv_tag_0_0, ".byte");
				}
			)
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getByteAccess().getNumbersNumberParserRuleCall_1_0_0_0());
						}
						lv_numbers_1_0=ruleNumber
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getByteRule());
							}
							add(
								$current,
								"numbers",
								lv_numbers_1_0,
								"org.pds16.pds16asm.Pds16asm.Number");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						lv_s_2_0=RULE_STRING
						{
							newLeafNode(lv_s_2_0, grammarAccess.getByteAccess().getSSTRINGTerminalRuleCall_1_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getByteRule());
							}
							addWithLastConsumed(
								$current,
								"s",
								lv_s_2_0,
								"org.pds16.pds16asm.Pds16asm.STRING");
						}
					)
				)
			)
			(
				otherlv_3=Comma
				{
					newLeafNode(otherlv_3, grammarAccess.getByteAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getByteAccess().getNumbersNumberParserRuleCall_1_1_1_0_0());
							}
							lv_numbers_4_0=ruleNumber
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getByteRule());
								}
								add(
									$current,
									"numbers",
									lv_numbers_4_0,
									"org.pds16.pds16asm.Pds16asm.Number");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							lv_s_5_0=RULE_STRING
							{
								newLeafNode(lv_s_5_0, grammarAccess.getByteAccess().getSSTRINGTerminalRuleCall_1_1_1_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getByteRule());
								}
								addWithLastConsumed(
									$current,
									"s",
									lv_s_5_0,
									"org.pds16.pds16asm.Pds16asm.STRING");
							}
						)
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleWord
entryRuleWord returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWordRule()); }
	iv_ruleWord=ruleWord
	{ $current=$iv_ruleWord.current; }
	EOF;

// Rule Word
ruleWord returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_tag_0_0=Word
				{
					newLeafNode(lv_tag_0_0, grammarAccess.getWordAccess().getTagWordKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWordRule());
					}
					setWithLastConsumed($current, "tag", lv_tag_0_0, ".word");
				}
			)
		)
		(
			(
				(
					(
						lv_values_1_0=RULE_ID
						{
							newLeafNode(lv_values_1_0, grammarAccess.getWordAccess().getValuesIDTerminalRuleCall_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getWordRule());
							}
							addWithLastConsumed(
								$current,
								"values",
								lv_values_1_0,
								"org.pds16.pds16asm.Pds16asm.ID");
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getWordAccess().getNumbersNumberParserRuleCall_1_0_1_0());
						}
						lv_numbers_2_0=ruleNumber
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getWordRule());
							}
							add(
								$current,
								"numbers",
								lv_numbers_2_0,
								"org.pds16.pds16asm.Pds16asm.Number");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_3=Comma
				{
					newLeafNode(otherlv_3, grammarAccess.getWordAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						(
							lv_values_4_0=RULE_ID
							{
								newLeafNode(lv_values_4_0, grammarAccess.getWordAccess().getValuesIDTerminalRuleCall_1_1_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getWordRule());
								}
								addWithLastConsumed(
									$current,
									"values",
									lv_values_4_0,
									"org.pds16.pds16asm.Pds16asm.ID");
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getWordAccess().getNumbersNumberParserRuleCall_1_1_1_1_0());
							}
							lv_numbers_5_0=ruleNumber
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getWordRule());
								}
								add(
									$current,
									"numbers",
									lv_numbers_5_0,
									"org.pds16.pds16asm.Pds16asm.Number");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleSpace
entryRuleSpace returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpaceRule()); }
	iv_ruleSpace=ruleSpace
	{ $current=$iv_ruleSpace.current; }
	EOF;

// Rule Space
ruleSpace returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Space
		{
			newLeafNode(otherlv_0, grammarAccess.getSpaceAccess().getSpaceKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSpaceAccess().getSizeNumberParserRuleCall_1_0());
				}
				lv_size_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpaceRule());
					}
					set(
						$current,
						"size",
						lv_size_1_0,
						"org.pds16.pds16asm.Pds16asm.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=Comma
			{
				newLeafNode(otherlv_2, grammarAccess.getSpaceAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSpaceAccess().getByteValueNumberParserRuleCall_2_1_0());
					}
					lv_byteValue_3_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSpaceRule());
						}
						set(
							$current,
							"byteValue",
							lv_byteValue_3_0,
							"org.pds16.pds16asm.Pds16asm.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSet
entryRuleSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetRule()); }
	iv_ruleSet=ruleSet
	{ $current=$iv_ruleSet.current; }
	EOF;

// Rule Set
ruleSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Set
		{
			newLeafNode(otherlv_0, grammarAccess.getSetAccess().getSetKeyword_0());
		}
		(
			(
				lv_value1_1_0=RULE_ID
				{
					newLeafNode(lv_value1_1_0, grammarAccess.getSetAccess().getValue1IDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSetRule());
					}
					setWithLastConsumed(
						$current,
						"value1",
						lv_value1_1_0,
						"org.pds16.pds16asm.Pds16asm.ID");
				}
			)
		)
		otherlv_2=Comma
		{
			newLeafNode(otherlv_2, grammarAccess.getSetAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetAccess().getValue2ExpressionParserRuleCall_3_0());
				}
				lv_value2_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetRule());
					}
					set(
						$current,
						"value2",
						lv_value2_3_0,
						"org.pds16.pds16asm.Pds16asm.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSection
entryRuleSection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSectionRule()); }
	iv_ruleSection=ruleSection
	{ $current=$iv_ruleSection.current; }
	EOF;

// Rule Section
ruleSection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Section
		{
			newLeafNode(otherlv_0, grammarAccess.getSectionAccess().getSectionKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_ID
				{
					newLeafNode(lv_value_1_0, grammarAccess.getSectionAccess().getValueIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSectionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.pds16.pds16asm.Pds16asm.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleOrg
entryRuleOrg returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrgRule()); }
	iv_ruleOrg=ruleOrg
	{ $current=$iv_ruleOrg.current; }
	EOF;

// Rule Org
ruleOrg returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Org
		{
			newLeafNode(otherlv_0, grammarAccess.getOrgAccess().getOrgKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getOrgAccess().getExpressionParserRuleCall_1());
		}
		this_Expression_1=ruleExpression
		{
			$current = $this_Expression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEqu
entryRuleEqu returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEquRule()); }
	iv_ruleEqu=ruleEqu
	{ $current=$iv_ruleEqu.current; }
	EOF;

// Rule Equ
ruleEqu returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Equ
		{
			newLeafNode(otherlv_0, grammarAccess.getEquAccess().getEquKeyword_0());
		}
		this_ID_1=RULE_ID
		{
			newLeafNode(this_ID_1, grammarAccess.getEquAccess().getIDTerminalRuleCall_1());
		}
		otherlv_2=Comma
		{
			newLeafNode(otherlv_2, grammarAccess.getEquAccess().getCommaKeyword_2());
		}
		{
			newCompositeNode(grammarAccess.getEquAccess().getExpressionParserRuleCall_3());
		}
		this_Expression_3=ruleExpression
		{
			$current = $this_Expression_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInstructions
entryRuleInstructions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstructionsRule()); }
	iv_ruleInstructions=ruleInstructions
	{ $current=$iv_ruleInstructions.current; }
	EOF;

// Rule Instructions
ruleInstructions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInstructionsAccess().getLoadParserRuleCall_0());
		}
		this_Load_0=ruleLoad
		{
			$current = $this_Load_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionsAccess().getStoreParserRuleCall_1());
		}
		this_Store_1=ruleStore
		{
			$current = $this_Store_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionsAccess().getAritmeticaParserRuleCall_2());
		}
		this_Aritmetica_2=ruleAritmetica
		{
			$current = $this_Aritmetica_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionsAccess().getLogicaParserRuleCall_3());
		}
		this_Logica_3=ruleLogica
		{
			$current = $this_Logica_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionsAccess().getJumpParserRuleCall_4());
		}
		this_Jump_4=ruleJump
		{
			$current = $this_Jump_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionsAccess().getNopParserRuleCall_5());
		}
		this_Nop_5=ruleNop
		{
			$current = $this_Nop_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionsAccess().getRetParserRuleCall_6());
		}
		this_Ret_6=ruleRet
		{
			$current = $this_Ret_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLoad
entryRuleLoad returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoadRule()); }
	iv_ruleLoad=ruleLoad
	{ $current=$iv_ruleLoad.current; }
	EOF;

// Rule Load
ruleLoad returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLoadAccess().getLdImmediateParserRuleCall_0());
		}
		this_LdImmediate_0=ruleLdImmediate
		{
			$current = $this_LdImmediate_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLoadAccess().getLdDirectParserRuleCall_1());
		}
		this_LdDirect_1=ruleLdDirect
		{
			$current = $this_LdDirect_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLoadAccess().getLdIndexedParserRuleCall_2());
		}
		this_LdIndexed_2=ruleLdIndexed
		{
			$current = $this_LdIndexed_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLoadAccess().getLdBasedIndexedParserRuleCall_3());
		}
		this_LdBasedIndexed_3=ruleLdBasedIndexed
		{
			$current = $this_LdBasedIndexed_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStore
entryRuleStore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStoreRule()); }
	iv_ruleStore=ruleStore
	{ $current=$iv_ruleStore.current; }
	EOF;

// Rule Store
ruleStore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStoreAccess().getStDirectParserRuleCall_0());
		}
		this_StDirect_0=ruleStDirect
		{
			$current = $this_StDirect_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStoreAccess().getStIndexedParserRuleCall_1());
		}
		this_StIndexed_1=ruleStIndexed
		{
			$current = $this_StIndexed_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStoreAccess().getStBasedIndexedParserRuleCall_2());
		}
		this_StBasedIndexed_2=ruleStBasedIndexed
		{
			$current = $this_StBasedIndexed_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAritmetica
entryRuleAritmetica returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAritmeticaRule()); }
	iv_ruleAritmetica=ruleAritmetica
	{ $current=$iv_ruleAritmetica.current; }
	EOF;

// Rule Aritmetica
ruleAritmetica returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAritmeticaAccess().getAddParserRuleCall_0());
		}
		this_Add_0=ruleAdd
		{
			$current = $this_Add_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAritmeticaAccess().getSubParserRuleCall_1());
		}
		this_Sub_1=ruleSub
		{
			$current = $this_Sub_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLogica
entryRuleLogica returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicaRule()); }
	iv_ruleLogica=ruleLogica
	{ $current=$iv_ruleLogica.current; }
	EOF;

// Rule Logica
ruleLogica returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLogicaAccess().getAnlParserRuleCall_0());
		}
		this_Anl_0=ruleAnl
		{
			$current = $this_Anl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLogicaAccess().getOrlParserRuleCall_1());
		}
		this_Orl_1=ruleOrl
		{
			$current = $this_Orl_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLogicaAccess().getXrlParserRuleCall_2());
		}
		this_Xrl_2=ruleXrl
		{
			$current = $this_Xrl_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLogicaAccess().getNotParserRuleCall_3());
		}
		this_Not_3=ruleNot
		{
			$current = $this_Not_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLogicaAccess().getShlParserRuleCall_4());
		}
		this_Shl_4=ruleShl
		{
			$current = $this_Shl_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLogicaAccess().getShrParserRuleCall_5());
		}
		this_Shr_5=ruleShr
		{
			$current = $this_Shr_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLogicaAccess().getRrParserRuleCall_6());
		}
		this_Rr_6=ruleRr
		{
			$current = $this_Rr_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLogicaAccess().getRcParserRuleCall_7());
		}
		this_Rc_7=ruleRc
		{
			$current = $this_Rc_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleJump
entryRuleJump returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJumpRule()); }
	iv_ruleJump=ruleJump
	{ $current=$iv_ruleJump.current; }
	EOF;

// Rule Jump
ruleJump returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getJumpAccess().getJumpOpParserRuleCall());
	}
	this_JumpOp_0=ruleJumpOp
	{
		$current = $this_JumpOp_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleLdImmediate
entryRuleLdImmediate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLdImmediateRule()); }
	iv_ruleLdImmediate=ruleLdImmediate
	{ $current=$iv_ruleLdImmediate.current; }
	EOF;

// Rule LdImmediate
ruleLdImmediate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=Ldi
			{
				newLeafNode(otherlv_0, grammarAccess.getLdImmediateAccess().getLdiKeyword_0_0());
			}
			    |
			otherlv_1=Ldih
			{
				newLeafNode(otherlv_1, grammarAccess.getLdImmediateAccess().getLdihKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getLdImmediateAccess().getImmediateParserRuleCall_1());
		}
		this_Immediate_2=ruleImmediate
		{
			$current = $this_Immediate_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLdDirect
entryRuleLdDirect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLdDirectRule()); }
	iv_ruleLdDirect=ruleLdDirect
	{ $current=$iv_ruleLdDirect.current; }
	EOF;

// Rule LdDirect
ruleLdDirect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=Ld
			{
				newLeafNode(otherlv_0, grammarAccess.getLdDirectAccess().getLdKeyword_0_0());
			}
			    |
			otherlv_1=Ldb
			{
				newLeafNode(otherlv_1, grammarAccess.getLdDirectAccess().getLdbKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getLdDirectAccess().getDirectParserRuleCall_1());
		}
		this_Direct_2=ruleDirect
		{
			$current = $this_Direct_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLdIndexed
entryRuleLdIndexed returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLdIndexedRule()); }
	iv_ruleLdIndexed=ruleLdIndexed
	{ $current=$iv_ruleLdIndexed.current; }
	EOF;

// Rule LdIndexed
ruleLdIndexed returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=Ld
			{
				newLeafNode(otherlv_0, grammarAccess.getLdIndexedAccess().getLdKeyword_0_0());
			}
			    |
			otherlv_1=Ldb
			{
				newLeafNode(otherlv_1, grammarAccess.getLdIndexedAccess().getLdbKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getLdIndexedAccess().getIndexedParserRuleCall_1());
		}
		this_Indexed_2=ruleIndexed
		{
			$current = $this_Indexed_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLdBasedIndexed
entryRuleLdBasedIndexed returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLdBasedIndexedRule()); }
	iv_ruleLdBasedIndexed=ruleLdBasedIndexed
	{ $current=$iv_ruleLdBasedIndexed.current; }
	EOF;

// Rule LdBasedIndexed
ruleLdBasedIndexed returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=Ld
			{
				newLeafNode(otherlv_0, grammarAccess.getLdBasedIndexedAccess().getLdKeyword_0_0());
			}
			    |
			otherlv_1=Ldb
			{
				newLeafNode(otherlv_1, grammarAccess.getLdBasedIndexedAccess().getLdbKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getLdBasedIndexedAccess().getBasedIndexedParserRuleCall_1());
		}
		this_BasedIndexed_2=ruleBasedIndexed
		{
			$current = $this_BasedIndexed_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStDirect
entryRuleStDirect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStDirectRule()); }
	iv_ruleStDirect=ruleStDirect
	{ $current=$iv_ruleStDirect.current; }
	EOF;

// Rule StDirect
ruleStDirect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=St
			{
				newLeafNode(otherlv_0, grammarAccess.getStDirectAccess().getStKeyword_0_0());
			}
			    |
			otherlv_1=Stb
			{
				newLeafNode(otherlv_1, grammarAccess.getStDirectAccess().getStbKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getStDirectAccess().getDirectParserRuleCall_1());
		}
		this_Direct_2=ruleDirect
		{
			$current = $this_Direct_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStIndexed
entryRuleStIndexed returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStIndexedRule()); }
	iv_ruleStIndexed=ruleStIndexed
	{ $current=$iv_ruleStIndexed.current; }
	EOF;

// Rule StIndexed
ruleStIndexed returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=St
			{
				newLeafNode(otherlv_0, grammarAccess.getStIndexedAccess().getStKeyword_0_0());
			}
			    |
			otherlv_1=Stb
			{
				newLeafNode(otherlv_1, grammarAccess.getStIndexedAccess().getStbKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getStIndexedAccess().getIndexedParserRuleCall_1());
		}
		this_Indexed_2=ruleIndexed
		{
			$current = $this_Indexed_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStBasedIndexed
entryRuleStBasedIndexed returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStBasedIndexedRule()); }
	iv_ruleStBasedIndexed=ruleStBasedIndexed
	{ $current=$iv_ruleStBasedIndexed.current; }
	EOF;

// Rule StBasedIndexed
ruleStBasedIndexed returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=St
			{
				newLeafNode(otherlv_0, grammarAccess.getStBasedIndexedAccess().getStKeyword_0_0());
			}
			    |
			otherlv_1=Stb
			{
				newLeafNode(otherlv_1, grammarAccess.getStBasedIndexedAccess().getStbKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getStBasedIndexedAccess().getBasedIndexedParserRuleCall_1());
		}
		this_BasedIndexed_2=ruleBasedIndexed
		{
			$current = $this_BasedIndexed_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAdd
entryRuleAdd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddRule()); }
	iv_ruleAdd=ruleAdd
	{ $current=$iv_ruleAdd.current; }
	EOF;

// Rule Add
ruleAdd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0=Add
				{
					newLeafNode(otherlv_0, grammarAccess.getAddAccess().getAddKeyword_0_0_0());
				}
				    |
				otherlv_1=Addf
				{
					newLeafNode(otherlv_1, grammarAccess.getAddAccess().getAddfKeyword_0_0_1());
				}
				    |
				otherlv_2=Adc
				{
					newLeafNode(otherlv_2, grammarAccess.getAddAccess().getAdcKeyword_0_0_2());
				}
				    |
				otherlv_3=Adcf
				{
					newLeafNode(otherlv_3, grammarAccess.getAddAccess().getAdcfKeyword_0_0_3());
				}
			)
			(
				{
					newCompositeNode(grammarAccess.getAddAccess().getOperationsWithConstantParserRuleCall_0_1_0());
				}
				this_OperationsWithConstant_4=ruleOperationsWithConstant
				{
					$current = $this_OperationsWithConstant_4.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getAddAccess().getOperationsWithTreeRegistersParserRuleCall_0_1_1());
				}
				this_OperationsWithTreeRegisters_5=ruleOperationsWithTreeRegisters
				{
					$current = $this_OperationsWithTreeRegisters_5.current;
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				otherlv_6=Inc
				{
					newLeafNode(otherlv_6, grammarAccess.getAddAccess().getIncKeyword_1_0_0());
				}
				    |
				otherlv_7=Incf
				{
					newLeafNode(otherlv_7, grammarAccess.getAddAccess().getIncfKeyword_1_0_1());
				}
			)
			{
				newCompositeNode(grammarAccess.getAddAccess().getREGISTERSParserRuleCall_1_1());
			}
			ruleREGISTERS
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSub
entryRuleSub returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubRule()); }
	iv_ruleSub=ruleSub
	{ $current=$iv_ruleSub.current; }
	EOF;

// Rule Sub
ruleSub returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0=Sub
				{
					newLeafNode(otherlv_0, grammarAccess.getSubAccess().getSubKeyword_0_0_0());
				}
				    |
				otherlv_1=Subf
				{
					newLeafNode(otherlv_1, grammarAccess.getSubAccess().getSubfKeyword_0_0_1());
				}
				    |
				otherlv_2=Sbb
				{
					newLeafNode(otherlv_2, grammarAccess.getSubAccess().getSbbKeyword_0_0_2());
				}
				    |
				otherlv_3=Sbbf
				{
					newLeafNode(otherlv_3, grammarAccess.getSubAccess().getSbbfKeyword_0_0_3());
				}
			)
			(
				{
					newCompositeNode(grammarAccess.getSubAccess().getOperationsWithConstantParserRuleCall_0_1_0());
				}
				this_OperationsWithConstant_4=ruleOperationsWithConstant
				{
					$current = $this_OperationsWithConstant_4.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getSubAccess().getOperationsWithTreeRegistersParserRuleCall_0_1_1());
				}
				this_OperationsWithTreeRegisters_5=ruleOperationsWithTreeRegisters
				{
					$current = $this_OperationsWithTreeRegisters_5.current;
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_6=Subr
			{
				newLeafNode(otherlv_6, grammarAccess.getSubAccess().getSubrKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getSubAccess().getOperationsWithTreeRegistersParserRuleCall_1_1());
			}
			this_OperationsWithTreeRegisters_7=ruleOperationsWithTreeRegisters
			{
				$current = $this_OperationsWithTreeRegisters_7.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(
				otherlv_8=Dec
				{
					newLeafNode(otherlv_8, grammarAccess.getSubAccess().getDecKeyword_2_0_0());
				}
				    |
				otherlv_9=Decf
				{
					newLeafNode(otherlv_9, grammarAccess.getSubAccess().getDecfKeyword_2_0_1());
				}
			)
			{
				newCompositeNode(grammarAccess.getSubAccess().getREGISTERSParserRuleCall_2_1());
			}
			ruleREGISTERS
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleAnl
entryRuleAnl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnlRule()); }
	iv_ruleAnl=ruleAnl
	{ $current=$iv_ruleAnl.current; }
	EOF;

// Rule Anl
ruleAnl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=Anl
			{
				newLeafNode(otherlv_0, grammarAccess.getAnlAccess().getAnlKeyword_0_0());
			}
			    |
			otherlv_1=Anlf
			{
				newLeafNode(otherlv_1, grammarAccess.getAnlAccess().getAnlfKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getAnlAccess().getOperationsWithTreeRegistersParserRuleCall_1());
		}
		this_OperationsWithTreeRegisters_2=ruleOperationsWithTreeRegisters
		{
			$current = $this_OperationsWithTreeRegisters_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOrl
entryRuleOrl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrlRule()); }
	iv_ruleOrl=ruleOrl
	{ $current=$iv_ruleOrl.current; }
	EOF;

// Rule Orl
ruleOrl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0=Orl
				{
					newLeafNode(otherlv_0, grammarAccess.getOrlAccess().getOrlKeyword_0_0_0());
				}
				    |
				otherlv_1=Orlf
				{
					newLeafNode(otherlv_1, grammarAccess.getOrlAccess().getOrlfKeyword_0_0_1());
				}
			)
			{
				newCompositeNode(grammarAccess.getOrlAccess().getOperationsWithTreeRegistersParserRuleCall_0_1());
			}
			this_OperationsWithTreeRegisters_2=ruleOperationsWithTreeRegisters
			{
				$current = $this_OperationsWithTreeRegisters_2.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(
				otherlv_3=Mov
				{
					newLeafNode(otherlv_3, grammarAccess.getOrlAccess().getMovKeyword_1_0_0());
				}
				    |
				otherlv_4=Movf
				{
					newLeafNode(otherlv_4, grammarAccess.getOrlAccess().getMovfKeyword_1_0_1());
				}
			)
			{
				newCompositeNode(grammarAccess.getOrlAccess().getOperationWithTwoRegistersParserRuleCall_1_1());
			}
			this_OperationWithTwoRegisters_5=ruleOperationWithTwoRegisters
			{
				$current = $this_OperationWithTwoRegisters_5.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleXrl
entryRuleXrl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXrlRule()); }
	iv_ruleXrl=ruleXrl
	{ $current=$iv_ruleXrl.current; }
	EOF;

// Rule Xrl
ruleXrl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=Xrl
			{
				newLeafNode(otherlv_0, grammarAccess.getXrlAccess().getXrlKeyword_0_0());
			}
			    |
			otherlv_1=Xrlf
			{
				newLeafNode(otherlv_1, grammarAccess.getXrlAccess().getXrlfKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getXrlAccess().getOperationsWithTreeRegistersParserRuleCall_1());
		}
		this_OperationsWithTreeRegisters_2=ruleOperationsWithTreeRegisters
		{
			$current = $this_OperationsWithTreeRegisters_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNot
entryRuleNot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotRule()); }
	iv_ruleNot=ruleNot
	{ $current=$iv_ruleNot.current; }
	EOF;

// Rule Not
ruleNot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=Not
			{
				newLeafNode(otherlv_0, grammarAccess.getNotAccess().getNotKeyword_0_0());
			}
			    |
			otherlv_1=Notf
			{
				newLeafNode(otherlv_1, grammarAccess.getNotAccess().getNotfKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getNotAccess().getOperationWithTwoRegistersParserRuleCall_1());
		}
		this_OperationWithTwoRegisters_2=ruleOperationWithTwoRegisters
		{
			$current = $this_OperationWithTwoRegisters_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleShl
entryRuleShl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShlRule()); }
	iv_ruleShl=ruleShl
	{ $current=$iv_ruleShl.current; }
	EOF;

// Rule Shl
ruleShl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Shl
		{
			newLeafNode(otherlv_0, grammarAccess.getShlAccess().getShlKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getShlAccess().getOperationShiftParserRuleCall_1());
		}
		this_OperationShift_1=ruleOperationShift
		{
			$current = $this_OperationShift_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleShr
entryRuleShr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShrRule()); }
	iv_ruleShr=ruleShr
	{ $current=$iv_ruleShr.current; }
	EOF;

// Rule Shr
ruleShr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Shr
		{
			newLeafNode(otherlv_0, grammarAccess.getShrAccess().getShrKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getShrAccess().getOperationShiftParserRuleCall_1());
		}
		this_OperationShift_1=ruleOperationShift
		{
			$current = $this_OperationShift_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRr
entryRuleRr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRrRule()); }
	iv_ruleRr=ruleRr
	{ $current=$iv_ruleRr.current; }
	EOF;

// Rule Rr
ruleRr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=Rrl
			{
				newLeafNode(otherlv_0, grammarAccess.getRrAccess().getRrlKeyword_0_0());
			}
			    |
			otherlv_1=Rrm
			{
				newLeafNode(otherlv_1, grammarAccess.getRrAccess().getRrmKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getRrAccess().getOperationsWithConstantParserRuleCall_1());
		}
		this_OperationsWithConstant_2=ruleOperationsWithConstant
		{
			$current = $this_OperationsWithConstant_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRc
entryRuleRc returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRcRule()); }
	iv_ruleRc=ruleRc
	{ $current=$iv_ruleRc.current; }
	EOF;

// Rule Rc
ruleRc returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=Rcr
			{
				newLeafNode(otherlv_0, grammarAccess.getRcAccess().getRcrKeyword_0_0());
			}
			    |
			otherlv_1=Rcl
			{
				newLeafNode(otherlv_1, grammarAccess.getRcAccess().getRclKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getRcAccess().getOperationWithTwoRegistersParserRuleCall_1());
		}
		this_OperationWithTwoRegisters_2=ruleOperationWithTwoRegisters
		{
			$current = $this_OperationWithTwoRegisters_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleJumpOp
entryRuleJumpOp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJumpOpRule()); }
	iv_ruleJumpOp=ruleJumpOp
	{ $current=$iv_ruleJumpOp.current; }
	EOF;

// Rule JumpOp
ruleJumpOp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_tag_0_1=Jz
					{
						newLeafNode(lv_tag_0_1, grammarAccess.getJumpOpAccess().getTagJzKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJumpOpRule());
						}
						setWithLastConsumed($current, "tag", lv_tag_0_1, null);
					}
					    |
					lv_tag_0_2=Je
					{
						newLeafNode(lv_tag_0_2, grammarAccess.getJumpOpAccess().getTagJeKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJumpOpRule());
						}
						setWithLastConsumed($current, "tag", lv_tag_0_2, null);
					}
					    |
					lv_tag_0_3=Jnz
					{
						newLeafNode(lv_tag_0_3, grammarAccess.getJumpOpAccess().getTagJnzKeyword_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJumpOpRule());
						}
						setWithLastConsumed($current, "tag", lv_tag_0_3, null);
					}
					    |
					lv_tag_0_4=Jne
					{
						newLeafNode(lv_tag_0_4, grammarAccess.getJumpOpAccess().getTagJneKeyword_0_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJumpOpRule());
						}
						setWithLastConsumed($current, "tag", lv_tag_0_4, null);
					}
					    |
					lv_tag_0_5=Jc
					{
						newLeafNode(lv_tag_0_5, grammarAccess.getJumpOpAccess().getTagJcKeyword_0_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJumpOpRule());
						}
						setWithLastConsumed($current, "tag", lv_tag_0_5, null);
					}
					    |
					lv_tag_0_6=Jbl
					{
						newLeafNode(lv_tag_0_6, grammarAccess.getJumpOpAccess().getTagJblKeyword_0_0_5());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJumpOpRule());
						}
						setWithLastConsumed($current, "tag", lv_tag_0_6, null);
					}
					    |
					lv_tag_0_7=Jnc
					{
						newLeafNode(lv_tag_0_7, grammarAccess.getJumpOpAccess().getTagJncKeyword_0_0_6());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJumpOpRule());
						}
						setWithLastConsumed($current, "tag", lv_tag_0_7, null);
					}
					    |
					lv_tag_0_8=Jae
					{
						newLeafNode(lv_tag_0_8, grammarAccess.getJumpOpAccess().getTagJaeKeyword_0_0_7());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJumpOpRule());
						}
						setWithLastConsumed($current, "tag", lv_tag_0_8, null);
					}
					    |
					lv_tag_0_9=Jmp
					{
						newLeafNode(lv_tag_0_9, grammarAccess.getJumpOpAccess().getTagJmpKeyword_0_0_8());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJumpOpRule());
						}
						setWithLastConsumed($current, "tag", lv_tag_0_9, null);
					}
					    |
					lv_tag_0_10=Jmpl
					{
						newLeafNode(lv_tag_0_10, grammarAccess.getJumpOpAccess().getTagJmplKeyword_0_0_9());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJumpOpRule());
						}
						setWithLastConsumed($current, "tag", lv_tag_0_10, null);
					}
				)
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getJumpOpAccess().getOpOffOperationWithOffsetParserRuleCall_1_0_0());
					}
					lv_opOff_1_0=ruleOperationWithOffset
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJumpOpRule());
						}
						set(
							$current,
							"opOff",
							lv_opOff_1_0,
							"org.pds16.pds16asm.Pds16asm.OperationWithOffset");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_opId_2_0=RULE_ID
					{
						newLeafNode(lv_opId_2_0, grammarAccess.getJumpOpAccess().getOpIdIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJumpOpRule());
						}
						setWithLastConsumed(
							$current,
							"opId",
							lv_opId_2_0,
							"org.pds16.pds16asm.Pds16asm.ID");
					}
				)
			)
			    |
			otherlv_3=DollarSign
			{
				newLeafNode(otherlv_3, grammarAccess.getJumpOpAccess().getDollarSignKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleNop
entryRuleNop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNopRule()); }
	iv_ruleNop=ruleNop
	{ $current=$iv_ruleNop.current; }
	EOF;

// Rule Nop
ruleNop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_instruction_0_0=Nop
			{
				newLeafNode(lv_instruction_0_0, grammarAccess.getNopAccess().getInstructionNopKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNopRule());
				}
				setWithLastConsumed($current, "instruction", lv_instruction_0_0, "nop");
			}
		)
	)
;

// Entry rule entryRuleRet
entryRuleRet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRetRule()); }
	iv_ruleRet=ruleRet
	{ $current=$iv_ruleRet.current; }
	EOF;

// Rule Ret
ruleRet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_instruction_0_1=Ret
				{
					newLeafNode(lv_instruction_0_1, grammarAccess.getRetAccess().getInstructionRetKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRetRule());
					}
					setWithLastConsumed($current, "instruction", lv_instruction_0_1, null);
				}
				    |
				lv_instruction_0_2=Iret
				{
					newLeafNode(lv_instruction_0_2, grammarAccess.getRetAccess().getInstructionIretKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRetRule());
					}
					setWithLastConsumed($current, "instruction", lv_instruction_0_2, null);
				}
			)
		)
	)
;

// Entry rule entryRuleImmediate
entryRuleImmediate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImmediateRule()); }
	iv_ruleImmediate=ruleImmediate
	{ $current=$iv_ruleImmediate.current; }
	EOF;

// Rule Immediate
ruleImmediate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getImmediateAccess().getRegisterREGISTERSParserRuleCall_0_0());
				}
				lv_register_0_0=ruleREGISTERS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImmediateRule());
					}
					set(
						$current,
						"register",
						lv_register_0_0,
						"org.pds16.pds16asm.Pds16asm.REGISTERS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=Comma
		{
			newLeafNode(otherlv_1, grammarAccess.getImmediateAccess().getCommaKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getImmediateAccess().getImmediate8Immediate8OrLabelParserRuleCall_2_0_0());
					}
					lv_immediate8_2_0=ruleImmediate8OrLabel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImmediateRule());
						}
						set(
							$current,
							"immediate8",
							lv_immediate8_2_0,
							"org.pds16.pds16asm.Pds16asm.Immediate8OrLabel");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getImmediateAccess().getLowORhighLowOrHightParserRuleCall_2_1_0());
					}
					lv_lowORhigh_3_0=ruleLowOrHight
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImmediateRule());
						}
						set(
							$current,
							"lowORhigh",
							lv_lowORhigh_3_0,
							"org.pds16.pds16asm.Pds16asm.LowOrHight");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDirect
entryRuleDirect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDirectRule()); }
	iv_ruleDirect=ruleDirect
	{ $current=$iv_ruleDirect.current; }
	EOF;

// Rule Direct
ruleDirect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDirectAccess().getRegisterREGISTERSParserRuleCall_0_0());
				}
				lv_register_0_0=ruleREGISTERS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDirectRule());
					}
					set(
						$current,
						"register",
						lv_register_0_0,
						"org.pds16.pds16asm.Pds16asm.REGISTERS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=Comma
		{
			newLeafNode(otherlv_1, grammarAccess.getDirectAccess().getCommaKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDirectAccess().getDirect7DirectOrLabelParserRuleCall_2_0());
				}
				lv_direct7_2_0=ruleDirectOrLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDirectRule());
					}
					set(
						$current,
						"direct7",
						lv_direct7_2_0,
						"org.pds16.pds16asm.Pds16asm.DirectOrLabel");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIndexed
entryRuleIndexed returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndexedRule()); }
	iv_ruleIndexed=ruleIndexed
	{ $current=$iv_ruleIndexed.current; }
	EOF;

// Rule Indexed
ruleIndexed returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexedAccess().getRdREGISTERSParserRuleCall_0_0());
				}
				lv_rd_0_0=ruleREGISTERS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexedRule());
					}
					set(
						$current,
						"rd",
						lv_rd_0_0,
						"org.pds16.pds16asm.Pds16asm.REGISTERS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=Comma
		{
			newLeafNode(otherlv_1, grammarAccess.getIndexedAccess().getCommaKeyword_1());
		}
		otherlv_2=LeftSquareBracket
		{
			newLeafNode(otherlv_2, grammarAccess.getIndexedAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexedAccess().getRbxREGISTERSParserRuleCall_3_0());
				}
				lv_rbx_3_0=ruleREGISTERS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexedRule());
					}
					set(
						$current,
						"rbx",
						lv_rbx_3_0,
						"org.pds16.pds16asm.Pds16asm.REGISTERS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=Comma
		{
			newLeafNode(otherlv_4, grammarAccess.getIndexedAccess().getCommaKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexedAccess().getIdx3Idx3OrLabelParserRuleCall_5_0());
				}
				lv_idx3_5_0=ruleIdx3OrLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexedRule());
					}
					set(
						$current,
						"idx3",
						lv_idx3_5_0,
						"org.pds16.pds16asm.Pds16asm.Idx3OrLabel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=RightSquareBracket
		{
			newLeafNode(otherlv_6, grammarAccess.getIndexedAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleBasedIndexed
entryRuleBasedIndexed returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasedIndexedRule()); }
	iv_ruleBasedIndexed=ruleBasedIndexed
	{ $current=$iv_ruleBasedIndexed.current; }
	EOF;

// Rule BasedIndexed
ruleBasedIndexed returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBasedIndexedAccess().getREGISTERSParserRuleCall_0());
		}
		ruleREGISTERS
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_1=Comma
		{
			newLeafNode(otherlv_1, grammarAccess.getBasedIndexedAccess().getCommaKeyword_1());
		}
		otherlv_2=LeftSquareBracket
		{
			newLeafNode(otherlv_2, grammarAccess.getBasedIndexedAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBasedIndexedAccess().getRbxREGISTERSParserRuleCall_3_0());
				}
				lv_rbx_3_0=ruleREGISTERS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBasedIndexedRule());
					}
					set(
						$current,
						"rbx",
						lv_rbx_3_0,
						"org.pds16.pds16asm.Pds16asm.REGISTERS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=Comma
		{
			newLeafNode(otherlv_4, grammarAccess.getBasedIndexedAccess().getCommaKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBasedIndexedAccess().getRixREGISTERSParserRuleCall_5_0());
				}
				lv_rix_5_0=ruleREGISTERS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBasedIndexedRule());
					}
					set(
						$current,
						"rix",
						lv_rix_5_0,
						"org.pds16.pds16asm.Pds16asm.REGISTERS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=RightSquareBracket
		{
			newLeafNode(otherlv_6, grammarAccess.getBasedIndexedAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDirectOrLabel
entryRuleDirectOrLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDirectOrLabelRule()); }
	iv_ruleDirectOrLabel=ruleDirectOrLabel
	{ $current=$iv_ruleDirectOrLabel.current; }
	EOF;

// Rule DirectOrLabel
ruleDirectOrLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDirectOrLabelAccess().getNumberNumberParserRuleCall_0_0());
				}
				lv_number_0_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDirectOrLabelRule());
					}
					set(
						$current,
						"number",
						lv_number_0_0,
						"org.pds16.pds16asm.Pds16asm.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_label_1_0=RULE_ID
				{
					newLeafNode(lv_label_1_0, grammarAccess.getDirectOrLabelAccess().getLabelIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDirectOrLabelRule());
					}
					setWithLastConsumed(
						$current,
						"label",
						lv_label_1_0,
						"org.pds16.pds16asm.Pds16asm.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleImmediate8OrLabel
entryRuleImmediate8OrLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImmediate8OrLabelRule()); }
	iv_ruleImmediate8OrLabel=ruleImmediate8OrLabel
	{ $current=$iv_ruleImmediate8OrLabel.current; }
	EOF;

// Rule Immediate8OrLabel
ruleImmediate8OrLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=NumberSign
		{
			newLeafNode(otherlv_0, grammarAccess.getImmediate8OrLabelAccess().getNumberSignKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getImmediate8OrLabelAccess().getNumberNumberParserRuleCall_1_0_0());
					}
					lv_number_1_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImmediate8OrLabelRule());
						}
						set(
							$current,
							"number",
							lv_number_1_0,
							"org.pds16.pds16asm.Pds16asm.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_label_2_0=RULE_ID
					{
						newLeafNode(lv_label_2_0, grammarAccess.getImmediate8OrLabelAccess().getLabelIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImmediate8OrLabelRule());
						}
						setWithLastConsumed(
							$current,
							"label",
							lv_label_2_0,
							"org.pds16.pds16asm.Pds16asm.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleIdx3OrLabel
entryRuleIdx3OrLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdx3OrLabelRule()); }
	iv_ruleIdx3OrLabel=ruleIdx3OrLabel
	{ $current=$iv_ruleIdx3OrLabel.current; }
	EOF;

// Rule Idx3OrLabel
ruleIdx3OrLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=NumberSign
		{
			newLeafNode(otherlv_0, grammarAccess.getIdx3OrLabelAccess().getNumberSignKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getIdx3OrLabelAccess().getNumberNumberParserRuleCall_1_0_0());
					}
					lv_number_1_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIdx3OrLabelRule());
						}
						set(
							$current,
							"number",
							lv_number_1_0,
							"org.pds16.pds16asm.Pds16asm.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_label_2_0=RULE_ID
					{
						newLeafNode(lv_label_2_0, grammarAccess.getIdx3OrLabelAccess().getLabelIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIdx3OrLabelRule());
						}
						setWithLastConsumed(
							$current,
							"label",
							lv_label_2_0,
							"org.pds16.pds16asm.Pds16asm.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleConst4OrLabel
entryRuleConst4OrLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConst4OrLabelRule()); }
	iv_ruleConst4OrLabel=ruleConst4OrLabel
	{ $current=$iv_ruleConst4OrLabel.current; }
	EOF;

// Rule Const4OrLabel
ruleConst4OrLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=NumberSign
		{
			newLeafNode(otherlv_0, grammarAccess.getConst4OrLabelAccess().getNumberSignKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConst4OrLabelAccess().getNumberNumberParserRuleCall_1_0_0());
					}
					lv_number_1_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConst4OrLabelRule());
						}
						set(
							$current,
							"number",
							lv_number_1_0,
							"org.pds16.pds16asm.Pds16asm.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_label_2_0=RULE_ID
					{
						newLeafNode(lv_label_2_0, grammarAccess.getConst4OrLabelAccess().getLabelIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConst4OrLabelRule());
						}
						setWithLastConsumed(
							$current,
							"label",
							lv_label_2_0,
							"org.pds16.pds16asm.Pds16asm.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleOffset8OrLabel
entryRuleOffset8OrLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOffset8OrLabelRule()); }
	iv_ruleOffset8OrLabel=ruleOffset8OrLabel
	{ $current=$iv_ruleOffset8OrLabel.current; }
	EOF;

// Rule Offset8OrLabel
ruleOffset8OrLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=NumberSign
		{
			newLeafNode(otherlv_0, grammarAccess.getOffset8OrLabelAccess().getNumberSignKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOffset8OrLabelAccess().getNumberNumberParserRuleCall_1_0_0());
					}
					lv_number_1_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOffset8OrLabelRule());
						}
						set(
							$current,
							"number",
							lv_number_1_0,
							"org.pds16.pds16asm.Pds16asm.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_label_2_0=RULE_ID
					{
						newLeafNode(lv_label_2_0, grammarAccess.getOffset8OrLabelAccess().getLabelIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOffset8OrLabelRule());
						}
						setWithLastConsumed(
							$current,
							"label",
							lv_label_2_0,
							"org.pds16.pds16asm.Pds16asm.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleOperationWithTwoRegisters
entryRuleOperationWithTwoRegisters returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationWithTwoRegistersRule()); }
	iv_ruleOperationWithTwoRegisters=ruleOperationWithTwoRegisters
	{ $current=$iv_ruleOperationWithTwoRegisters.current; }
	EOF;

// Rule OperationWithTwoRegisters
ruleOperationWithTwoRegisters returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationWithTwoRegistersAccess().getRdREGISTERSParserRuleCall_0_0());
				}
				lv_rd_0_0=ruleREGISTERS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationWithTwoRegistersRule());
					}
					set(
						$current,
						"rd",
						lv_rd_0_0,
						"org.pds16.pds16asm.Pds16asm.REGISTERS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=Comma
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationWithTwoRegistersAccess().getCommaKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationWithTwoRegistersAccess().getRmREGISTERSParserRuleCall_2_0());
				}
				lv_rm_2_0=ruleREGISTERS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationWithTwoRegistersRule());
					}
					set(
						$current,
						"rm",
						lv_rm_2_0,
						"org.pds16.pds16asm.Pds16asm.REGISTERS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOperationsWithTreeRegisters
entryRuleOperationsWithTreeRegisters returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationsWithTreeRegistersRule()); }
	iv_ruleOperationsWithTreeRegisters=ruleOperationsWithTreeRegisters
	{ $current=$iv_ruleOperationsWithTreeRegisters.current; }
	EOF;

// Rule OperationsWithTreeRegisters
ruleOperationsWithTreeRegisters returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationsWithTreeRegistersAccess().getRdREGISTERSParserRuleCall_0_0());
				}
				lv_rd_0_0=ruleREGISTERS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationsWithTreeRegistersRule());
					}
					set(
						$current,
						"rd",
						lv_rd_0_0,
						"org.pds16.pds16asm.Pds16asm.REGISTERS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=Comma
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationsWithTreeRegistersAccess().getCommaKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationsWithTreeRegistersAccess().getRmREGISTERSParserRuleCall_2_0());
				}
				lv_rm_2_0=ruleREGISTERS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationsWithTreeRegistersRule());
					}
					set(
						$current,
						"rm",
						lv_rm_2_0,
						"org.pds16.pds16asm.Pds16asm.REGISTERS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=Comma
		{
			newLeafNode(otherlv_3, grammarAccess.getOperationsWithTreeRegistersAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationsWithTreeRegistersAccess().getRnREGISTERSParserRuleCall_4_0());
				}
				lv_rn_4_0=ruleREGISTERS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationsWithTreeRegistersRule());
					}
					set(
						$current,
						"rn",
						lv_rn_4_0,
						"org.pds16.pds16asm.Pds16asm.REGISTERS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOperationsWithConstant
entryRuleOperationsWithConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationsWithConstantRule()); }
	iv_ruleOperationsWithConstant=ruleOperationsWithConstant
	{ $current=$iv_ruleOperationsWithConstant.current; }
	EOF;

// Rule OperationsWithConstant
ruleOperationsWithConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationsWithConstantAccess().getRdREGISTERSParserRuleCall_0_0());
				}
				lv_rd_0_0=ruleREGISTERS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationsWithConstantRule());
					}
					set(
						$current,
						"rd",
						lv_rd_0_0,
						"org.pds16.pds16asm.Pds16asm.REGISTERS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=Comma
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationsWithConstantAccess().getCommaKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationsWithConstantAccess().getRmREGISTERSParserRuleCall_2_0());
				}
				lv_rm_2_0=ruleREGISTERS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationsWithConstantRule());
					}
					set(
						$current,
						"rm",
						lv_rm_2_0,
						"org.pds16.pds16asm.Pds16asm.REGISTERS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=Comma
		{
			newLeafNode(otherlv_3, grammarAccess.getOperationsWithConstantAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationsWithConstantAccess().getConst4Const4OrLabelParserRuleCall_4_0());
				}
				lv_const4_4_0=ruleConst4OrLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationsWithConstantRule());
					}
					set(
						$current,
						"const4",
						lv_const4_4_0,
						"org.pds16.pds16asm.Pds16asm.Const4OrLabel");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOperationShift
entryRuleOperationShift returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationShiftRule()); }
	iv_ruleOperationShift=ruleOperationShift
	{ $current=$iv_ruleOperationShift.current; }
	EOF;

// Rule OperationShift
ruleOperationShift returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationShiftAccess().getRdREGISTERSParserRuleCall_0_0());
				}
				lv_rd_0_0=ruleREGISTERS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationShiftRule());
					}
					set(
						$current,
						"rd",
						lv_rd_0_0,
						"org.pds16.pds16asm.Pds16asm.REGISTERS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=Comma
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationShiftAccess().getCommaKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationShiftAccess().getRmREGISTERSParserRuleCall_2_0());
				}
				lv_rm_2_0=ruleREGISTERS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationShiftRule());
					}
					set(
						$current,
						"rm",
						lv_rm_2_0,
						"org.pds16.pds16asm.Pds16asm.REGISTERS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=Comma
		{
			newLeafNode(otherlv_3, grammarAccess.getOperationShiftAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationShiftAccess().getConst4Const4OrLabelParserRuleCall_4_0());
				}
				lv_const4_4_0=ruleConst4OrLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationShiftRule());
					}
					set(
						$current,
						"const4",
						lv_const4_4_0,
						"org.pds16.pds16asm.Pds16asm.Const4OrLabel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=Comma
		{
			newLeafNode(otherlv_5, grammarAccess.getOperationShiftAccess().getCommaKeyword_5());
		}
		(
			(
				(
					lv_sin_6_1=RULE_INT
					{
						newLeafNode(lv_sin_6_1, grammarAccess.getOperationShiftAccess().getSinINTTerminalRuleCall_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationShiftRule());
						}
						setWithLastConsumed(
							$current,
							"sin",
							lv_sin_6_1,
							"org.pds16.pds16asm.Pds16asm.INT");
					}
					    |
					lv_sin_6_2=RULE_HEX
					{
						newLeafNode(lv_sin_6_2, grammarAccess.getOperationShiftAccess().getSinHEXTerminalRuleCall_6_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationShiftRule());
						}
						setWithLastConsumed(
							$current,
							"sin",
							lv_sin_6_2,
							"org.pds16.pds16asm.Pds16asm.HEX");
					}
					    |
					lv_sin_6_3=RULE_OCT
					{
						newLeafNode(lv_sin_6_3, grammarAccess.getOperationShiftAccess().getSinOCTTerminalRuleCall_6_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationShiftRule());
						}
						setWithLastConsumed(
							$current,
							"sin",
							lv_sin_6_3,
							"org.pds16.pds16asm.Pds16asm.OCT");
					}
					    |
					lv_sin_6_4=RULE_BIN
					{
						newLeafNode(lv_sin_6_4, grammarAccess.getOperationShiftAccess().getSinBINTerminalRuleCall_6_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationShiftRule());
						}
						setWithLastConsumed(
							$current,
							"sin",
							lv_sin_6_4,
							"org.pds16.pds16asm.Pds16asm.BIN");
					}
					    |
					lv_sin_6_5=RULE_CHAR
					{
						newLeafNode(lv_sin_6_5, grammarAccess.getOperationShiftAccess().getSinCHARTerminalRuleCall_6_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationShiftRule());
						}
						setWithLastConsumed(
							$current,
							"sin",
							lv_sin_6_5,
							"org.pds16.pds16asm.Pds16asm.CHAR");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleOperationWithOffset
entryRuleOperationWithOffset returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationWithOffsetRule()); }
	iv_ruleOperationWithOffset=ruleOperationWithOffset
	{ $current=$iv_ruleOperationWithOffset.current; }
	EOF;

// Rule OperationWithOffset
ruleOperationWithOffset returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationWithOffsetAccess().getRbxREGISTERSParserRuleCall_0_0());
				}
				lv_rbx_0_0=ruleREGISTERS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationWithOffsetRule());
					}
					set(
						$current,
						"rbx",
						lv_rbx_0_0,
						"org.pds16.pds16asm.Pds16asm.REGISTERS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=Comma
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationWithOffsetAccess().getCommaKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationWithOffsetAccess().getOffset8Offset8OrLabelParserRuleCall_2_0());
				}
				lv_offset8_2_0=ruleOffset8OrLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationWithOffsetRule());
					}
					set(
						$current,
						"offset8",
						lv_offset8_2_0,
						"org.pds16.pds16asm.Pds16asm.Offset8OrLabel");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_numericValue_0_1=RULE_INT
					{
						newLeafNode(lv_numericValue_0_1, grammarAccess.getExpressionAccess().getNumericValueINTTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionRule());
						}
						addWithLastConsumed(
							$current,
							"numericValue",
							lv_numericValue_0_1,
							"org.pds16.pds16asm.Pds16asm.INT");
					}
					    |
					lv_numericValue_0_2=RULE_HEX
					{
						newLeafNode(lv_numericValue_0_2, grammarAccess.getExpressionAccess().getNumericValueHEXTerminalRuleCall_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionRule());
						}
						addWithLastConsumed(
							$current,
							"numericValue",
							lv_numericValue_0_2,
							"org.pds16.pds16asm.Pds16asm.HEX");
					}
					    |
					lv_numericValue_0_3=RULE_OCT
					{
						newLeafNode(lv_numericValue_0_3, grammarAccess.getExpressionAccess().getNumericValueOCTTerminalRuleCall_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionRule());
						}
						addWithLastConsumed(
							$current,
							"numericValue",
							lv_numericValue_0_3,
							"org.pds16.pds16asm.Pds16asm.OCT");
					}
					    |
					lv_numericValue_0_4=RULE_BIN
					{
						newLeafNode(lv_numericValue_0_4, grammarAccess.getExpressionAccess().getNumericValueBINTerminalRuleCall_0_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionRule());
						}
						addWithLastConsumed(
							$current,
							"numericValue",
							lv_numericValue_0_4,
							"org.pds16.pds16asm.Pds16asm.BIN");
					}
					    |
					lv_numericValue_0_5=RULE_CHAR
					{
						newLeafNode(lv_numericValue_0_5, grammarAccess.getExpressionAccess().getNumericValueCHARTerminalRuleCall_0_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionRule());
						}
						addWithLastConsumed(
							$current,
							"numericValue",
							lv_numericValue_0_5,
							"org.pds16.pds16asm.Pds16asm.CHAR");
					}
				)
			)
		)
		    |
		(
			(
				lv_idValue_1_0=RULE_ID
				{
					newLeafNode(lv_idValue_1_0, grammarAccess.getExpressionAccess().getIdValueIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpressionRule());
					}
					addWithLastConsumed(
						$current,
						"idValue",
						lv_idValue_1_0,
						"org.pds16.pds16asm.Pds16asm.ID");
				}
			)
		)
	)+
;

// Entry rule entryRuleLowOrHight
entryRuleLowOrHight returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLowOrHightRule()); }
	iv_ruleLowOrHight=ruleLowOrHight
	{ $current=$iv_ruleLowOrHight.current; }
	EOF;

// Rule LowOrHight
ruleLowOrHight returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=NumberSign
		{
			newLeafNode(otherlv_0, grammarAccess.getLowOrHightAccess().getNumberSignKeyword_0());
		}
		(
			otherlv_1=Low
			{
				newLeafNode(otherlv_1, grammarAccess.getLowOrHightAccess().getLowKeyword_1_0());
			}
			    |
			otherlv_2=High
			{
				newLeafNode(otherlv_2, grammarAccess.getLowOrHightAccess().getHighKeyword_1_1());
			}
		)
		otherlv_3=LeftParenthesis
		{
			newLeafNode(otherlv_3, grammarAccess.getLowOrHightAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLowOrHightAccess().getValueExpressionParserRuleCall_3_0());
				}
				lv_value_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLowOrHightRule());
					}
					set(
						$current,
						"value",
						lv_value_4_0,
						"org.pds16.pds16asm.Pds16asm.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=RightParenthesis
		{
			newLeafNode(otherlv_5, grammarAccess.getLowOrHightAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleREGISTERS
entryRuleREGISTERS returns [String current=null]:
	{ newCompositeNode(grammarAccess.getREGISTERSRule()); }
	iv_ruleREGISTERS=ruleREGISTERS
	{ $current=$iv_ruleREGISTERS.current.getText(); }
	EOF;

// Rule REGISTERS
ruleREGISTERS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=R0
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getREGISTERSAccess().getR0Keyword_0());
		}
		    |
		kw=R1
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getREGISTERSAccess().getR1Keyword_1());
		}
		    |
		kw=R2
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getREGISTERSAccess().getR2Keyword_2());
		}
		    |
		kw=R3
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getREGISTERSAccess().getR3Keyword_3());
		}
		    |
		kw=R4
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getREGISTERSAccess().getR4Keyword_4());
		}
		    |
		kw=R5
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getREGISTERSAccess().getR5Keyword_5());
		}
		    |
		kw=R6
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getREGISTERSAccess().getR6Keyword_6());
		}
		    |
		kw=R7
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getREGISTERSAccess().getR7Keyword_7());
		}
		    |
		kw=LR
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getREGISTERSAccess().getLRKeyword_8());
		}
		    |
		kw=PSW
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getREGISTERSAccess().getPSWKeyword_9());
		}
		    |
		kw=PC
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getREGISTERSAccess().getPCKeyword_10());
		}
	)
;

// Entry rule entryRuleNumber
entryRuleNumber returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberRule()); }
	iv_ruleNumber=ruleNumber
	{ $current=$iv_ruleNumber.current; }
	EOF;

// Rule Number
ruleNumber returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_1=RULE_INT
				{
					newLeafNode(lv_value_0_1, grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_1,
						"org.pds16.pds16asm.Pds16asm.INT");
				}
				    |
				lv_value_0_2=RULE_HEX
				{
					newLeafNode(lv_value_0_2, grammarAccess.getNumberAccess().getValueHEXTerminalRuleCall_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_2,
						"org.pds16.pds16asm.Pds16asm.HEX");
				}
				    |
				lv_value_0_3=RULE_OCT
				{
					newLeafNode(lv_value_0_3, grammarAccess.getNumberAccess().getValueOCTTerminalRuleCall_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_3,
						"org.pds16.pds16asm.Pds16asm.OCT");
				}
				    |
				lv_value_0_4=RULE_BIN
				{
					newLeafNode(lv_value_0_4, grammarAccess.getNumberAccess().getValueBINTerminalRuleCall_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_4,
						"org.pds16.pds16asm.Pds16asm.BIN");
				}
				    |
				lv_value_0_5=RULE_CHAR
				{
					newLeafNode(lv_value_0_5, grammarAccess.getNumberAccess().getValueCHARTerminalRuleCall_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_5,
						"org.pds16.pds16asm.Pds16asm.CHAR");
				}
			)
		)
	)
;
