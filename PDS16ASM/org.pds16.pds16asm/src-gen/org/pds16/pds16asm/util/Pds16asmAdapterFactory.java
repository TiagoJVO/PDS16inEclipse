/**
 * generated by Xtext 2.9.2
 */
package org.pds16.pds16asm.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import org.pds16.pds16asm.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see org.pds16.pds16asm.Pds16asmPackage
 * @generated
 */
public class Pds16asmAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static Pds16asmPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Pds16asmAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = Pds16asmPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected Pds16asmSwitch<Adapter> modelSwitch =
    new Pds16asmSwitch<Adapter>()
    {
      @Override
      public Adapter caseModel(Model object)
      {
        return createModelAdapter();
      }
      @Override
      public Adapter caseOperations(Operations object)
      {
        return createOperationsAdapter();
      }
      @Override
      public Adapter caseOperationLDI(OperationLDI object)
      {
        return createOperationLDIAdapter();
      }
      @Override
      public Adapter caseOperationLD2(OperationLD2 object)
      {
        return createOperationLD2Adapter();
      }
      @Override
      public Adapter caseIndexed(Indexed object)
      {
        return createIndexedAdapter();
      }
      @Override
      public Adapter caseHexaDecimal(HexaDecimal object)
      {
        return createHexaDecimalAdapter();
      }
      @Override
      public Adapter caseRegisters(Registers object)
      {
        return createRegistersAdapter();
      }
      @Override
      public Adapter caseR1(R1 object)
      {
        return createR1Adapter();
      }
      @Override
      public Adapter caseR2(R2 object)
      {
        return createR2Adapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link org.pds16.pds16asm.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.pds16.pds16asm.Model
   * @generated
   */
  public Adapter createModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.pds16.pds16asm.Operations <em>Operations</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.pds16.pds16asm.Operations
   * @generated
   */
  public Adapter createOperationsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.pds16.pds16asm.OperationLDI <em>Operation LDI</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.pds16.pds16asm.OperationLDI
   * @generated
   */
  public Adapter createOperationLDIAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.pds16.pds16asm.OperationLD2 <em>Operation LD2</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.pds16.pds16asm.OperationLD2
   * @generated
   */
  public Adapter createOperationLD2Adapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.pds16.pds16asm.Indexed <em>Indexed</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.pds16.pds16asm.Indexed
   * @generated
   */
  public Adapter createIndexedAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.pds16.pds16asm.HexaDecimal <em>Hexa Decimal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.pds16.pds16asm.HexaDecimal
   * @generated
   */
  public Adapter createHexaDecimalAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.pds16.pds16asm.Registers <em>Registers</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.pds16.pds16asm.Registers
   * @generated
   */
  public Adapter createRegistersAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.pds16.pds16asm.R1 <em>R1</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.pds16.pds16asm.R1
   * @generated
   */
  public Adapter createR1Adapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.pds16.pds16asm.R2 <em>R2</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.pds16.pds16asm.R2
   * @generated
   */
  public Adapter createR2Adapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //Pds16asmAdapterFactory
