/**
 * generated by Xtext 2.9.2
 */
package org.pds16.pds16asm.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.pds16.pds16asm.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.pds16.pds16asm.Pds16asmPackage
 * @generated
 */
public class Pds16asmSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static Pds16asmPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Pds16asmSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = Pds16asmPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @parameter ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case Pds16asmPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Pds16asmPackage.OPERATIONS:
      {
        Operations operations = (Operations)theEObject;
        T result = caseOperations(operations);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Pds16asmPackage.OPERATION_LDI:
      {
        OperationLDI operationLDI = (OperationLDI)theEObject;
        T result = caseOperationLDI(operationLDI);
        if (result == null) result = caseOperations(operationLDI);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Pds16asmPackage.OPERATION_LD2:
      {
        OperationLD2 operationLD2 = (OperationLD2)theEObject;
        T result = caseOperationLD2(operationLD2);
        if (result == null) result = caseOperations(operationLD2);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Pds16asmPackage.INDEXED:
      {
        Indexed indexed = (Indexed)theEObject;
        T result = caseIndexed(indexed);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Pds16asmPackage.HEXA_DECIMAL:
      {
        HexaDecimal hexaDecimal = (HexaDecimal)theEObject;
        T result = caseHexaDecimal(hexaDecimal);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Pds16asmPackage.REGISTERS:
      {
        Registers registers = (Registers)theEObject;
        T result = caseRegisters(registers);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Pds16asmPackage.R1:
      {
        R1 r1 = (R1)theEObject;
        T result = caseR1(r1);
        if (result == null) result = caseRegisters(r1);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Pds16asmPackage.R2:
      {
        R2 r2 = (R2)theEObject;
        T result = caseR2(r2);
        if (result == null) result = caseRegisters(r2);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Operations</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Operations</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOperations(Operations object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Operation LDI</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Operation LDI</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOperationLDI(OperationLDI object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Operation LD2</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Operation LD2</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOperationLD2(OperationLD2 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Indexed</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Indexed</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIndexed(Indexed object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Hexa Decimal</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Hexa Decimal</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseHexaDecimal(HexaDecimal object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Registers</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Registers</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRegisters(Registers object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>R1</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>R1</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseR1(R1 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>R2</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>R2</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseR2(R2 object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //Pds16asmSwitch
