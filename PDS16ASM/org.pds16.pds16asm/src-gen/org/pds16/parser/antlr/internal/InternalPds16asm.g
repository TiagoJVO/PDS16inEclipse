/*
 * generated by Xtext 2.9.2
 */
grammar InternalPds16asm;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.pds16.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.pds16.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.pds16.services.Pds16asmGrammarAccess;

}

@parser::members {

 	private Pds16asmGrammarAccess grammarAccess;

    public InternalPds16asmParser(TokenStream input, Pds16asmGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "PDS16ASM";
   	}

   	@Override
   	protected Pds16asmGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRulePDS16ASM
entryRulePDS16ASM returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPDS16ASMRule()); }
	iv_rulePDS16ASM=rulePDS16ASM
	{ $current=$iv_rulePDS16ASM.current; }
	EOF;

// Rule PDS16ASM
rulePDS16ASM returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPDS16ASMAccess().getInstuctionsStatementParserRuleCall_0());
			}
			lv_instuctions_0_0=ruleStatement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPDS16ASMRule());
				}
				add(
					$current,
					"instuctions",
					lv_instuctions_0_0,
					"org.pds16.Pds16asm.Statement");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStatementAccess().getInstructionsParserRuleCall_0());
		}
		this_Instructions_0=ruleInstructions
		{
			$current = $this_Instructions_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getLabelParserRuleCall_1());
		}
		this_Label_1=ruleLabel
		{
			$current = $this_Label_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getDirectiveParserRuleCall_2());
		}
		this_Directive_2=ruleDirective
		{
			$current = $this_Directive_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLabel
entryRuleLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabelRule()); }
	iv_ruleLabel=ruleLabel
	{ $current=$iv_ruleLabel.current; }
	EOF;

// Rule Label
ruleLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_labelName_0_0=RULE_ID
				{
					newLeafNode(lv_labelName_0_0, grammarAccess.getLabelAccess().getLabelNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLabelRule());
					}
					setWithLastConsumed(
						$current,
						"labelName",
						lv_labelName_0_0,
						"org.pds16.Pds16asm.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getLabelAccess().getColonKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLabelAccess().getValueLabelParserRuleCall_2_0_0());
					}
					lv_value_2_1=ruleLabel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLabelRule());
						}
						set(
							$current,
							"value",
							lv_value_2_1,
							"org.pds16.Pds16asm.Label");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getLabelAccess().getValueLabelDirectiveParserRuleCall_2_0_1());
					}
					lv_value_2_2=ruleLabelDirective
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLabelRule());
						}
						set(
							$current,
							"value",
							lv_value_2_2,
							"org.pds16.Pds16asm.LabelDirective");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getLabelAccess().getValueInstructionsParserRuleCall_2_0_2());
					}
					lv_value_2_3=ruleInstructions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLabelRule());
						}
						set(
							$current,
							"value",
							lv_value_2_3,
							"org.pds16.Pds16asm.Instructions");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDirective
entryRuleDirective returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDirectiveRule()); }
	iv_ruleDirective=ruleDirective
	{ $current=$iv_ruleDirective.current; }
	EOF;

// Rule Directive
ruleDirective returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='.bss'
		{
			newLeafNode(otherlv_0, grammarAccess.getDirectiveAccess().getBssKeyword_0());
		}
		    |
		otherlv_1='.data'
		{
			newLeafNode(otherlv_1, grammarAccess.getDirectiveAccess().getDataKeyword_1());
		}
		    |
		otherlv_2='.end'
		{
			newLeafNode(otherlv_2, grammarAccess.getDirectiveAccess().getEndKeyword_2());
		}
		    |
		otherlv_3='.text'
		{
			newLeafNode(otherlv_3, grammarAccess.getDirectiveAccess().getTextKeyword_3());
		}
		    |
		{
			newCompositeNode(grammarAccess.getDirectiveAccess().getEquParserRuleCall_4());
		}
		ruleEqu
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDirectiveAccess().getOrgParserRuleCall_5());
		}
		ruleOrg
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDirectiveAccess().getSectionParserRuleCall_6());
		}
		this_Section_6=ruleSection
		{
			$current = $this_Section_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDirectiveAccess().getSetParserRuleCall_7());
		}
		this_Set_7=ruleSet
		{
			$current = $this_Set_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDirectiveAccess().getLabelDirectiveParserRuleCall_8());
		}
		this_LabelDirective_8=ruleLabelDirective
		{
			$current = $this_LabelDirective_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLabelDirective
entryRuleLabelDirective returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabelDirectiveRule()); }
	iv_ruleLabelDirective=ruleLabelDirective
	{ $current=$iv_ruleLabelDirective.current; }
	EOF;

// Rule LabelDirective
ruleLabelDirective returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLabelDirectiveAccess().getAsciiParserRuleCall_0());
		}
		this_Ascii_0=ruleAscii
		{
			$current = $this_Ascii_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLabelDirectiveAccess().getAsciizParserRuleCall_1());
		}
		this_Asciiz_1=ruleAsciiz
		{
			$current = $this_Asciiz_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLabelDirectiveAccess().getByteParserRuleCall_2());
		}
		this_Byte_2=ruleByte
		{
			$current = $this_Byte_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLabelDirectiveAccess().getWordParserRuleCall_3());
		}
		this_Word_3=ruleWord
		{
			$current = $this_Word_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLabelDirectiveAccess().getSpaceParserRuleCall_4());
		}
		this_Space_4=ruleSpace
		{
			$current = $this_Space_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAscii
entryRuleAscii returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAsciiRule()); }
	iv_ruleAscii=ruleAscii
	{ $current=$iv_ruleAscii.current; }
	EOF;

// Rule Ascii
ruleAscii returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='.ascii'
		{
			newLeafNode(otherlv_0, grammarAccess.getAsciiAccess().getAsciiKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_STRING
				{
					newLeafNode(lv_value_1_0, grammarAccess.getAsciiAccess().getValueSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAsciiRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.pds16.Pds16asm.STRING");
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getAsciiAccess().getCommaKeyword_2_0());
			}
			this_STRING_3=RULE_STRING
			{
				newLeafNode(this_STRING_3, grammarAccess.getAsciiAccess().getSTRINGTerminalRuleCall_2_1());
			}
		)*
	)
;

// Entry rule entryRuleAsciiz
entryRuleAsciiz returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAsciizRule()); }
	iv_ruleAsciiz=ruleAsciiz
	{ $current=$iv_ruleAsciiz.current; }
	EOF;

// Rule Asciiz
ruleAsciiz returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='.asciiz'
		{
			newLeafNode(otherlv_0, grammarAccess.getAsciizAccess().getAsciizKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_STRING
				{
					newLeafNode(lv_value_1_0, grammarAccess.getAsciizAccess().getValueSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAsciizRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.pds16.Pds16asm.STRING");
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getAsciizAccess().getCommaKeyword_2_0());
			}
			this_STRING_3=RULE_STRING
			{
				newLeafNode(this_STRING_3, grammarAccess.getAsciizAccess().getSTRINGTerminalRuleCall_2_1());
			}
		)*
	)
;

// Entry rule entryRuleByte
entryRuleByte returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getByteRule()); }
	iv_ruleByte=ruleByte
	{ $current=$iv_ruleByte.current; }
	EOF;

// Rule Byte
ruleByte returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='.byte'
		{
			newLeafNode(otherlv_0, grammarAccess.getByteAccess().getByteKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getByteAccess().getValue1NumberParserRuleCall_1_0());
				}
				lv_value1_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getByteRule());
					}
					set(
						$current,
						"value1",
						lv_value1_1_0,
						"org.pds16.Pds16asm.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getByteAccess().getCommaKeyword_2_0());
			}
			{
				newCompositeNode(grammarAccess.getByteAccess().getNumberParserRuleCall_2_1());
			}
			ruleNumber
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)
;

// Entry rule entryRuleWord
entryRuleWord returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWordRule()); }
	iv_ruleWord=ruleWord
	{ $current=$iv_ruleWord.current; }
	EOF;

// Rule Word
ruleWord returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='.word'
		{
			newLeafNode(otherlv_0, grammarAccess.getWordAccess().getWordKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getWordAccess().getValue1NumberParserRuleCall_1_0_0());
					}
					lv_value1_1_1=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWordRule());
						}
						set(
							$current,
							"value1",
							lv_value1_1_1,
							"org.pds16.Pds16asm.Number");
						afterParserOrEnumRuleCall();
					}
					    |
					lv_value1_1_2=RULE_ID
					{
						newLeafNode(lv_value1_1_2, grammarAccess.getWordAccess().getValue1IDTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWordRule());
						}
						setWithLastConsumed(
							$current,
							"value1",
							lv_value1_1_2,
							"org.pds16.Pds16asm.ID");
					}
				)
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getWordAccess().getCommaKeyword_2_0());
			}
			(
				{
					newCompositeNode(grammarAccess.getWordAccess().getNumberParserRuleCall_2_1_0());
				}
				ruleNumber
				{
					afterParserOrEnumRuleCall();
				}
				    |
				this_ID_4=RULE_ID
				{
					newLeafNode(this_ID_4, grammarAccess.getWordAccess().getIDTerminalRuleCall_2_1_1());
				}
			)
		)*
	)
;

// Entry rule entryRuleSpace
entryRuleSpace returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpaceRule()); }
	iv_ruleSpace=ruleSpace
	{ $current=$iv_ruleSpace.current; }
	EOF;

// Rule Space
ruleSpace returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='.space'
		{
			newLeafNode(otherlv_0, grammarAccess.getSpaceAccess().getSpaceKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSpaceAccess().getSizeNumberParserRuleCall_1_0());
				}
				lv_size_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpaceRule());
					}
					set(
						$current,
						"size",
						lv_size_1_0,
						"org.pds16.Pds16asm.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getSpaceAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSpaceAccess().getByteValeuNumberParserRuleCall_2_1_0());
					}
					lv_byteValeu_3_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSpaceRule());
						}
						set(
							$current,
							"byteValeu",
							lv_byteValeu_3_0,
							"org.pds16.Pds16asm.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSet
entryRuleSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetRule()); }
	iv_ruleSet=ruleSet
	{ $current=$iv_ruleSet.current; }
	EOF;

// Rule Set
ruleSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='.set'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetAccess().getSetKeyword_0());
		}
		(
			(
				lv_value1_1_0=RULE_ID
				{
					newLeafNode(lv_value1_1_0, grammarAccess.getSetAccess().getValue1IDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSetRule());
					}
					setWithLastConsumed(
						$current,
						"value1",
						lv_value1_1_0,
						"org.pds16.Pds16asm.ID");
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getSetAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetAccess().getValue2ExpressionParserRuleCall_3_0());
				}
				lv_value2_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetRule());
					}
					set(
						$current,
						"value2",
						lv_value2_3_0,
						"org.pds16.Pds16asm.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSection
entryRuleSection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSectionRule()); }
	iv_ruleSection=ruleSection
	{ $current=$iv_ruleSection.current; }
	EOF;

// Rule Section
ruleSection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='.section'
		{
			newLeafNode(otherlv_0, grammarAccess.getSectionAccess().getSectionKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_ID
				{
					newLeafNode(lv_value_1_0, grammarAccess.getSectionAccess().getValueIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSectionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.pds16.Pds16asm.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleOrg
entryRuleOrg returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOrgRule()); }
	iv_ruleOrg=ruleOrg
	{ $current=$iv_ruleOrg.current.getText(); }
	EOF;

// Rule Org
ruleOrg returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='.org'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOrgAccess().getOrgKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getOrgAccess().getExpressionParserRuleCall_1());
		}
		this_Expression_1=ruleExpression
		{
			$current.merge(this_Expression_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEqu
entryRuleEqu returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEquRule()); }
	iv_ruleEqu=ruleEqu
	{ $current=$iv_ruleEqu.current.getText(); }
	EOF;

// Rule Equ
ruleEqu returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='.equ'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEquAccess().getEquKeyword_0());
		}
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEquAccess().getIDTerminalRuleCall_1());
		}
		kw=','
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEquAccess().getCommaKeyword_2());
		}
		{
			newCompositeNode(grammarAccess.getEquAccess().getExpressionParserRuleCall_3());
		}
		this_Expression_3=ruleExpression
		{
			$current.merge(this_Expression_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInstructions
entryRuleInstructions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstructionsRule()); }
	iv_ruleInstructions=ruleInstructions
	{ $current=$iv_ruleInstructions.current; }
	EOF;

// Rule Instructions
ruleInstructions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInstructionsAccess().getLoadParserRuleCall_0());
		}
		this_Load_0=ruleLoad
		{
			$current = $this_Load_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionsAccess().getStoreParserRuleCall_1());
		}
		this_Store_1=ruleStore
		{
			$current = $this_Store_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionsAccess().getAritmeticaParserRuleCall_2());
		}
		this_Aritmetica_2=ruleAritmetica
		{
			$current = $this_Aritmetica_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionsAccess().getLogicaParserRuleCall_3());
		}
		this_Logica_3=ruleLogica
		{
			$current = $this_Logica_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionsAccess().getJumpParserRuleCall_4());
		}
		this_Jump_4=ruleJump
		{
			$current = $this_Jump_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionsAccess().getNopParserRuleCall_5());
		}
		this_Nop_5=ruleNop
		{
			$current = $this_Nop_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionsAccess().getRetParserRuleCall_6());
		}
		this_Ret_6=ruleRet
		{
			$current = $this_Ret_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLoad
entryRuleLoad returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoadRule()); }
	iv_ruleLoad=ruleLoad
	{ $current=$iv_ruleLoad.current; }
	EOF;

// Rule Load
ruleLoad returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLoadAccess().getLdImmediateParserRuleCall_0());
		}
		this_LdImmediate_0=ruleLdImmediate
		{
			$current = $this_LdImmediate_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLoadAccess().getLdDirectParserRuleCall_1());
		}
		this_LdDirect_1=ruleLdDirect
		{
			$current = $this_LdDirect_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLoadAccess().getLdIndexedParserRuleCall_2());
		}
		this_LdIndexed_2=ruleLdIndexed
		{
			$current = $this_LdIndexed_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLoadAccess().getLdBasedIndexedParserRuleCall_3());
		}
		this_LdBasedIndexed_3=ruleLdBasedIndexed
		{
			$current = $this_LdBasedIndexed_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStore
entryRuleStore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStoreRule()); }
	iv_ruleStore=ruleStore
	{ $current=$iv_ruleStore.current; }
	EOF;

// Rule Store
ruleStore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStoreAccess().getStDirectParserRuleCall_0());
		}
		this_StDirect_0=ruleStDirect
		{
			$current = $this_StDirect_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStoreAccess().getStIndexedParserRuleCall_1());
		}
		this_StIndexed_1=ruleStIndexed
		{
			$current = $this_StIndexed_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStoreAccess().getStBasedIndexedParserRuleCall_2());
		}
		this_StBasedIndexed_2=ruleStBasedIndexed
		{
			$current = $this_StBasedIndexed_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAritmetica
entryRuleAritmetica returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAritmeticaRule()); }
	iv_ruleAritmetica=ruleAritmetica
	{ $current=$iv_ruleAritmetica.current; }
	EOF;

// Rule Aritmetica
ruleAritmetica returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAritmeticaAccess().getAddParserRuleCall_0());
		}
		this_Add_0=ruleAdd
		{
			$current = $this_Add_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAritmeticaAccess().getSubParserRuleCall_1());
		}
		this_Sub_1=ruleSub
		{
			$current = $this_Sub_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLogica
entryRuleLogica returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicaRule()); }
	iv_ruleLogica=ruleLogica
	{ $current=$iv_ruleLogica.current; }
	EOF;

// Rule Logica
ruleLogica returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLogicaAccess().getAnlParserRuleCall_0());
		}
		this_Anl_0=ruleAnl
		{
			$current = $this_Anl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLogicaAccess().getOrlParserRuleCall_1());
		}
		this_Orl_1=ruleOrl
		{
			$current = $this_Orl_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLogicaAccess().getXrlParserRuleCall_2());
		}
		this_Xrl_2=ruleXrl
		{
			$current = $this_Xrl_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLogicaAccess().getNotParserRuleCall_3());
		}
		this_Not_3=ruleNot
		{
			$current = $this_Not_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLogicaAccess().getShlParserRuleCall_4());
		}
		this_Shl_4=ruleShl
		{
			$current = $this_Shl_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLogicaAccess().getShrParserRuleCall_5());
		}
		this_Shr_5=ruleShr
		{
			$current = $this_Shr_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLogicaAccess().getRrParserRuleCall_6());
		}
		this_Rr_6=ruleRr
		{
			$current = $this_Rr_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLogicaAccess().getRcParserRuleCall_7());
		}
		this_Rc_7=ruleRc
		{
			$current = $this_Rc_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleJump
entryRuleJump returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJumpRule()); }
	iv_ruleJump=ruleJump
	{ $current=$iv_ruleJump.current; }
	EOF;

// Rule Jump
ruleJump returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getJumpAccess().getJumpOpParserRuleCall());
	}
	this_JumpOp_0=ruleJumpOp
	{
		$current = $this_JumpOp_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleLdImmediate
entryRuleLdImmediate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLdImmediateRule()); }
	iv_ruleLdImmediate=ruleLdImmediate
	{ $current=$iv_ruleLdImmediate.current; }
	EOF;

// Rule LdImmediate
ruleLdImmediate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='ldi'
			{
				newLeafNode(otherlv_0, grammarAccess.getLdImmediateAccess().getLdiKeyword_0_0());
			}
			    |
			otherlv_1='ldih'
			{
				newLeafNode(otherlv_1, grammarAccess.getLdImmediateAccess().getLdihKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getLdImmediateAccess().getImmediateParserRuleCall_1());
		}
		this_Immediate_2=ruleImmediate
		{
			$current = $this_Immediate_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLdDirect
entryRuleLdDirect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLdDirectRule()); }
	iv_ruleLdDirect=ruleLdDirect
	{ $current=$iv_ruleLdDirect.current; }
	EOF;

// Rule LdDirect
ruleLdDirect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='ld'
			{
				newLeafNode(otherlv_0, grammarAccess.getLdDirectAccess().getLdKeyword_0_0());
			}
			    |
			otherlv_1='ldb'
			{
				newLeafNode(otherlv_1, grammarAccess.getLdDirectAccess().getLdbKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getLdDirectAccess().getDirectParserRuleCall_1());
		}
		this_Direct_2=ruleDirect
		{
			$current = $this_Direct_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLdIndexed
entryRuleLdIndexed returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLdIndexedRule()); }
	iv_ruleLdIndexed=ruleLdIndexed
	{ $current=$iv_ruleLdIndexed.current; }
	EOF;

// Rule LdIndexed
ruleLdIndexed returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='ld'
			{
				newLeafNode(otherlv_0, grammarAccess.getLdIndexedAccess().getLdKeyword_0_0());
			}
			    |
			otherlv_1='ldb'
			{
				newLeafNode(otherlv_1, grammarAccess.getLdIndexedAccess().getLdbKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getLdIndexedAccess().getIndexedParserRuleCall_1());
		}
		this_Indexed_2=ruleIndexed
		{
			$current = $this_Indexed_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLdBasedIndexed
entryRuleLdBasedIndexed returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLdBasedIndexedRule()); }
	iv_ruleLdBasedIndexed=ruleLdBasedIndexed
	{ $current=$iv_ruleLdBasedIndexed.current; }
	EOF;

// Rule LdBasedIndexed
ruleLdBasedIndexed returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='ld'
			{
				newLeafNode(otherlv_0, grammarAccess.getLdBasedIndexedAccess().getLdKeyword_0_0());
			}
			    |
			otherlv_1='ldb'
			{
				newLeafNode(otherlv_1, grammarAccess.getLdBasedIndexedAccess().getLdbKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getLdBasedIndexedAccess().getBasedIndexedParserRuleCall_1());
		}
		this_BasedIndexed_2=ruleBasedIndexed
		{
			$current = $this_BasedIndexed_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStDirect
entryRuleStDirect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStDirectRule()); }
	iv_ruleStDirect=ruleStDirect
	{ $current=$iv_ruleStDirect.current; }
	EOF;

// Rule StDirect
ruleStDirect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='st'
			{
				newLeafNode(otherlv_0, grammarAccess.getStDirectAccess().getStKeyword_0_0());
			}
			    |
			otherlv_1='stb'
			{
				newLeafNode(otherlv_1, grammarAccess.getStDirectAccess().getStbKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getStDirectAccess().getDirectParserRuleCall_1());
		}
		this_Direct_2=ruleDirect
		{
			$current = $this_Direct_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStIndexed
entryRuleStIndexed returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStIndexedRule()); }
	iv_ruleStIndexed=ruleStIndexed
	{ $current=$iv_ruleStIndexed.current; }
	EOF;

// Rule StIndexed
ruleStIndexed returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='st'
			{
				newLeafNode(otherlv_0, grammarAccess.getStIndexedAccess().getStKeyword_0_0());
			}
			    |
			otherlv_1='stb'
			{
				newLeafNode(otherlv_1, grammarAccess.getStIndexedAccess().getStbKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getStIndexedAccess().getIndexedParserRuleCall_1());
		}
		this_Indexed_2=ruleIndexed
		{
			$current = $this_Indexed_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStBasedIndexed
entryRuleStBasedIndexed returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStBasedIndexedRule()); }
	iv_ruleStBasedIndexed=ruleStBasedIndexed
	{ $current=$iv_ruleStBasedIndexed.current; }
	EOF;

// Rule StBasedIndexed
ruleStBasedIndexed returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='st'
			{
				newLeafNode(otherlv_0, grammarAccess.getStBasedIndexedAccess().getStKeyword_0_0());
			}
			    |
			otherlv_1='stb'
			{
				newLeafNode(otherlv_1, grammarAccess.getStBasedIndexedAccess().getStbKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getStBasedIndexedAccess().getBasedIndexedParserRuleCall_1());
		}
		this_BasedIndexed_2=ruleBasedIndexed
		{
			$current = $this_BasedIndexed_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAdd
entryRuleAdd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddRule()); }
	iv_ruleAdd=ruleAdd
	{ $current=$iv_ruleAdd.current; }
	EOF;

// Rule Add
ruleAdd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='add'
				{
					newLeafNode(otherlv_0, grammarAccess.getAddAccess().getAddKeyword_0_0_0());
				}
				    |
				otherlv_1='addf'
				{
					newLeafNode(otherlv_1, grammarAccess.getAddAccess().getAddfKeyword_0_0_1());
				}
				    |
				otherlv_2='adc'
				{
					newLeafNode(otherlv_2, grammarAccess.getAddAccess().getAdcKeyword_0_0_2());
				}
				    |
				otherlv_3='adcf'
				{
					newLeafNode(otherlv_3, grammarAccess.getAddAccess().getAdcfKeyword_0_0_3());
				}
			)
			(
				{
					newCompositeNode(grammarAccess.getAddAccess().getOperationsWithConstantParserRuleCall_0_1_0());
				}
				this_OperationsWithConstant_4=ruleOperationsWithConstant
				{
					$current = $this_OperationsWithConstant_4.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getAddAccess().getOperationsWithTreeRegistersParserRuleCall_0_1_1());
				}
				this_OperationsWithTreeRegisters_5=ruleOperationsWithTreeRegisters
				{
					$current = $this_OperationsWithTreeRegisters_5.current;
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				otherlv_6='inc'
				{
					newLeafNode(otherlv_6, grammarAccess.getAddAccess().getIncKeyword_1_0_0());
				}
				    |
				otherlv_7='incf'
				{
					newLeafNode(otherlv_7, grammarAccess.getAddAccess().getIncfKeyword_1_0_1());
				}
			)
			{
				newCompositeNode(grammarAccess.getAddAccess().getRegistersParserRuleCall_1_1());
			}
			this_Registers_8=ruleRegisters
			{
				$current = $this_Registers_8.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSub
entryRuleSub returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubRule()); }
	iv_ruleSub=ruleSub
	{ $current=$iv_ruleSub.current; }
	EOF;

// Rule Sub
ruleSub returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='sub'
				{
					newLeafNode(otherlv_0, grammarAccess.getSubAccess().getSubKeyword_0_0_0());
				}
				    |
				otherlv_1='subf'
				{
					newLeafNode(otherlv_1, grammarAccess.getSubAccess().getSubfKeyword_0_0_1());
				}
				    |
				otherlv_2='sbb'
				{
					newLeafNode(otherlv_2, grammarAccess.getSubAccess().getSbbKeyword_0_0_2());
				}
				    |
				otherlv_3='sbbf'
				{
					newLeafNode(otherlv_3, grammarAccess.getSubAccess().getSbbfKeyword_0_0_3());
				}
			)
			(
				{
					newCompositeNode(grammarAccess.getSubAccess().getOperationsWithConstantParserRuleCall_0_1_0());
				}
				this_OperationsWithConstant_4=ruleOperationsWithConstant
				{
					$current = $this_OperationsWithConstant_4.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getSubAccess().getOperationsWithTreeRegistersParserRuleCall_0_1_1());
				}
				this_OperationsWithTreeRegisters_5=ruleOperationsWithTreeRegisters
				{
					$current = $this_OperationsWithTreeRegisters_5.current;
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_6='subr'
			{
				newLeafNode(otherlv_6, grammarAccess.getSubAccess().getSubrKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getSubAccess().getOperationsWithTreeRegistersParserRuleCall_1_1());
			}
			this_OperationsWithTreeRegisters_7=ruleOperationsWithTreeRegisters
			{
				$current = $this_OperationsWithTreeRegisters_7.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(
				otherlv_8='dec'
				{
					newLeafNode(otherlv_8, grammarAccess.getSubAccess().getDecKeyword_2_0_0());
				}
				    |
				otherlv_9='decf'
				{
					newLeafNode(otherlv_9, grammarAccess.getSubAccess().getDecfKeyword_2_0_1());
				}
			)
			{
				newCompositeNode(grammarAccess.getSubAccess().getRegistersParserRuleCall_2_1());
			}
			this_Registers_10=ruleRegisters
			{
				$current = $this_Registers_10.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleAnl
entryRuleAnl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnlRule()); }
	iv_ruleAnl=ruleAnl
	{ $current=$iv_ruleAnl.current; }
	EOF;

// Rule Anl
ruleAnl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='anl'
			{
				newLeafNode(otherlv_0, grammarAccess.getAnlAccess().getAnlKeyword_0_0());
			}
			    |
			otherlv_1='anlf'
			{
				newLeafNode(otherlv_1, grammarAccess.getAnlAccess().getAnlfKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getAnlAccess().getOperationsWithTreeRegistersParserRuleCall_1());
		}
		this_OperationsWithTreeRegisters_2=ruleOperationsWithTreeRegisters
		{
			$current = $this_OperationsWithTreeRegisters_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOrl
entryRuleOrl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrlRule()); }
	iv_ruleOrl=ruleOrl
	{ $current=$iv_ruleOrl.current; }
	EOF;

// Rule Orl
ruleOrl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='orl'
				{
					newLeafNode(otherlv_0, grammarAccess.getOrlAccess().getOrlKeyword_0_0_0());
				}
				    |
				otherlv_1='orlf'
				{
					newLeafNode(otherlv_1, grammarAccess.getOrlAccess().getOrlfKeyword_0_0_1());
				}
			)
			{
				newCompositeNode(grammarAccess.getOrlAccess().getOperationsWithTreeRegistersParserRuleCall_0_1());
			}
			this_OperationsWithTreeRegisters_2=ruleOperationsWithTreeRegisters
			{
				$current = $this_OperationsWithTreeRegisters_2.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(
				otherlv_3='mov'
				{
					newLeafNode(otherlv_3, grammarAccess.getOrlAccess().getMovKeyword_1_0_0());
				}
				    |
				otherlv_4='movf'
				{
					newLeafNode(otherlv_4, grammarAccess.getOrlAccess().getMovfKeyword_1_0_1());
				}
			)
			{
				newCompositeNode(grammarAccess.getOrlAccess().getOperationWithTwoRegistersParserRuleCall_1_1());
			}
			this_OperationWithTwoRegisters_5=ruleOperationWithTwoRegisters
			{
				$current = $this_OperationWithTwoRegisters_5.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleXrl
entryRuleXrl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXrlRule()); }
	iv_ruleXrl=ruleXrl
	{ $current=$iv_ruleXrl.current; }
	EOF;

// Rule Xrl
ruleXrl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='xrl'
			{
				newLeafNode(otherlv_0, grammarAccess.getXrlAccess().getXrlKeyword_0_0());
			}
			    |
			otherlv_1='xrlf'
			{
				newLeafNode(otherlv_1, grammarAccess.getXrlAccess().getXrlfKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getXrlAccess().getOperationsWithTreeRegistersParserRuleCall_1());
		}
		this_OperationsWithTreeRegisters_2=ruleOperationsWithTreeRegisters
		{
			$current = $this_OperationsWithTreeRegisters_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNot
entryRuleNot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotRule()); }
	iv_ruleNot=ruleNot
	{ $current=$iv_ruleNot.current; }
	EOF;

// Rule Not
ruleNot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='not'
			{
				newLeafNode(otherlv_0, grammarAccess.getNotAccess().getNotKeyword_0_0());
			}
			    |
			otherlv_1='notf'
			{
				newLeafNode(otherlv_1, grammarAccess.getNotAccess().getNotfKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getNotAccess().getOperationWithTwoRegistersParserRuleCall_1());
		}
		this_OperationWithTwoRegisters_2=ruleOperationWithTwoRegisters
		{
			$current = $this_OperationWithTwoRegisters_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleShl
entryRuleShl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShlRule()); }
	iv_ruleShl=ruleShl
	{ $current=$iv_ruleShl.current; }
	EOF;

// Rule Shl
ruleShl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='shl'
		{
			newLeafNode(otherlv_0, grammarAccess.getShlAccess().getShlKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getShlAccess().getOperationShiftParserRuleCall_1());
		}
		this_OperationShift_1=ruleOperationShift
		{
			$current = $this_OperationShift_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleShr
entryRuleShr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShrRule()); }
	iv_ruleShr=ruleShr
	{ $current=$iv_ruleShr.current; }
	EOF;

// Rule Shr
ruleShr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='shr'
		{
			newLeafNode(otherlv_0, grammarAccess.getShrAccess().getShrKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getShrAccess().getOperationShiftParserRuleCall_1());
		}
		this_OperationShift_1=ruleOperationShift
		{
			$current = $this_OperationShift_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRr
entryRuleRr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRrRule()); }
	iv_ruleRr=ruleRr
	{ $current=$iv_ruleRr.current; }
	EOF;

// Rule Rr
ruleRr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='rrl'
			{
				newLeafNode(otherlv_0, grammarAccess.getRrAccess().getRrlKeyword_0_0());
			}
			    |
			otherlv_1='rrm'
			{
				newLeafNode(otherlv_1, grammarAccess.getRrAccess().getRrmKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getRrAccess().getOperationsWithConstantParserRuleCall_1());
		}
		this_OperationsWithConstant_2=ruleOperationsWithConstant
		{
			$current = $this_OperationsWithConstant_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRc
entryRuleRc returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRcRule()); }
	iv_ruleRc=ruleRc
	{ $current=$iv_ruleRc.current; }
	EOF;

// Rule Rc
ruleRc returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='rcr'
			{
				newLeafNode(otherlv_0, grammarAccess.getRcAccess().getRcrKeyword_0_0());
			}
			    |
			otherlv_1='rcl'
			{
				newLeafNode(otherlv_1, grammarAccess.getRcAccess().getRclKeyword_0_1());
			}
		)
		{
			newCompositeNode(grammarAccess.getRcAccess().getOperationWithTwoRegistersParserRuleCall_1());
		}
		this_OperationWithTwoRegisters_2=ruleOperationWithTwoRegisters
		{
			$current = $this_OperationWithTwoRegisters_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleJumpOp
entryRuleJumpOp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJumpOpRule()); }
	iv_ruleJumpOp=ruleJumpOp
	{ $current=$iv_ruleJumpOp.current; }
	EOF;

// Rule JumpOp
ruleJumpOp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='jz'
			{
				newLeafNode(otherlv_0, grammarAccess.getJumpOpAccess().getJzKeyword_0_0());
			}
			    |
			otherlv_1='je'
			{
				newLeafNode(otherlv_1, grammarAccess.getJumpOpAccess().getJeKeyword_0_1());
			}
			    |
			otherlv_2='jnz'
			{
				newLeafNode(otherlv_2, grammarAccess.getJumpOpAccess().getJnzKeyword_0_2());
			}
			    |
			otherlv_3='jne'
			{
				newLeafNode(otherlv_3, grammarAccess.getJumpOpAccess().getJneKeyword_0_3());
			}
			    |
			otherlv_4='jc'
			{
				newLeafNode(otherlv_4, grammarAccess.getJumpOpAccess().getJcKeyword_0_4());
			}
			    |
			otherlv_5='jbl'
			{
				newLeafNode(otherlv_5, grammarAccess.getJumpOpAccess().getJblKeyword_0_5());
			}
			    |
			otherlv_6='jnc'
			{
				newLeafNode(otherlv_6, grammarAccess.getJumpOpAccess().getJncKeyword_0_6());
			}
			    |
			otherlv_7='jae'
			{
				newLeafNode(otherlv_7, grammarAccess.getJumpOpAccess().getJaeKeyword_0_7());
			}
			    |
			otherlv_8='jmp'
			{
				newLeafNode(otherlv_8, grammarAccess.getJumpOpAccess().getJmpKeyword_0_8());
			}
			    |
			otherlv_9='jmpl'
			{
				newLeafNode(otherlv_9, grammarAccess.getJumpOpAccess().getJmplKeyword_0_9());
			}
		)
		(
			{
				newCompositeNode(grammarAccess.getJumpOpAccess().getOperationWithOffsetParserRuleCall_1_0());
			}
			this_OperationWithOffset_10=ruleOperationWithOffset
			{
				$current = $this_OperationWithOffset_10.current;
				afterParserOrEnumRuleCall();
			}
			    |
			(
				(
					lv_op_11_0=RULE_ID
					{
						newLeafNode(lv_op_11_0, grammarAccess.getJumpOpAccess().getOpIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJumpOpRule());
						}
						setWithLastConsumed(
							$current,
							"op",
							lv_op_11_0,
							"org.pds16.Pds16asm.ID");
					}
				)
			)
			    |
			otherlv_12='$'
			{
				newLeafNode(otherlv_12, grammarAccess.getJumpOpAccess().getDollarSignKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleNop
entryRuleNop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNopRule()); }
	iv_ruleNop=ruleNop
	{ $current=$iv_ruleNop.current; }
	EOF;

// Rule Nop
ruleNop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_instruction_0_0='nop'
			{
				newLeafNode(lv_instruction_0_0, grammarAccess.getNopAccess().getInstructionNopKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNopRule());
				}
				setWithLastConsumed($current, "instruction", lv_instruction_0_0, "nop");
			}
		)
	)
;

// Entry rule entryRuleRet
entryRuleRet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRetRule()); }
	iv_ruleRet=ruleRet
	{ $current=$iv_ruleRet.current; }
	EOF;

// Rule Ret
ruleRet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_instruction_0_1='ret'
				{
					newLeafNode(lv_instruction_0_1, grammarAccess.getRetAccess().getInstructionRetKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRetRule());
					}
					setWithLastConsumed($current, "instruction", lv_instruction_0_1, null);
				}
				    |
				lv_instruction_0_2='iret'
				{
					newLeafNode(lv_instruction_0_2, grammarAccess.getRetAccess().getInstructionIretKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRetRule());
					}
					setWithLastConsumed($current, "instruction", lv_instruction_0_2, null);
				}
			)
		)
	)
;

// Entry rule entryRuleImmediate
entryRuleImmediate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImmediateRule()); }
	iv_ruleImmediate=ruleImmediate
	{ $current=$iv_ruleImmediate.current; }
	EOF;

// Rule Immediate
ruleImmediate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getImmediateAccess().getRegisterRegistersParserRuleCall_0_0());
				}
				lv_register_0_0=ruleRegisters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImmediateRule());
					}
					set(
						$current,
						"register",
						lv_register_0_0,
						"org.pds16.Pds16asm.Registers");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=','
		{
			newLeafNode(otherlv_1, grammarAccess.getImmediateAccess().getCommaKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getImmediateAccess().getImmediate8ConstOrLabelParserRuleCall_2_0_0());
					}
					lv_immediate8_2_1=ruleConstOrLabel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImmediateRule());
						}
						set(
							$current,
							"immediate8",
							lv_immediate8_2_1,
							"org.pds16.Pds16asm.ConstOrLabel");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getImmediateAccess().getImmediate8LowOrHightParserRuleCall_2_0_1());
					}
					lv_immediate8_2_2=ruleLowOrHight
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImmediateRule());
						}
						set(
							$current,
							"immediate8",
							lv_immediate8_2_2,
							"org.pds16.Pds16asm.LowOrHight");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDirect
entryRuleDirect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDirectRule()); }
	iv_ruleDirect=ruleDirect
	{ $current=$iv_ruleDirect.current; }
	EOF;

// Rule Direct
ruleDirect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDirectAccess().getRegisterRegistersParserRuleCall_0_0());
				}
				lv_register_0_0=ruleRegisters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDirectRule());
					}
					set(
						$current,
						"register",
						lv_register_0_0,
						"org.pds16.Pds16asm.Registers");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=','
		{
			newLeafNode(otherlv_1, grammarAccess.getDirectAccess().getCommaKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDirectAccess().getDirect7DirectOrLabelParserRuleCall_2_0());
				}
				lv_direct7_2_0=ruleDirectOrLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDirectRule());
					}
					set(
						$current,
						"direct7",
						lv_direct7_2_0,
						"org.pds16.Pds16asm.DirectOrLabel");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIndexed
entryRuleIndexed returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndexedRule()); }
	iv_ruleIndexed=ruleIndexed
	{ $current=$iv_ruleIndexed.current; }
	EOF;

// Rule Indexed
ruleIndexed returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexedAccess().getRdRegistersParserRuleCall_0_0());
				}
				lv_rd_0_0=ruleRegisters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexedRule());
					}
					set(
						$current,
						"rd",
						lv_rd_0_0,
						"org.pds16.Pds16asm.Registers");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=','
		{
			newLeafNode(otherlv_1, grammarAccess.getIndexedAccess().getCommaKeyword_1());
		}
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getIndexedAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexedAccess().getRbxRegistersParserRuleCall_3_0());
				}
				lv_rbx_3_0=ruleRegisters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexedRule());
					}
					set(
						$current,
						"rbx",
						lv_rbx_3_0,
						"org.pds16.Pds16asm.Registers");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getIndexedAccess().getCommaKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexedAccess().getIdx3ConstOrLabelParserRuleCall_5_0());
				}
				lv_idx3_5_0=ruleConstOrLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexedRule());
					}
					set(
						$current,
						"idx3",
						lv_idx3_5_0,
						"org.pds16.Pds16asm.ConstOrLabel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getIndexedAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleBasedIndexed
entryRuleBasedIndexed returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasedIndexedRule()); }
	iv_ruleBasedIndexed=ruleBasedIndexed
	{ $current=$iv_ruleBasedIndexed.current; }
	EOF;

// Rule BasedIndexed
ruleBasedIndexed returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBasedIndexedAccess().getRegistersParserRuleCall_0());
		}
		this_Registers_0=ruleRegisters
		{
			$current = $this_Registers_0.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_1=','
		{
			newLeafNode(otherlv_1, grammarAccess.getBasedIndexedAccess().getCommaKeyword_1());
		}
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getBasedIndexedAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBasedIndexedAccess().getRbxRegistersParserRuleCall_3_0());
				}
				lv_rbx_3_0=ruleRegisters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBasedIndexedRule());
					}
					set(
						$current,
						"rbx",
						lv_rbx_3_0,
						"org.pds16.Pds16asm.Registers");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getBasedIndexedAccess().getCommaKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBasedIndexedAccess().getRixRegistersParserRuleCall_5_0());
				}
				lv_rix_5_0=ruleRegisters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBasedIndexedRule());
					}
					set(
						$current,
						"rix",
						lv_rix_5_0,
						"org.pds16.Pds16asm.Registers");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getBasedIndexedAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDirectOrLabel
entryRuleDirectOrLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDirectOrLabelRule()); }
	iv_ruleDirectOrLabel=ruleDirectOrLabel
	{ $current=$iv_ruleDirectOrLabel.current; }
	EOF;

// Rule DirectOrLabel
ruleDirectOrLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDirectOrLabelAccess().getNumberNumberParserRuleCall_0_0());
				}
				lv_number_0_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDirectOrLabelRule());
					}
					set(
						$current,
						"number",
						lv_number_0_0,
						"org.pds16.Pds16asm.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_label_1_0=RULE_ID
				{
					newLeafNode(lv_label_1_0, grammarAccess.getDirectOrLabelAccess().getLabelIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDirectOrLabelRule());
					}
					setWithLastConsumed(
						$current,
						"label",
						lv_label_1_0,
						"org.pds16.Pds16asm.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleConstOrLabel
entryRuleConstOrLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstOrLabelRule()); }
	iv_ruleConstOrLabel=ruleConstOrLabel
	{ $current=$iv_ruleConstOrLabel.current; }
	EOF;

// Rule ConstOrLabel
ruleConstOrLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='#'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstOrLabelAccess().getNumberSignKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConstOrLabelAccess().getNumberNumberParserRuleCall_1_0_0());
					}
					lv_number_1_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstOrLabelRule());
						}
						set(
							$current,
							"number",
							lv_number_1_0,
							"org.pds16.Pds16asm.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_label_2_0=RULE_ID
					{
						newLeafNode(lv_label_2_0, grammarAccess.getConstOrLabelAccess().getLabelIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConstOrLabelRule());
						}
						setWithLastConsumed(
							$current,
							"label",
							lv_label_2_0,
							"org.pds16.Pds16asm.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleOperationWithTwoRegisters
entryRuleOperationWithTwoRegisters returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationWithTwoRegistersRule()); }
	iv_ruleOperationWithTwoRegisters=ruleOperationWithTwoRegisters
	{ $current=$iv_ruleOperationWithTwoRegisters.current; }
	EOF;

// Rule OperationWithTwoRegisters
ruleOperationWithTwoRegisters returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationWithTwoRegistersAccess().getRdRegistersParserRuleCall_0_0());
				}
				lv_rd_0_0=ruleRegisters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationWithTwoRegistersRule());
					}
					set(
						$current,
						"rd",
						lv_rd_0_0,
						"org.pds16.Pds16asm.Registers");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=','
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationWithTwoRegistersAccess().getCommaKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationWithTwoRegistersAccess().getRmRegistersParserRuleCall_2_0());
				}
				lv_rm_2_0=ruleRegisters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationWithTwoRegistersRule());
					}
					set(
						$current,
						"rm",
						lv_rm_2_0,
						"org.pds16.Pds16asm.Registers");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOperationsWithTreeRegisters
entryRuleOperationsWithTreeRegisters returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationsWithTreeRegistersRule()); }
	iv_ruleOperationsWithTreeRegisters=ruleOperationsWithTreeRegisters
	{ $current=$iv_ruleOperationsWithTreeRegisters.current; }
	EOF;

// Rule OperationsWithTreeRegisters
ruleOperationsWithTreeRegisters returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationsWithTreeRegistersAccess().getRdRegistersParserRuleCall_0_0());
				}
				lv_rd_0_0=ruleRegisters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationsWithTreeRegistersRule());
					}
					set(
						$current,
						"rd",
						lv_rd_0_0,
						"org.pds16.Pds16asm.Registers");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=','
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationsWithTreeRegistersAccess().getCommaKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationsWithTreeRegistersAccess().getRmRegistersParserRuleCall_2_0());
				}
				lv_rm_2_0=ruleRegisters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationsWithTreeRegistersRule());
					}
					set(
						$current,
						"rm",
						lv_rm_2_0,
						"org.pds16.Pds16asm.Registers");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getOperationsWithTreeRegistersAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationsWithTreeRegistersAccess().getRnRegistersParserRuleCall_4_0());
				}
				lv_rn_4_0=ruleRegisters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationsWithTreeRegistersRule());
					}
					set(
						$current,
						"rn",
						lv_rn_4_0,
						"org.pds16.Pds16asm.Registers");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOperationsWithConstant
entryRuleOperationsWithConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationsWithConstantRule()); }
	iv_ruleOperationsWithConstant=ruleOperationsWithConstant
	{ $current=$iv_ruleOperationsWithConstant.current; }
	EOF;

// Rule OperationsWithConstant
ruleOperationsWithConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationsWithConstantAccess().getRdRegistersParserRuleCall_0_0());
				}
				lv_rd_0_0=ruleRegisters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationsWithConstantRule());
					}
					set(
						$current,
						"rd",
						lv_rd_0_0,
						"org.pds16.Pds16asm.Registers");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=','
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationsWithConstantAccess().getCommaKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationsWithConstantAccess().getRmRegistersParserRuleCall_2_0());
				}
				lv_rm_2_0=ruleRegisters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationsWithConstantRule());
					}
					set(
						$current,
						"rm",
						lv_rm_2_0,
						"org.pds16.Pds16asm.Registers");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getOperationsWithConstantAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationsWithConstantAccess().getConst4ConstOrLabelParserRuleCall_4_0());
				}
				lv_const4_4_0=ruleConstOrLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationsWithConstantRule());
					}
					set(
						$current,
						"const4",
						lv_const4_4_0,
						"org.pds16.Pds16asm.ConstOrLabel");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOperationShift
entryRuleOperationShift returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationShiftRule()); }
	iv_ruleOperationShift=ruleOperationShift
	{ $current=$iv_ruleOperationShift.current; }
	EOF;

// Rule OperationShift
ruleOperationShift returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationShiftAccess().getRdRegistersParserRuleCall_0_0());
				}
				lv_rd_0_0=ruleRegisters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationShiftRule());
					}
					set(
						$current,
						"rd",
						lv_rd_0_0,
						"org.pds16.Pds16asm.Registers");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=','
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationShiftAccess().getCommaKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationShiftAccess().getRmRegistersParserRuleCall_2_0());
				}
				lv_rm_2_0=ruleRegisters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationShiftRule());
					}
					set(
						$current,
						"rm",
						lv_rm_2_0,
						"org.pds16.Pds16asm.Registers");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getOperationShiftAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationShiftAccess().getConst4ConstOrLabelParserRuleCall_4_0());
				}
				lv_const4_4_0=ruleConstOrLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationShiftRule());
					}
					set(
						$current,
						"const4",
						lv_const4_4_0,
						"org.pds16.Pds16asm.ConstOrLabel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getOperationShiftAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationShiftAccess().getSinNumberParserRuleCall_6_0());
				}
				lv_sin_6_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationShiftRule());
					}
					set(
						$current,
						"sin",
						lv_sin_6_0,
						"org.pds16.Pds16asm.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOperationWithOffset
entryRuleOperationWithOffset returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationWithOffsetRule()); }
	iv_ruleOperationWithOffset=ruleOperationWithOffset
	{ $current=$iv_ruleOperationWithOffset.current; }
	EOF;

// Rule OperationWithOffset
ruleOperationWithOffset returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationWithOffsetAccess().getRbxRegistersParserRuleCall_0_0());
				}
				lv_rbx_0_0=ruleRegisters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationWithOffsetRule());
					}
					set(
						$current,
						"rbx",
						lv_rbx_0_0,
						"org.pds16.Pds16asm.Registers");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=','
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationWithOffsetAccess().getCommaKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationWithOffsetAccess().getOffset8ConstOrLabelParserRuleCall_2_0());
				}
				lv_offset8_2_0=ruleConstOrLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationWithOffsetRule());
					}
					set(
						$current,
						"offset8",
						lv_offset8_2_0,
						"org.pds16.Pds16asm.ConstOrLabel");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current.getText(); }
	EOF;

// Rule Expression
ruleExpression returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getNumberParserRuleCall_0());
		}
		this_Number_0=ruleNumber
		{
			$current.merge(this_Number_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getExpressionAccess().getIDTerminalRuleCall_1());
		}
	)+
;

// Entry rule entryRuleLowOrHight
entryRuleLowOrHight returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLowOrHightRule()); }
	iv_ruleLowOrHight=ruleLowOrHight
	{ $current=$iv_ruleLowOrHight.current; }
	EOF;

// Rule LowOrHight
ruleLowOrHight returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='#'
		{
			newLeafNode(otherlv_0, grammarAccess.getLowOrHightAccess().getNumberSignKeyword_0());
		}
		(
			otherlv_1='low'
			{
				newLeafNode(otherlv_1, grammarAccess.getLowOrHightAccess().getLowKeyword_1_0());
			}
			    |
			otherlv_2='high'
			{
				newLeafNode(otherlv_2, grammarAccess.getLowOrHightAccess().getHighKeyword_1_1());
			}
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getLowOrHightAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLowOrHightAccess().getValueExpressionParserRuleCall_3_0());
				}
				lv_value_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLowOrHightRule());
					}
					set(
						$current,
						"value",
						lv_value_4_0,
						"org.pds16.Pds16asm.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getLowOrHightAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleRegisters
entryRuleRegisters returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegistersRule()); }
	iv_ruleRegisters=ruleRegisters
	{ $current=$iv_ruleRegisters.current; }
	EOF;

// Rule Registers
ruleRegisters returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_1='r0'
				{
					newLeafNode(lv_value_0_1, grammarAccess.getRegistersAccess().getValueR0Keyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegistersRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_1, null);
				}
				    |
				lv_value_0_2='r1'
				{
					newLeafNode(lv_value_0_2, grammarAccess.getRegistersAccess().getValueR1Keyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegistersRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_2, null);
				}
				    |
				lv_value_0_3='r2'
				{
					newLeafNode(lv_value_0_3, grammarAccess.getRegistersAccess().getValueR2Keyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegistersRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_3, null);
				}
				    |
				lv_value_0_4='r3'
				{
					newLeafNode(lv_value_0_4, grammarAccess.getRegistersAccess().getValueR3Keyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegistersRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_4, null);
				}
				    |
				lv_value_0_5='r4'
				{
					newLeafNode(lv_value_0_5, grammarAccess.getRegistersAccess().getValueR4Keyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegistersRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_5, null);
				}
				    |
				lv_value_0_6='r5'
				{
					newLeafNode(lv_value_0_6, grammarAccess.getRegistersAccess().getValueR5Keyword_0_5());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegistersRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_6, null);
				}
				    |
				lv_value_0_7='r6'
				{
					newLeafNode(lv_value_0_7, grammarAccess.getRegistersAccess().getValueR6Keyword_0_6());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegistersRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_7, null);
				}
				    |
				lv_value_0_8='r7'
				{
					newLeafNode(lv_value_0_8, grammarAccess.getRegistersAccess().getValueR7Keyword_0_7());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegistersRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_8, null);
				}
				    |
				lv_value_0_9='PSW'
				{
					newLeafNode(lv_value_0_9, grammarAccess.getRegistersAccess().getValuePSWKeyword_0_8());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegistersRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_9, null);
				}
			)
		)
	)
;

// Entry rule entryRuleNumber
entryRuleNumber returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNumberRule()); }
	iv_ruleNumber=ruleNumber
	{ $current=$iv_ruleNumber.current.getText(); }
	EOF;

// Rule Number
ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getNumberAccess().getINTTerminalRuleCall_0());
		}
		    |
		this_HEX_1=RULE_HEX
		{
			$current.merge(this_HEX_1);
		}
		{
			newLeafNode(this_HEX_1, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_1());
		}
		    |
		this_OCT_2=RULE_OCT
		{
			$current.merge(this_OCT_2);
		}
		{
			newLeafNode(this_OCT_2, grammarAccess.getNumberAccess().getOCTTerminalRuleCall_2());
		}
		    |
		this_BIN_3=RULE_BIN
		{
			$current.merge(this_BIN_3);
		}
		{
			newLeafNode(this_BIN_3, grammarAccess.getNumberAccess().getBINTerminalRuleCall_3());
		}
		    |
		this_CHAR_4=RULE_CHAR
		{
			$current.merge(this_CHAR_4);
		}
		{
			newLeafNode(this_CHAR_4, grammarAccess.getNumberAccess().getCHARTerminalRuleCall_4());
		}
	)
;

RULE_HEX : ('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F')+;

RULE_OCT : '0' ('0'..'7')+;

RULE_BIN : ('0'|'1')+ 'b';

RULE_CHAR : '\'' RULE_ANY_OTHER '\'';

fragment RULE_SIGN : ('-'|'+');

RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : RULE_SIGN? ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : ';' ( options {greedy=false;} : . )*'\n';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

fragment RULE_ANY_OTHER : .;
