/*
 * generated by Xtext 2.9.2
 */
grammar InternalPds16asm;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.pds16.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.pds16.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.pds16.services.Pds16asmGrammarAccess;

}
@parser::members {
	private Pds16asmGrammarAccess grammarAccess;

	public void setGrammarAccess(Pds16asmGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRulePDS16ASM
entryRulePDS16ASM
:
{ before(grammarAccess.getPDS16ASMRule()); }
	 rulePDS16ASM
{ after(grammarAccess.getPDS16ASMRule()); } 
	 EOF 
;

// Rule PDS16ASM
rulePDS16ASM 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPDS16ASMAccess().getInstuctionsAssignment()); }
		(rule__PDS16ASM__InstuctionsAssignment)*
		{ after(grammarAccess.getPDS16ASMAccess().getInstuctionsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstructions
entryRuleInstructions
:
{ before(grammarAccess.getInstructionsRule()); }
	 ruleInstructions
{ after(grammarAccess.getInstructionsRule()); } 
	 EOF 
;

// Rule Instructions
ruleInstructions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionsAccess().getAlternatives()); }
		(rule__Instructions__Alternatives)
		{ after(grammarAccess.getInstructionsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComment
entryRuleComment
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommentAccess().getCommentAssignment()); }
		(rule__Comment__CommentAssignment)
		{ after(grammarAccess.getCommentAccess().getCommentAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoad
entryRuleLoad
:
{ before(grammarAccess.getLoadRule()); }
	 ruleLoad
{ after(grammarAccess.getLoadRule()); } 
	 EOF 
;

// Rule Load
ruleLoad 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoadAccess().getAlternatives()); }
		(rule__Load__Alternatives)
		{ after(grammarAccess.getLoadAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStore
entryRuleStore
:
{ before(grammarAccess.getStoreRule()); }
	 ruleStore
{ after(grammarAccess.getStoreRule()); } 
	 EOF 
;

// Rule Store
ruleStore 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStoreAccess().getAlternatives()); }
		(rule__Store__Alternatives)
		{ after(grammarAccess.getStoreAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAritmetica
entryRuleAritmetica
:
{ before(grammarAccess.getAritmeticaRule()); }
	 ruleAritmetica
{ after(grammarAccess.getAritmeticaRule()); } 
	 EOF 
;

// Rule Aritmetica
ruleAritmetica 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAritmeticaAccess().getAlternatives()); }
		(rule__Aritmetica__Alternatives)
		{ after(grammarAccess.getAritmeticaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogica
entryRuleLogica
:
{ before(grammarAccess.getLogicaRule()); }
	 ruleLogica
{ after(grammarAccess.getLogicaRule()); } 
	 EOF 
;

// Rule Logica
ruleLogica 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicaAccess().getAlternatives()); }
		(rule__Logica__Alternatives)
		{ after(grammarAccess.getLogicaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJump
entryRuleJump
:
{ before(grammarAccess.getJumpRule()); }
	 ruleJump
{ after(grammarAccess.getJumpRule()); } 
	 EOF 
;

// Rule Jump
ruleJump 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJumpAccess().getJumpOpParserRuleCall()); }
		ruleJumpOp
		{ after(grammarAccess.getJumpAccess().getJumpOpParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLdImmediate
entryRuleLdImmediate
:
{ before(grammarAccess.getLdImmediateRule()); }
	 ruleLdImmediate
{ after(grammarAccess.getLdImmediateRule()); } 
	 EOF 
;

// Rule LdImmediate
ruleLdImmediate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLdImmediateAccess().getGroup()); }
		(rule__LdImmediate__Group__0)
		{ after(grammarAccess.getLdImmediateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLdDirect
entryRuleLdDirect
:
{ before(grammarAccess.getLdDirectRule()); }
	 ruleLdDirect
{ after(grammarAccess.getLdDirectRule()); } 
	 EOF 
;

// Rule LdDirect
ruleLdDirect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLdDirectAccess().getGroup()); }
		(rule__LdDirect__Group__0)
		{ after(grammarAccess.getLdDirectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLdIndexed
entryRuleLdIndexed
:
{ before(grammarAccess.getLdIndexedRule()); }
	 ruleLdIndexed
{ after(grammarAccess.getLdIndexedRule()); } 
	 EOF 
;

// Rule LdIndexed
ruleLdIndexed 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLdIndexedAccess().getGroup()); }
		(rule__LdIndexed__Group__0)
		{ after(grammarAccess.getLdIndexedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLdBasedIndexed
entryRuleLdBasedIndexed
:
{ before(grammarAccess.getLdBasedIndexedRule()); }
	 ruleLdBasedIndexed
{ after(grammarAccess.getLdBasedIndexedRule()); } 
	 EOF 
;

// Rule LdBasedIndexed
ruleLdBasedIndexed 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLdBasedIndexedAccess().getGroup()); }
		(rule__LdBasedIndexed__Group__0)
		{ after(grammarAccess.getLdBasedIndexedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStDirect
entryRuleStDirect
:
{ before(grammarAccess.getStDirectRule()); }
	 ruleStDirect
{ after(grammarAccess.getStDirectRule()); } 
	 EOF 
;

// Rule StDirect
ruleStDirect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStDirectAccess().getGroup()); }
		(rule__StDirect__Group__0)
		{ after(grammarAccess.getStDirectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStIndexed
entryRuleStIndexed
:
{ before(grammarAccess.getStIndexedRule()); }
	 ruleStIndexed
{ after(grammarAccess.getStIndexedRule()); } 
	 EOF 
;

// Rule StIndexed
ruleStIndexed 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStIndexedAccess().getGroup()); }
		(rule__StIndexed__Group__0)
		{ after(grammarAccess.getStIndexedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStBasedIndexed
entryRuleStBasedIndexed
:
{ before(grammarAccess.getStBasedIndexedRule()); }
	 ruleStBasedIndexed
{ after(grammarAccess.getStBasedIndexedRule()); } 
	 EOF 
;

// Rule StBasedIndexed
ruleStBasedIndexed 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStBasedIndexedAccess().getGroup()); }
		(rule__StBasedIndexed__Group__0)
		{ after(grammarAccess.getStBasedIndexedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdd
entryRuleAdd
:
{ before(grammarAccess.getAddRule()); }
	 ruleAdd
{ after(grammarAccess.getAddRule()); } 
	 EOF 
;

// Rule Add
ruleAdd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddAccess().getGroup()); }
		(rule__Add__Group__0)
		{ after(grammarAccess.getAddAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSub
entryRuleSub
:
{ before(grammarAccess.getSubRule()); }
	 ruleSub
{ after(grammarAccess.getSubRule()); } 
	 EOF 
;

// Rule Sub
ruleSub 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubAccess().getAlternatives()); }
		(rule__Sub__Alternatives)
		{ after(grammarAccess.getSubAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnl
entryRuleAnl
:
{ before(grammarAccess.getAnlRule()); }
	 ruleAnl
{ after(grammarAccess.getAnlRule()); } 
	 EOF 
;

// Rule Anl
ruleAnl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnlAccess().getGroup()); }
		(rule__Anl__Group__0)
		{ after(grammarAccess.getAnlAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrl
entryRuleOrl
:
{ before(grammarAccess.getOrlRule()); }
	 ruleOrl
{ after(grammarAccess.getOrlRule()); } 
	 EOF 
;

// Rule Orl
ruleOrl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrlAccess().getGroup()); }
		(rule__Orl__Group__0)
		{ after(grammarAccess.getOrlAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXrl
entryRuleXrl
:
{ before(grammarAccess.getXrlRule()); }
	 ruleXrl
{ after(grammarAccess.getXrlRule()); } 
	 EOF 
;

// Rule Xrl
ruleXrl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXrlAccess().getGroup()); }
		(rule__Xrl__Group__0)
		{ after(grammarAccess.getXrlAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNot
entryRuleNot
:
{ before(grammarAccess.getNotRule()); }
	 ruleNot
{ after(grammarAccess.getNotRule()); } 
	 EOF 
;

// Rule Not
ruleNot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotAccess().getGroup()); }
		(rule__Not__Group__0)
		{ after(grammarAccess.getNotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShl
entryRuleShl
:
{ before(grammarAccess.getShlRule()); }
	 ruleShl
{ after(grammarAccess.getShlRule()); } 
	 EOF 
;

// Rule Shl
ruleShl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShlAccess().getGroup()); }
		(rule__Shl__Group__0)
		{ after(grammarAccess.getShlAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShr
entryRuleShr
:
{ before(grammarAccess.getShrRule()); }
	 ruleShr
{ after(grammarAccess.getShrRule()); } 
	 EOF 
;

// Rule Shr
ruleShr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShrAccess().getGroup()); }
		(rule__Shr__Group__0)
		{ after(grammarAccess.getShrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRr
entryRuleRr
:
{ before(grammarAccess.getRrRule()); }
	 ruleRr
{ after(grammarAccess.getRrRule()); } 
	 EOF 
;

// Rule Rr
ruleRr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRrAccess().getGroup()); }
		(rule__Rr__Group__0)
		{ after(grammarAccess.getRrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRc
entryRuleRc
:
{ before(grammarAccess.getRcRule()); }
	 ruleRc
{ after(grammarAccess.getRcRule()); } 
	 EOF 
;

// Rule Rc
ruleRc 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRcAccess().getGroup()); }
		(rule__Rc__Group__0)
		{ after(grammarAccess.getRcAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJumpOp
entryRuleJumpOp
:
{ before(grammarAccess.getJumpOpRule()); }
	 ruleJumpOp
{ after(grammarAccess.getJumpOpRule()); } 
	 EOF 
;

// Rule JumpOp
ruleJumpOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJumpOpAccess().getGroup()); }
		(rule__JumpOp__Group__0)
		{ after(grammarAccess.getJumpOpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImmediate
entryRuleImmediate
:
{ before(grammarAccess.getImmediateRule()); }
	 ruleImmediate
{ after(grammarAccess.getImmediateRule()); } 
	 EOF 
;

// Rule Immediate
ruleImmediate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImmediateAccess().getGroup()); }
		(rule__Immediate__Group__0)
		{ after(grammarAccess.getImmediateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDirect
entryRuleDirect
:
{ before(grammarAccess.getDirectRule()); }
	 ruleDirect
{ after(grammarAccess.getDirectRule()); } 
	 EOF 
;

// Rule Direct
ruleDirect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirectAccess().getGroup()); }
		(rule__Direct__Group__0)
		{ after(grammarAccess.getDirectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndexed
entryRuleIndexed
:
{ before(grammarAccess.getIndexedRule()); }
	 ruleIndexed
{ after(grammarAccess.getIndexedRule()); } 
	 EOF 
;

// Rule Indexed
ruleIndexed 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexedAccess().getGroup()); }
		(rule__Indexed__Group__0)
		{ after(grammarAccess.getIndexedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasedIndexed
entryRuleBasedIndexed
:
{ before(grammarAccess.getBasedIndexedRule()); }
	 ruleBasedIndexed
{ after(grammarAccess.getBasedIndexedRule()); } 
	 EOF 
;

// Rule BasedIndexed
ruleBasedIndexed 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasedIndexedAccess().getGroup()); }
		(rule__BasedIndexed__Group__0)
		{ after(grammarAccess.getBasedIndexedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntOrHexOrString
entryRuleIntOrHexOrString
:
{ before(grammarAccess.getIntOrHexOrStringRule()); }
	 ruleIntOrHexOrString
{ after(grammarAccess.getIntOrHexOrStringRule()); } 
	 EOF 
;

// Rule IntOrHexOrString
ruleIntOrHexOrString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntOrHexOrStringAccess().getAlternatives()); }
		(rule__IntOrHexOrString__Alternatives)
		{ after(grammarAccess.getIntOrHexOrStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationWithTwoRegisters
entryRuleOperationWithTwoRegisters
:
{ before(grammarAccess.getOperationWithTwoRegistersRule()); }
	 ruleOperationWithTwoRegisters
{ after(grammarAccess.getOperationWithTwoRegistersRule()); } 
	 EOF 
;

// Rule OperationWithTwoRegisters
ruleOperationWithTwoRegisters 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationWithTwoRegistersAccess().getGroup()); }
		(rule__OperationWithTwoRegisters__Group__0)
		{ after(grammarAccess.getOperationWithTwoRegistersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationsWithTreeRegisters
entryRuleOperationsWithTreeRegisters
:
{ before(grammarAccess.getOperationsWithTreeRegistersRule()); }
	 ruleOperationsWithTreeRegisters
{ after(grammarAccess.getOperationsWithTreeRegistersRule()); } 
	 EOF 
;

// Rule OperationsWithTreeRegisters
ruleOperationsWithTreeRegisters 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationsWithTreeRegistersAccess().getGroup()); }
		(rule__OperationsWithTreeRegisters__Group__0)
		{ after(grammarAccess.getOperationsWithTreeRegistersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationsWithConstant
entryRuleOperationsWithConstant
:
{ before(grammarAccess.getOperationsWithConstantRule()); }
	 ruleOperationsWithConstant
{ after(grammarAccess.getOperationsWithConstantRule()); } 
	 EOF 
;

// Rule OperationsWithConstant
ruleOperationsWithConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationsWithConstantAccess().getGroup()); }
		(rule__OperationsWithConstant__Group__0)
		{ after(grammarAccess.getOperationsWithConstantAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationShift
entryRuleOperationShift
:
{ before(grammarAccess.getOperationShiftRule()); }
	 ruleOperationShift
{ after(grammarAccess.getOperationShiftRule()); } 
	 EOF 
;

// Rule OperationShift
ruleOperationShift 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationShiftAccess().getGroup()); }
		(rule__OperationShift__Group__0)
		{ after(grammarAccess.getOperationShiftAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationWithOffset
entryRuleOperationWithOffset
:
{ before(grammarAccess.getOperationWithOffsetRule()); }
	 ruleOperationWithOffset
{ after(grammarAccess.getOperationWithOffsetRule()); } 
	 EOF 
;

// Rule OperationWithOffset
ruleOperationWithOffset 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationWithOffsetAccess().getGroup()); }
		(rule__OperationWithOffset__Group__0)
		{ after(grammarAccess.getOperationWithOffsetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegisters
entryRuleRegisters
:
{ before(grammarAccess.getRegistersRule()); }
	 ruleRegisters
{ after(grammarAccess.getRegistersRule()); } 
	 EOF 
;

// Rule Registers
ruleRegisters 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegistersAccess().getValueAssignment()); }
		(rule__Registers__ValueAssignment)
		{ after(grammarAccess.getRegistersAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getInstructionsParserRuleCall_0()); }
		ruleInstructions
		{ after(grammarAccess.getStatementAccess().getInstructionsParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getCommentParserRuleCall_1()); }
		ruleComment
		{ after(grammarAccess.getStatementAccess().getCommentParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instructions__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionsAccess().getLoadParserRuleCall_0()); }
		ruleLoad
		{ after(grammarAccess.getInstructionsAccess().getLoadParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionsAccess().getStoreParserRuleCall_1()); }
		ruleStore
		{ after(grammarAccess.getInstructionsAccess().getStoreParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionsAccess().getAritmeticaParserRuleCall_2()); }
		ruleAritmetica
		{ after(grammarAccess.getInstructionsAccess().getAritmeticaParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionsAccess().getLogicaParserRuleCall_3()); }
		ruleLogica
		{ after(grammarAccess.getInstructionsAccess().getLogicaParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionsAccess().getJumpParserRuleCall_4()); }
		ruleJump
		{ after(grammarAccess.getInstructionsAccess().getJumpParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoadAccess().getLdImmediateParserRuleCall_0()); }
		ruleLdImmediate
		{ after(grammarAccess.getLoadAccess().getLdImmediateParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLoadAccess().getLdDirectParserRuleCall_1()); }
		ruleLdDirect
		{ after(grammarAccess.getLoadAccess().getLdDirectParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLoadAccess().getLdIndexedParserRuleCall_2()); }
		ruleLdIndexed
		{ after(grammarAccess.getLoadAccess().getLdIndexedParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLoadAccess().getLdBasedIndexedParserRuleCall_3()); }
		ruleLdBasedIndexed
		{ after(grammarAccess.getLoadAccess().getLdBasedIndexedParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoreAccess().getStDirectParserRuleCall_0()); }
		ruleStDirect
		{ after(grammarAccess.getStoreAccess().getStDirectParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStoreAccess().getStIndexedParserRuleCall_1()); }
		ruleStIndexed
		{ after(grammarAccess.getStoreAccess().getStIndexedParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStoreAccess().getStBasedIndexedParserRuleCall_2()); }
		ruleStBasedIndexed
		{ after(grammarAccess.getStoreAccess().getStBasedIndexedParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aritmetica__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAritmeticaAccess().getAddParserRuleCall_0()); }
		ruleAdd
		{ after(grammarAccess.getAritmeticaAccess().getAddParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAritmeticaAccess().getSubParserRuleCall_1()); }
		ruleSub
		{ after(grammarAccess.getAritmeticaAccess().getSubParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logica__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicaAccess().getAnlParserRuleCall_0()); }
		ruleAnl
		{ after(grammarAccess.getLogicaAccess().getAnlParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicaAccess().getOrlParserRuleCall_1()); }
		ruleOrl
		{ after(grammarAccess.getLogicaAccess().getOrlParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLogicaAccess().getXrlParserRuleCall_2()); }
		ruleXrl
		{ after(grammarAccess.getLogicaAccess().getXrlParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLogicaAccess().getNotParserRuleCall_3()); }
		ruleNot
		{ after(grammarAccess.getLogicaAccess().getNotParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getLogicaAccess().getShlParserRuleCall_4()); }
		ruleShl
		{ after(grammarAccess.getLogicaAccess().getShlParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getLogicaAccess().getShrParserRuleCall_5()); }
		ruleShr
		{ after(grammarAccess.getLogicaAccess().getShrParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getLogicaAccess().getRrParserRuleCall_6()); }
		ruleRr
		{ after(grammarAccess.getLogicaAccess().getRrParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getLogicaAccess().getRcParserRuleCall_7()); }
		ruleRc
		{ after(grammarAccess.getLogicaAccess().getRcParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LdImmediate__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLdImmediateAccess().getLdiKeyword_0_0()); }
		'ldi'
		{ after(grammarAccess.getLdImmediateAccess().getLdiKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLdImmediateAccess().getLdihKeyword_0_1()); }
		'ldih'
		{ after(grammarAccess.getLdImmediateAccess().getLdihKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LdDirect__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLdDirectAccess().getLdKeyword_0_0()); }
		'ld'
		{ after(grammarAccess.getLdDirectAccess().getLdKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLdDirectAccess().getLdbKeyword_0_1()); }
		'ldb'
		{ after(grammarAccess.getLdDirectAccess().getLdbKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LdIndexed__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLdIndexedAccess().getLdKeyword_0_0()); }
		'ld'
		{ after(grammarAccess.getLdIndexedAccess().getLdKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLdIndexedAccess().getLdbKeyword_0_1()); }
		'ldb'
		{ after(grammarAccess.getLdIndexedAccess().getLdbKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LdBasedIndexed__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLdBasedIndexedAccess().getLdKeyword_0_0()); }
		'ld'
		{ after(grammarAccess.getLdBasedIndexedAccess().getLdKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLdBasedIndexedAccess().getLdbKeyword_0_1()); }
		'ldb'
		{ after(grammarAccess.getLdBasedIndexedAccess().getLdbKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StDirect__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStDirectAccess().getStKeyword_0_0()); }
		'st'
		{ after(grammarAccess.getStDirectAccess().getStKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStDirectAccess().getStbKeyword_0_1()); }
		'stb'
		{ after(grammarAccess.getStDirectAccess().getStbKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StIndexed__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStIndexedAccess().getStKeyword_0_0()); }
		'st'
		{ after(grammarAccess.getStIndexedAccess().getStKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStIndexedAccess().getStbKeyword_0_1()); }
		'stb'
		{ after(grammarAccess.getStIndexedAccess().getStbKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StBasedIndexed__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStBasedIndexedAccess().getStKeyword_0_0()); }
		'st'
		{ after(grammarAccess.getStBasedIndexedAccess().getStKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStBasedIndexedAccess().getStbKeyword_0_1()); }
		'stb'
		{ after(grammarAccess.getStBasedIndexedAccess().getStbKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getAddKeyword_0_0()); }
		'add'
		{ after(grammarAccess.getAddAccess().getAddKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddAccess().getAddfKeyword_0_1()); }
		'addf'
		{ after(grammarAccess.getAddAccess().getAddfKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getAddAccess().getAdcKeyword_0_2()); }
		'adc'
		{ after(grammarAccess.getAddAccess().getAdcKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getAddAccess().getAdcfKeyword_0_3()); }
		'adcf'
		{ after(grammarAccess.getAddAccess().getAdcfKeyword_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getOperationsWithConstantParserRuleCall_1_0()); }
		ruleOperationsWithConstant
		{ after(grammarAccess.getAddAccess().getOperationsWithConstantParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddAccess().getOperationsWithTreeRegistersParserRuleCall_1_1()); }
		ruleOperationsWithTreeRegisters
		{ after(grammarAccess.getAddAccess().getOperationsWithTreeRegistersParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubAccess().getGroup_0()); }
		(rule__Sub__Group_0__0)
		{ after(grammarAccess.getSubAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubAccess().getGroup_1()); }
		(rule__Sub__Group_1__0)
		{ after(grammarAccess.getSubAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubAccess().getSubKeyword_0_0_0()); }
		'sub'
		{ after(grammarAccess.getSubAccess().getSubKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubAccess().getSubfKeyword_0_0_1()); }
		'subf'
		{ after(grammarAccess.getSubAccess().getSubfKeyword_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSubAccess().getSbbKeyword_0_0_2()); }
		'sbb'
		{ after(grammarAccess.getSubAccess().getSbbKeyword_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getSubAccess().getSbbfKeyword_0_0_3()); }
		'sbbf'
		{ after(grammarAccess.getSubAccess().getSbbfKeyword_0_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubAccess().getOperationsWithConstantParserRuleCall_0_1_0()); }
		ruleOperationsWithConstant
		{ after(grammarAccess.getSubAccess().getOperationsWithConstantParserRuleCall_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubAccess().getOperationsWithTreeRegistersParserRuleCall_0_1_1()); }
		ruleOperationsWithTreeRegisters
		{ after(grammarAccess.getSubAccess().getOperationsWithTreeRegistersParserRuleCall_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Anl__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnlAccess().getAnlKeyword_0_0()); }
		'anl'
		{ after(grammarAccess.getAnlAccess().getAnlKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnlAccess().getAnlfKeyword_0_1()); }
		'anlf'
		{ after(grammarAccess.getAnlAccess().getAnlfKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Orl__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrlAccess().getOrlKeyword_0_0()); }
		'orl'
		{ after(grammarAccess.getOrlAccess().getOrlKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrlAccess().getOrlfKeyword_0_1()); }
		'orlf'
		{ after(grammarAccess.getOrlAccess().getOrlfKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Xrl__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXrlAccess().getXrlKeyword_0_0()); }
		'xrl'
		{ after(grammarAccess.getXrlAccess().getXrlKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getXrlAccess().getXrlfKeyword_0_1()); }
		'xrlf'
		{ after(grammarAccess.getXrlAccess().getXrlfKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotAccess().getNotKeyword_0_0()); }
		'not'
		{ after(grammarAccess.getNotAccess().getNotKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNotAccess().getNotfKeyword_0_1()); }
		'notf'
		{ after(grammarAccess.getNotAccess().getNotfKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rr__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRrAccess().getRrlKeyword_0_0()); }
		'rrl'
		{ after(grammarAccess.getRrAccess().getRrlKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRrAccess().getRrmKeyword_0_1()); }
		'rrm'
		{ after(grammarAccess.getRrAccess().getRrmKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rc__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRcAccess().getRcrKeyword_0_0()); }
		'rcr'
		{ after(grammarAccess.getRcAccess().getRcrKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRcAccess().getRclKeyword_0_1()); }
		'rcl'
		{ after(grammarAccess.getRcAccess().getRclKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpOp__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJumpOpAccess().getJzKeyword_0_0()); }
		'jz'
		{ after(grammarAccess.getJumpOpAccess().getJzKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getJumpOpAccess().getJeKeyword_0_1()); }
		'je'
		{ after(grammarAccess.getJumpOpAccess().getJeKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getJumpOpAccess().getJnzKeyword_0_2()); }
		'jnz'
		{ after(grammarAccess.getJumpOpAccess().getJnzKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getJumpOpAccess().getJneKeyword_0_3()); }
		'jne'
		{ after(grammarAccess.getJumpOpAccess().getJneKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getJumpOpAccess().getJcKeyword_0_4()); }
		'jc'
		{ after(grammarAccess.getJumpOpAccess().getJcKeyword_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getJumpOpAccess().getJblKeyword_0_5()); }
		'jbl'
		{ after(grammarAccess.getJumpOpAccess().getJblKeyword_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getJumpOpAccess().getJncKeyword_0_6()); }
		'jnc'
		{ after(grammarAccess.getJumpOpAccess().getJncKeyword_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getJumpOpAccess().getJaeKeyword_0_7()); }
		'jae'
		{ after(grammarAccess.getJumpOpAccess().getJaeKeyword_0_7()); }
	)
	|
	(
		{ before(grammarAccess.getJumpOpAccess().getJmpKeyword_0_8()); }
		'jmp'
		{ after(grammarAccess.getJumpOpAccess().getJmpKeyword_0_8()); }
	)
	|
	(
		{ before(grammarAccess.getJumpOpAccess().getJmplKeyword_0_9()); }
		'jmpl'
		{ after(grammarAccess.getJumpOpAccess().getJmplKeyword_0_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpOp__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJumpOpAccess().getOperationWithOffsetParserRuleCall_1_0()); }
		ruleOperationWithOffset
		{ after(grammarAccess.getJumpOpAccess().getOperationWithOffsetParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getJumpOpAccess().getOpAssignment_1_1()); }
		(rule__JumpOp__OpAssignment_1_1)
		{ after(grammarAccess.getJumpOpAccess().getOpAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectAccess().getINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getDirectAccess().getINTTerminalRuleCall_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirectAccess().getHEXTerminalRuleCall_2_1()); }
		RULE_HEX
		{ after(grammarAccess.getDirectAccess().getHEXTerminalRuleCall_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getDirectAccess().getSTRINGTerminalRuleCall_2_2()); }
		RULE_STRING
		{ after(grammarAccess.getDirectAccess().getSTRINGTerminalRuleCall_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOrHexOrString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntOrHexOrStringAccess().getGroup_0()); }
		(rule__IntOrHexOrString__Group_0__0)
		{ after(grammarAccess.getIntOrHexOrStringAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getIntOrHexOrStringAccess().getGroup_1()); }
		(rule__IntOrHexOrString__Group_1__0)
		{ after(grammarAccess.getIntOrHexOrStringAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getIntOrHexOrStringAccess().getLabelAssignment_2()); }
		(rule__IntOrHexOrString__LabelAssignment_2)
		{ after(grammarAccess.getIntOrHexOrStringAccess().getLabelAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Registers__ValueAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegistersAccess().getValueR0Keyword_0_0()); }
		'r0'
		{ after(grammarAccess.getRegistersAccess().getValueR0Keyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRegistersAccess().getValueR1Keyword_0_1()); }
		'r1'
		{ after(grammarAccess.getRegistersAccess().getValueR1Keyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRegistersAccess().getValueR2Keyword_0_2()); }
		'r2'
		{ after(grammarAccess.getRegistersAccess().getValueR2Keyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getRegistersAccess().getValueR3Keyword_0_3()); }
		'r3'
		{ after(grammarAccess.getRegistersAccess().getValueR3Keyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getRegistersAccess().getValueR4Keyword_0_4()); }
		'r4'
		{ after(grammarAccess.getRegistersAccess().getValueR4Keyword_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getRegistersAccess().getValueR5Keyword_0_5()); }
		'r5'
		{ after(grammarAccess.getRegistersAccess().getValueR5Keyword_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getRegistersAccess().getValueR6Keyword_0_6()); }
		'r6'
		{ after(grammarAccess.getRegistersAccess().getValueR6Keyword_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getRegistersAccess().getValueR7Keyword_0_7()); }
		'r7'
		{ after(grammarAccess.getRegistersAccess().getValueR7Keyword_0_7()); }
	)
	|
	(
		{ before(grammarAccess.getRegistersAccess().getValuePSWKeyword_0_8()); }
		'PSW'
		{ after(grammarAccess.getRegistersAccess().getValuePSWKeyword_0_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LdImmediate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LdImmediate__Group__0__Impl
	rule__LdImmediate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LdImmediate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLdImmediateAccess().getAlternatives_0()); }
	(rule__LdImmediate__Alternatives_0)
	{ after(grammarAccess.getLdImmediateAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LdImmediate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LdImmediate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LdImmediate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLdImmediateAccess().getImmediateParserRuleCall_1()); }
	ruleImmediate
	{ after(grammarAccess.getLdImmediateAccess().getImmediateParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LdDirect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LdDirect__Group__0__Impl
	rule__LdDirect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LdDirect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLdDirectAccess().getAlternatives_0()); }
	(rule__LdDirect__Alternatives_0)
	{ after(grammarAccess.getLdDirectAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LdDirect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LdDirect__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LdDirect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLdDirectAccess().getDirectParserRuleCall_1()); }
	ruleDirect
	{ after(grammarAccess.getLdDirectAccess().getDirectParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LdIndexed__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LdIndexed__Group__0__Impl
	rule__LdIndexed__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LdIndexed__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLdIndexedAccess().getAlternatives_0()); }
	(rule__LdIndexed__Alternatives_0)
	{ after(grammarAccess.getLdIndexedAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LdIndexed__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LdIndexed__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LdIndexed__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLdIndexedAccess().getIndexedParserRuleCall_1()); }
	ruleIndexed
	{ after(grammarAccess.getLdIndexedAccess().getIndexedParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LdBasedIndexed__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LdBasedIndexed__Group__0__Impl
	rule__LdBasedIndexed__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LdBasedIndexed__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLdBasedIndexedAccess().getAlternatives_0()); }
	(rule__LdBasedIndexed__Alternatives_0)
	{ after(grammarAccess.getLdBasedIndexedAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LdBasedIndexed__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LdBasedIndexed__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LdBasedIndexed__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLdBasedIndexedAccess().getBasedIndexedParserRuleCall_1()); }
	ruleBasedIndexed
	{ after(grammarAccess.getLdBasedIndexedAccess().getBasedIndexedParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StDirect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StDirect__Group__0__Impl
	rule__StDirect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StDirect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStDirectAccess().getAlternatives_0()); }
	(rule__StDirect__Alternatives_0)
	{ after(grammarAccess.getStDirectAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StDirect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StDirect__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StDirect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStDirectAccess().getDirectParserRuleCall_1()); }
	ruleDirect
	{ after(grammarAccess.getStDirectAccess().getDirectParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StIndexed__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StIndexed__Group__0__Impl
	rule__StIndexed__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StIndexed__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStIndexedAccess().getAlternatives_0()); }
	(rule__StIndexed__Alternatives_0)
	{ after(grammarAccess.getStIndexedAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StIndexed__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StIndexed__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StIndexed__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStIndexedAccess().getIndexedParserRuleCall_1()); }
	ruleIndexed
	{ after(grammarAccess.getStIndexedAccess().getIndexedParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StBasedIndexed__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StBasedIndexed__Group__0__Impl
	rule__StBasedIndexed__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StBasedIndexed__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStBasedIndexedAccess().getAlternatives_0()); }
	(rule__StBasedIndexed__Alternatives_0)
	{ after(grammarAccess.getStBasedIndexedAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StBasedIndexed__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StBasedIndexed__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StBasedIndexed__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStBasedIndexedAccess().getBasedIndexedParserRuleCall_1()); }
	ruleBasedIndexed
	{ after(grammarAccess.getStBasedIndexedAccess().getBasedIndexedParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__0__Impl
	rule__Add__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getAlternatives_0()); }
	(rule__Add__Alternatives_0)
	{ after(grammarAccess.getAddAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getAlternatives_1()); }
	(rule__Add__Alternatives_1)
	{ after(grammarAccess.getAddAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sub__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sub__Group_0__0__Impl
	rule__Sub__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAccess().getAlternatives_0_0()); }
	(rule__Sub__Alternatives_0_0)
	{ after(grammarAccess.getSubAccess().getAlternatives_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sub__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAccess().getAlternatives_0_1()); }
	(rule__Sub__Alternatives_0_1)
	{ after(grammarAccess.getSubAccess().getAlternatives_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sub__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sub__Group_1__0__Impl
	rule__Sub__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAccess().getSubrKeyword_1_0()); }
	'subr'
	{ after(grammarAccess.getSubAccess().getSubrKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sub__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAccess().getOperationsWithTreeRegistersParserRuleCall_1_1()); }
	ruleOperationsWithTreeRegisters
	{ after(grammarAccess.getSubAccess().getOperationsWithTreeRegistersParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Anl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Anl__Group__0__Impl
	rule__Anl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Anl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnlAccess().getAlternatives_0()); }
	(rule__Anl__Alternatives_0)
	{ after(grammarAccess.getAnlAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Anl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Anl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Anl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnlAccess().getOperationsWithTreeRegistersParserRuleCall_1()); }
	ruleOperationsWithTreeRegisters
	{ after(grammarAccess.getAnlAccess().getOperationsWithTreeRegistersParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Orl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Orl__Group__0__Impl
	rule__Orl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Orl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrlAccess().getAlternatives_0()); }
	(rule__Orl__Alternatives_0)
	{ after(grammarAccess.getOrlAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Orl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Orl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Orl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrlAccess().getOperationsWithTreeRegistersParserRuleCall_1()); }
	ruleOperationsWithTreeRegisters
	{ after(grammarAccess.getOrlAccess().getOperationsWithTreeRegistersParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Xrl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Xrl__Group__0__Impl
	rule__Xrl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Xrl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXrlAccess().getAlternatives_0()); }
	(rule__Xrl__Alternatives_0)
	{ after(grammarAccess.getXrlAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Xrl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Xrl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Xrl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXrlAccess().getOperationsWithTreeRegistersParserRuleCall_1()); }
	ruleOperationsWithTreeRegisters
	{ after(grammarAccess.getXrlAccess().getOperationsWithTreeRegistersParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Not__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Not__Group__0__Impl
	rule__Not__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotAccess().getAlternatives_0()); }
	(rule__Not__Alternatives_0)
	{ after(grammarAccess.getNotAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Not__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotAccess().getOperationWithTwoRegistersParserRuleCall_1()); }
	ruleOperationWithTwoRegisters
	{ after(grammarAccess.getNotAccess().getOperationWithTwoRegistersParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shl__Group__0__Impl
	rule__Shl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShlAccess().getShlKeyword_0()); }
	'shl'
	{ after(grammarAccess.getShlAccess().getShlKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShlAccess().getOperationShiftParserRuleCall_1()); }
	ruleOperationShift
	{ after(grammarAccess.getShlAccess().getOperationShiftParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shr__Group__0__Impl
	rule__Shr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShrAccess().getShrKeyword_0()); }
	'shr'
	{ after(grammarAccess.getShrAccess().getShrKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShrAccess().getOperationShiftParserRuleCall_1()); }
	ruleOperationShift
	{ after(grammarAccess.getShrAccess().getOperationShiftParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rr__Group__0__Impl
	rule__Rr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRrAccess().getAlternatives_0()); }
	(rule__Rr__Alternatives_0)
	{ after(grammarAccess.getRrAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRrAccess().getOperationsWithConstantParserRuleCall_1()); }
	ruleOperationsWithConstant
	{ after(grammarAccess.getRrAccess().getOperationsWithConstantParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rc__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rc__Group__0__Impl
	rule__Rc__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rc__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRcAccess().getAlternatives_0()); }
	(rule__Rc__Alternatives_0)
	{ after(grammarAccess.getRcAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rc__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rc__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rc__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRcAccess().getOperationWithTwoRegistersParserRuleCall_1()); }
	ruleOperationWithTwoRegisters
	{ after(grammarAccess.getRcAccess().getOperationWithTwoRegistersParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JumpOp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JumpOp__Group__0__Impl
	rule__JumpOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpOp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJumpOpAccess().getAlternatives_0()); }
	(rule__JumpOp__Alternatives_0)
	{ after(grammarAccess.getJumpOpAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpOp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JumpOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpOp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJumpOpAccess().getAlternatives_1()); }
	(rule__JumpOp__Alternatives_1)
	{ after(grammarAccess.getJumpOpAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Immediate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Immediate__Group__0__Impl
	rule__Immediate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Immediate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImmediateAccess().getRegisterAssignment_0()); }
	(rule__Immediate__RegisterAssignment_0)
	{ after(grammarAccess.getImmediateAccess().getRegisterAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Immediate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Immediate__Group__1__Impl
	rule__Immediate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Immediate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImmediateAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getImmediateAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Immediate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Immediate__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Immediate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImmediateAccess().getImmediate8Assignment_2()); }
	(rule__Immediate__Immediate8Assignment_2)
	{ after(grammarAccess.getImmediateAccess().getImmediate8Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct__Group__0__Impl
	rule__Direct__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAccess().getRegisterAssignment_0()); }
	(rule__Direct__RegisterAssignment_0)
	{ after(grammarAccess.getDirectAccess().getRegisterAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct__Group__1__Impl
	rule__Direct__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getDirectAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectAccess().getAlternatives_2()); }
	(rule__Direct__Alternatives_2)
	{ after(grammarAccess.getDirectAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Indexed__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Indexed__Group__0__Impl
	rule__Indexed__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Indexed__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexedAccess().getRdAssignment_0()); }
	(rule__Indexed__RdAssignment_0)
	{ after(grammarAccess.getIndexedAccess().getRdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indexed__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Indexed__Group__1__Impl
	rule__Indexed__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Indexed__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexedAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getIndexedAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indexed__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Indexed__Group__2__Impl
	rule__Indexed__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Indexed__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexedAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getIndexedAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indexed__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Indexed__Group__3__Impl
	rule__Indexed__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Indexed__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexedAccess().getRbxAssignment_3()); }
	(rule__Indexed__RbxAssignment_3)
	{ after(grammarAccess.getIndexedAccess().getRbxAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indexed__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Indexed__Group__4__Impl
	rule__Indexed__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Indexed__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexedAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getIndexedAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indexed__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Indexed__Group__5__Impl
	rule__Indexed__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Indexed__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexedAccess().getIdx3Assignment_5()); }
	(rule__Indexed__Idx3Assignment_5)
	{ after(grammarAccess.getIndexedAccess().getIdx3Assignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indexed__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Indexed__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Indexed__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexedAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getIndexedAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasedIndexed__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasedIndexed__Group__0__Impl
	rule__BasedIndexed__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasedIndexed__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasedIndexedAccess().getRegistersParserRuleCall_0()); }
	ruleRegisters
	{ after(grammarAccess.getBasedIndexedAccess().getRegistersParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasedIndexed__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasedIndexed__Group__1__Impl
	rule__BasedIndexed__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BasedIndexed__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasedIndexedAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getBasedIndexedAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasedIndexed__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasedIndexed__Group__2__Impl
	rule__BasedIndexed__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BasedIndexed__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasedIndexedAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getBasedIndexedAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasedIndexed__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasedIndexed__Group__3__Impl
	rule__BasedIndexed__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BasedIndexed__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasedIndexedAccess().getRbxAssignment_3()); }
	(rule__BasedIndexed__RbxAssignment_3)
	{ after(grammarAccess.getBasedIndexedAccess().getRbxAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasedIndexed__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasedIndexed__Group__4__Impl
	rule__BasedIndexed__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BasedIndexed__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasedIndexedAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getBasedIndexedAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasedIndexed__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasedIndexed__Group__5__Impl
	rule__BasedIndexed__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BasedIndexed__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasedIndexedAccess().getRixAssignment_5()); }
	(rule__BasedIndexed__RixAssignment_5)
	{ after(grammarAccess.getBasedIndexedAccess().getRixAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasedIndexed__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasedIndexed__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasedIndexed__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasedIndexedAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getBasedIndexedAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntOrHexOrString__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntOrHexOrString__Group_0__0__Impl
	rule__IntOrHexOrString__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOrHexOrString__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntOrHexOrStringAccess().getNumberSignKeyword_0_0()); }
	'#'
	{ after(grammarAccess.getIntOrHexOrStringAccess().getNumberSignKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOrHexOrString__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntOrHexOrString__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOrHexOrString__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntOrHexOrStringAccess().getIntAssignment_0_1()); }
	(rule__IntOrHexOrString__IntAssignment_0_1)
	{ after(grammarAccess.getIntOrHexOrStringAccess().getIntAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntOrHexOrString__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntOrHexOrString__Group_1__0__Impl
	rule__IntOrHexOrString__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOrHexOrString__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntOrHexOrStringAccess().getNumberSignKeyword_1_0()); }
	'#'
	{ after(grammarAccess.getIntOrHexOrStringAccess().getNumberSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOrHexOrString__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntOrHexOrString__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOrHexOrString__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntOrHexOrStringAccess().getHexAssignment_1_1()); }
	(rule__IntOrHexOrString__HexAssignment_1_1)
	{ after(grammarAccess.getIntOrHexOrStringAccess().getHexAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationWithTwoRegisters__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationWithTwoRegisters__Group__0__Impl
	rule__OperationWithTwoRegisters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationWithTwoRegisters__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationWithTwoRegistersAccess().getRdAssignment_0()); }
	(rule__OperationWithTwoRegisters__RdAssignment_0)
	{ after(grammarAccess.getOperationWithTwoRegistersAccess().getRdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationWithTwoRegisters__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationWithTwoRegisters__Group__1__Impl
	rule__OperationWithTwoRegisters__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationWithTwoRegisters__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationWithTwoRegistersAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getOperationWithTwoRegistersAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationWithTwoRegisters__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationWithTwoRegisters__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationWithTwoRegisters__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationWithTwoRegistersAccess().getRmAssignment_2()); }
	(rule__OperationWithTwoRegisters__RmAssignment_2)
	{ after(grammarAccess.getOperationWithTwoRegistersAccess().getRmAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationsWithTreeRegisters__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationsWithTreeRegisters__Group__0__Impl
	rule__OperationsWithTreeRegisters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithTreeRegisters__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationsWithTreeRegistersAccess().getRdAssignment_0()); }
	(rule__OperationsWithTreeRegisters__RdAssignment_0)
	{ after(grammarAccess.getOperationsWithTreeRegistersAccess().getRdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithTreeRegisters__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationsWithTreeRegisters__Group__1__Impl
	rule__OperationsWithTreeRegisters__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithTreeRegisters__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationsWithTreeRegistersAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getOperationsWithTreeRegistersAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithTreeRegisters__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationsWithTreeRegisters__Group__2__Impl
	rule__OperationsWithTreeRegisters__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithTreeRegisters__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationsWithTreeRegistersAccess().getRmAssignment_2()); }
	(rule__OperationsWithTreeRegisters__RmAssignment_2)
	{ after(grammarAccess.getOperationsWithTreeRegistersAccess().getRmAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithTreeRegisters__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationsWithTreeRegisters__Group__3__Impl
	rule__OperationsWithTreeRegisters__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithTreeRegisters__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationsWithTreeRegistersAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getOperationsWithTreeRegistersAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithTreeRegisters__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationsWithTreeRegisters__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithTreeRegisters__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationsWithTreeRegistersAccess().getRnAssignment_4()); }
	(rule__OperationsWithTreeRegisters__RnAssignment_4)
	{ after(grammarAccess.getOperationsWithTreeRegistersAccess().getRnAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationsWithConstant__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationsWithConstant__Group__0__Impl
	rule__OperationsWithConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithConstant__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationsWithConstantAccess().getRdAssignment_0()); }
	(rule__OperationsWithConstant__RdAssignment_0)
	{ after(grammarAccess.getOperationsWithConstantAccess().getRdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithConstant__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationsWithConstant__Group__1__Impl
	rule__OperationsWithConstant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithConstant__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationsWithConstantAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getOperationsWithConstantAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithConstant__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationsWithConstant__Group__2__Impl
	rule__OperationsWithConstant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithConstant__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationsWithConstantAccess().getRmAssignment_2()); }
	(rule__OperationsWithConstant__RmAssignment_2)
	{ after(grammarAccess.getOperationsWithConstantAccess().getRmAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithConstant__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationsWithConstant__Group__3__Impl
	rule__OperationsWithConstant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithConstant__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationsWithConstantAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getOperationsWithConstantAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithConstant__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationsWithConstant__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithConstant__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationsWithConstantAccess().getConst4Assignment_4()); }
	(rule__OperationsWithConstant__Const4Assignment_4)
	{ after(grammarAccess.getOperationsWithConstantAccess().getConst4Assignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationShift__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationShift__Group__0__Impl
	rule__OperationShift__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationShift__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationShiftAccess().getRdAssignment_0()); }
	(rule__OperationShift__RdAssignment_0)
	{ after(grammarAccess.getOperationShiftAccess().getRdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationShift__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationShift__Group__1__Impl
	rule__OperationShift__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationShift__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationShiftAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getOperationShiftAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationShift__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationShift__Group__2__Impl
	rule__OperationShift__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationShift__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationShiftAccess().getRmAssignment_2()); }
	(rule__OperationShift__RmAssignment_2)
	{ after(grammarAccess.getOperationShiftAccess().getRmAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationShift__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationShift__Group__3__Impl
	rule__OperationShift__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationShift__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationShiftAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getOperationShiftAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationShift__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationShift__Group__4__Impl
	rule__OperationShift__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationShift__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationShiftAccess().getConst4Assignment_4()); }
	(rule__OperationShift__Const4Assignment_4)
	{ after(grammarAccess.getOperationShiftAccess().getConst4Assignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationShift__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationShift__Group__5__Impl
	rule__OperationShift__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationShift__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationShiftAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getOperationShiftAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationShift__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationShift__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationShift__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationShiftAccess().getSinAssignment_6()); }
	(rule__OperationShift__SinAssignment_6)
	{ after(grammarAccess.getOperationShiftAccess().getSinAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationWithOffset__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationWithOffset__Group__0__Impl
	rule__OperationWithOffset__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationWithOffset__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationWithOffsetAccess().getRbxAssignment_0()); }
	(rule__OperationWithOffset__RbxAssignment_0)
	{ after(grammarAccess.getOperationWithOffsetAccess().getRbxAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationWithOffset__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationWithOffset__Group__1__Impl
	rule__OperationWithOffset__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationWithOffset__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationWithOffsetAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getOperationWithOffsetAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationWithOffset__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationWithOffset__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationWithOffset__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationWithOffsetAccess().getOffset8Assignment_2()); }
	(rule__OperationWithOffset__Offset8Assignment_2)
	{ after(grammarAccess.getOperationWithOffsetAccess().getOffset8Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PDS16ASM__InstuctionsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPDS16ASMAccess().getInstuctionsStatementParserRuleCall_0()); }
		ruleStatement
		{ after(grammarAccess.getPDS16ASMAccess().getInstuctionsStatementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__CommentAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getCommentCOMTTerminalRuleCall_0()); }
		RULE_COMT
		{ after(grammarAccess.getCommentAccess().getCommentCOMTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpOp__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJumpOpAccess().getOpSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getJumpOpAccess().getOpSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Immediate__RegisterAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImmediateAccess().getRegisterRegistersParserRuleCall_0_0()); }
		ruleRegisters
		{ after(grammarAccess.getImmediateAccess().getRegisterRegistersParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Immediate__Immediate8Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImmediateAccess().getImmediate8IntOrHexOrStringParserRuleCall_2_0()); }
		ruleIntOrHexOrString
		{ after(grammarAccess.getImmediateAccess().getImmediate8IntOrHexOrStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct__RegisterAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectAccess().getRegisterRegistersParserRuleCall_0_0()); }
		ruleRegisters
		{ after(grammarAccess.getDirectAccess().getRegisterRegistersParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indexed__RdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexedAccess().getRdRegistersParserRuleCall_0_0()); }
		ruleRegisters
		{ after(grammarAccess.getIndexedAccess().getRdRegistersParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indexed__RbxAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexedAccess().getRbxRegistersParserRuleCall_3_0()); }
		ruleRegisters
		{ after(grammarAccess.getIndexedAccess().getRbxRegistersParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indexed__Idx3Assignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexedAccess().getIdx3IntOrHexOrStringParserRuleCall_5_0()); }
		ruleIntOrHexOrString
		{ after(grammarAccess.getIndexedAccess().getIdx3IntOrHexOrStringParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasedIndexed__RbxAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasedIndexedAccess().getRbxRegistersParserRuleCall_3_0()); }
		ruleRegisters
		{ after(grammarAccess.getBasedIndexedAccess().getRbxRegistersParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasedIndexed__RixAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasedIndexedAccess().getRixRegistersParserRuleCall_5_0()); }
		ruleRegisters
		{ after(grammarAccess.getBasedIndexedAccess().getRixRegistersParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOrHexOrString__IntAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntOrHexOrStringAccess().getIntINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getIntOrHexOrStringAccess().getIntINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOrHexOrString__HexAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntOrHexOrStringAccess().getHexHEXTerminalRuleCall_1_1_0()); }
		RULE_HEX
		{ after(grammarAccess.getIntOrHexOrStringAccess().getHexHEXTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOrHexOrString__LabelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntOrHexOrStringAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getIntOrHexOrStringAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationWithTwoRegisters__RdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationWithTwoRegistersAccess().getRdRegistersParserRuleCall_0_0()); }
		ruleRegisters
		{ after(grammarAccess.getOperationWithTwoRegistersAccess().getRdRegistersParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationWithTwoRegisters__RmAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationWithTwoRegistersAccess().getRmRegistersParserRuleCall_2_0()); }
		ruleRegisters
		{ after(grammarAccess.getOperationWithTwoRegistersAccess().getRmRegistersParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithTreeRegisters__RdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationsWithTreeRegistersAccess().getRdRegistersParserRuleCall_0_0()); }
		ruleRegisters
		{ after(grammarAccess.getOperationsWithTreeRegistersAccess().getRdRegistersParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithTreeRegisters__RmAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationsWithTreeRegistersAccess().getRmRegistersParserRuleCall_2_0()); }
		ruleRegisters
		{ after(grammarAccess.getOperationsWithTreeRegistersAccess().getRmRegistersParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithTreeRegisters__RnAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationsWithTreeRegistersAccess().getRnRegistersParserRuleCall_4_0()); }
		ruleRegisters
		{ after(grammarAccess.getOperationsWithTreeRegistersAccess().getRnRegistersParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithConstant__RdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationsWithConstantAccess().getRdRegistersParserRuleCall_0_0()); }
		ruleRegisters
		{ after(grammarAccess.getOperationsWithConstantAccess().getRdRegistersParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithConstant__RmAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationsWithConstantAccess().getRmRegistersParserRuleCall_2_0()); }
		ruleRegisters
		{ after(grammarAccess.getOperationsWithConstantAccess().getRmRegistersParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsWithConstant__Const4Assignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationsWithConstantAccess().getConst4IntOrHexOrStringParserRuleCall_4_0()); }
		ruleIntOrHexOrString
		{ after(grammarAccess.getOperationsWithConstantAccess().getConst4IntOrHexOrStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationShift__RdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationShiftAccess().getRdRegistersParserRuleCall_0_0()); }
		ruleRegisters
		{ after(grammarAccess.getOperationShiftAccess().getRdRegistersParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationShift__RmAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationShiftAccess().getRmRegistersParserRuleCall_2_0()); }
		ruleRegisters
		{ after(grammarAccess.getOperationShiftAccess().getRmRegistersParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationShift__Const4Assignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationShiftAccess().getConst4IntOrHexOrStringParserRuleCall_4_0()); }
		ruleIntOrHexOrString
		{ after(grammarAccess.getOperationShiftAccess().getConst4IntOrHexOrStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationShift__SinAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationShiftAccess().getSinINTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getOperationShiftAccess().getSinINTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationWithOffset__RbxAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationWithOffsetAccess().getRbxRegistersParserRuleCall_0_0()); }
		ruleRegisters
		{ after(grammarAccess.getOperationWithOffsetAccess().getRbxRegistersParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationWithOffset__Offset8Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationWithOffsetAccess().getOffset8IntOrHexOrStringParserRuleCall_2_0()); }
		ruleIntOrHexOrString
		{ after(grammarAccess.getOperationWithOffsetAccess().getOffset8IntOrHexOrStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Registers__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegistersAccess().getValueAlternatives_0()); }
		(rule__Registers__ValueAlternatives_0)
		{ after(grammarAccess.getRegistersAccess().getValueAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_HEX : '0' ('x'|'X') ('0'..'9'|'a'..'f'|'A'..'F')+;

RULE_OWNSTRING : ('\\' .|~(('\\'|'"')))*;

RULE_COMT : ';' ( options {greedy=false;} : . )*'\n';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
