/**
 * generated by Xtext 2.10.0-SNAPSHOT
 */
package org.pds16.pds16asm.ui.outline;

import com.google.common.base.Objects;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.swt.graphics.Image;
import org.eclipse.xtext.ui.editor.outline.IOutlineNode;
import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider;
import org.pds16.pds16asm.pds16asm.Bss;
import org.pds16.pds16asm.pds16asm.Data;
import org.pds16.pds16asm.pds16asm.Directive;
import org.pds16.pds16asm.pds16asm.End;
import org.pds16.pds16asm.pds16asm.Equ;
import org.pds16.pds16asm.pds16asm.Label;
import org.pds16.pds16asm.pds16asm.Org;
import org.pds16.pds16asm.pds16asm.Section;
import org.pds16.pds16asm.pds16asm.Set;
import org.pds16.pds16asm.pds16asm.Text;
import org.pds16.pds16asm.pds16asm.impl.DirectiveImpl;

/**
 * Customization of the default outline structure.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#outline
 */
@SuppressWarnings("all")
public class Pds16asmOutlineTreeProvider extends DefaultOutlineTreeProvider {
  @Override
  public void _createNode(final IOutlineNode parentNode, final EObject modelElement) {
    if ((modelElement instanceof Label)) {
      this.setOutline(parentNode, modelElement);
    } else {
      if ((modelElement instanceof Directive)) {
        EObject element = ((DirectiveImpl) modelElement).getValue();
        if (((((((((element instanceof Bss) || 
          (element instanceof Data)) || 
          (element instanceof End)) || 
          (element instanceof Text)) || 
          (element instanceof Equ)) || 
          (element instanceof Set)) || 
          (element instanceof Org)) || 
          (element instanceof Section))) {
          this.setOutline(parentNode, element);
        }
      }
    }
  }
  
  /**
   * This method is used to create a new outline node and to the current element
   * received by parameter
   * 
   * @param parentNode the parentNode is a node associated to the outline view
   * @param obj the obj is a representation of an element of the grammar
   */
  public void setOutline(final IOutlineNode parentNode, final EObject obj) {
    Object text = this.textDispatcher.invoke(obj);
    if ((Objects.equal(text, null) && (this.isLeafDispatcher.invoke(obj)).booleanValue())) {
      return;
    }
    Image image = this.imageDispatcher.invoke(obj);
    this.createEObjectNode(parentNode, obj, image, text, true);
  }
}
